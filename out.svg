<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="678" onload="init(evt)" viewBox="0 0 1200 678" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="678.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="661" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="661" > </text>
<g id="frames">
<g >
<title>net/http.(*Transport).RoundTrip (1 samples, 0.12%)</title><rect x="30.5" y="309" width="1.4" height="15.0" fill="rgb(251,179,34)" rx="2" ry="2" />
<text  x="33.47" y="319.5" ></text>
</g>
<g >
<title>crypto/sha256.(*digest).Sum (1 samples, 0.12%)</title><rect x="726.5" y="453" width="1.4" height="15.0" fill="rgb(217,169,44)" rx="2" ry="2" />
<text  x="729.48" y="463.5" ></text>
</g>
<g >
<title>encoding/json.mapEncoder.encode (1 samples, 0.12%)</title><rect x="904.9" y="421" width="1.4" height="15.0" fill="rgb(247,209,43)" rx="2" ry="2" />
<text  x="907.87" y="431.5" ></text>
</g>
<g >
<title>runtime.findObject (1 samples, 0.12%)</title><rect x="1001.4" y="149" width="1.4" height="15.0" fill="rgb(210,94,5)" rx="2" ry="2" />
<text  x="1004.38" y="159.5" ></text>
</g>
<g >
<title>reflect.mapiterinit (1 samples, 0.12%)</title><rect x="953.1" y="357" width="1.5" height="15.0" fill="rgb(213,137,54)" rx="2" ry="2" />
<text  x="956.12" y="367.5" ></text>
</g>
<g >
<title>encoding/json.checkValid (1 samples, 0.12%)</title><rect x="925.3" y="357" width="1.5" height="15.0" fill="rgb(219,114,25)" rx="2" ry="2" />
<text  x="928.34" y="367.5" ></text>
</g>
<g >
<title>vendor/golang.org/long long/crypto/cryptobyte.(*Builder).addLengthPrefixed (1 samples, 0.12%)</title><rect x="739.6" y="485" width="1.5" height="15.0" fill="rgb(207,201,0)" rx="2" ry="2" />
<text  x="742.64" y="495.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.is_blankz (5 samples, 0.62%)</title><rect x="875.6" y="293" width="7.3" height="15.0" fill="rgb(207,203,33)" rx="2" ry="2" />
<text  x="878.63" y="303.5" ></text>
</g>
<g >
<title>runtime.mstart (17 samples, 2.11%)</title><rect x="1165.1" y="613" width="24.9" height="15.0" fill="rgb(248,183,12)" rx="2" ry="2" />
<text  x="1168.14" y="623.5" >r..</text>
</g>
<g >
<title>github.com/json-iterator/go.(*Iterator).skipObject (3 samples, 0.37%)</title><rect x="1013.1" y="277" width="4.4" height="15.0" fill="rgb(228,129,30)" rx="2" ry="2" />
<text  x="1016.07" y="287.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (2 samples, 0.25%)</title><rect x="978.0" y="181" width="2.9" height="15.0" fill="rgb(217,76,13)" rx="2" ry="2" />
<text  x="980.98" y="191.5" ></text>
</g>
<g >
<title>github.com/json-iterator/go.(*fourFieldsStructDecoder).Decode (12 samples, 1.49%)</title><rect x="1010.1" y="453" width="17.6" height="15.0" fill="rgb(245,16,14)" rx="2" ry="2" />
<text  x="1013.15" y="463.5" ></text>
</g>
<g >
<title>runtime.markroot (12 samples, 1.49%)</title><rect x="1084.7" y="549" width="17.6" height="15.0" fill="rgb(227,168,42)" rx="2" ry="2" />
<text  x="1087.72" y="559.5" ></text>
</g>
<g >
<title>syscall.Write (1 samples, 0.12%)</title><rect x="774.7" y="453" width="1.5" height="15.0" fill="rgb(252,195,18)" rx="2" ry="2" />
<text  x="777.73" y="463.5" ></text>
</g>
<g >
<title>crypto/tls.(*cipherSuiteTLS13).deriveSecret (2 samples, 0.25%)</title><rect x="742.6" y="533" width="2.9" height="15.0" fill="rgb(241,37,13)" rx="2" ry="2" />
<text  x="745.57" y="543.5" ></text>
</g>
<g >
<title>github.com/json-iterator/go.(*Iterator).ReadObjectCB (1 samples, 0.12%)</title><rect x="1016.0" y="197" width="1.5" height="15.0" fill="rgb(217,220,47)" rx="2" ry="2" />
<text  x="1019.00" y="207.5" ></text>
</g>
<g >
<title>runtime.getitab (1 samples, 0.12%)</title><rect x="935.6" y="421" width="1.4" height="15.0" fill="rgb(244,11,53)" rx="2" ry="2" />
<text  x="938.58" y="431.5" ></text>
</g>
<g >
<title>runtime.scanobject (2 samples, 0.25%)</title><rect x="978.0" y="149" width="2.9" height="15.0" fill="rgb(214,190,46)" rx="2" ry="2" />
<text  x="980.98" y="159.5" ></text>
</g>
<g >
<title>runtime.(*_type).typeOff (1 samples, 0.12%)</title><rect x="960.4" y="229" width="1.5" height="15.0" fill="rgb(231,101,3)" rx="2" ry="2" />
<text  x="963.43" y="239.5" ></text>
</g>
<g >
<title>net.(*OpError).Temporary (1 samples, 0.12%)</title><rect x="1064.3" y="565" width="1.4" height="15.0" fill="rgb(214,64,27)" rx="2" ry="2" />
<text  x="1067.25" y="575.5" ></text>
</g>
<g >
<title>bufio.(*Reader).Read (1 samples, 0.12%)</title><rect x="808.4" y="437" width="1.4" height="15.0" fill="rgb(247,218,3)" rx="2" ry="2" />
<text  x="811.36" y="447.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.12%)</title><rect x="849.3" y="437" width="1.5" height="15.0" fill="rgb(215,161,19)" rx="2" ry="2" />
<text  x="852.31" y="447.5" ></text>
</g>
<g >
<title>github.com/gogo/protobuf/jsonpb.(*Unmarshaler).unmarshalValue (14 samples, 1.73%)</title><rect x="909.3" y="421" width="20.4" height="15.0" fill="rgb(238,219,1)" rx="2" ry="2" />
<text  x="912.26" y="431.5" ></text>
</g>
<g >
<title>crypto/sha256.block (1 samples, 0.12%)</title><rect x="727.9" y="517" width="1.5" height="15.0" fill="rgb(253,10,41)" rx="2" ry="2" />
<text  x="730.94" y="527.5" ></text>
</g>
<g >
<title>net/http.(*Transport).RoundTrip (1 samples, 0.12%)</title><rect x="26.1" y="309" width="1.4" height="15.0" fill="rgb(213,220,3)" rx="2" ry="2" />
<text  x="29.08" y="319.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).reflectValue (9 samples, 1.12%)</title><rect x="940.0" y="309" width="13.1" height="15.0" fill="rgb(227,89,5)" rx="2" ry="2" />
<text  x="942.96" y="319.5" ></text>
</g>
<g >
<title>vendor/golang.org/long long/crypto/curve25519.ScalarMult (14 samples, 1.73%)</title><rect x="45.1" y="517" width="20.5" height="15.0" fill="rgb(223,65,16)" rx="2" ry="2" />
<text  x="48.09" y="527.5" ></text>
</g>
<g >
<title>runtime.growslice (1 samples, 0.12%)</title><rect x="923.9" y="341" width="1.4" height="15.0" fill="rgb(225,162,13)" rx="2" ry="2" />
<text  x="926.88" y="351.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (1 samples, 0.12%)</title><rect x="956.0" y="325" width="1.5" height="15.0" fill="rgb(239,214,9)" rx="2" ry="2" />
<text  x="959.05" y="335.5" ></text>
</g>
<g >
<title>runtime.epollwait (3 samples, 0.37%)</title><rect x="1165.1" y="549" width="4.4" height="15.0" fill="rgb(231,111,3)" rx="2" ry="2" />
<text  x="1168.14" y="559.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.yaml_parser_fetch_more_tokens (23 samples, 2.85%)</title><rect x="868.3" y="357" width="33.6" height="15.0" fill="rgb(216,0,43)" rx="2" ry="2" />
<text  x="871.31" y="367.5" >go..</text>
</g>
<g >
<title>runtime.memclrHasPointers (1 samples, 0.12%)</title><rect x="773.3" y="565" width="1.4" height="15.0" fill="rgb(219,120,29)" rx="2" ry="2" />
<text  x="776.27" y="575.5" ></text>
</g>
<g >
<title>k8s.io/client-go/rest.(*Request).Do (1 samples, 0.12%)</title><rect x="26.1" y="421" width="1.4" height="15.0" fill="rgb(216,43,11)" rx="2" ry="2" />
<text  x="29.08" y="431.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.12%)</title><rect x="866.9" y="373" width="1.4" height="15.0" fill="rgb(239,147,35)" rx="2" ry="2" />
<text  x="869.85" y="383.5" ></text>
</g>
<g >
<title>path.Clean (1 samples, 0.12%)</title><rect x="804.0" y="533" width="1.4" height="15.0" fill="rgb(215,57,51)" rx="2" ry="2" />
<text  x="806.98" y="543.5" ></text>
</g>
<g >
<title>runtime.systemstack (4 samples, 0.50%)</title><rect x="997.0" y="229" width="5.8" height="15.0" fill="rgb(241,197,52)" rx="2" ry="2" />
<text  x="999.99" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1 samples, 0.12%)</title><rect x="903.4" y="373" width="1.5" height="15.0" fill="rgb(234,113,14)" rx="2" ry="2" />
<text  x="906.41" y="383.5" ></text>
</g>
<g >
<title>math/big.greaterThan (1 samples, 0.12%)</title><rect x="74.3" y="389" width="1.5" height="15.0" fill="rgb(236,180,7)" rx="2" ry="2" />
<text  x="77.34" y="399.5" ></text>
</g>
<g >
<title>github.com/ghodss/yaml.yamlToJSON (12 samples, 1.49%)</title><rect x="940.0" y="453" width="17.5" height="15.0" fill="rgb(230,6,32)" rx="2" ry="2" />
<text  x="942.96" y="463.5" ></text>
</g>
<g >
<title>encoding/json.Unmarshal (1 samples, 0.12%)</title><rect x="925.3" y="373" width="1.5" height="15.0" fill="rgb(253,61,47)" rx="2" ry="2" />
<text  x="928.34" y="383.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (1 samples, 0.12%)</title><rect x="71.4" y="357" width="1.5" height="15.0" fill="rgb(221,118,27)" rx="2" ry="2" />
<text  x="74.41" y="367.5" ></text>
</g>
<g >
<title>vendor/golang.org/long long/crypto/cryptobyte.(*Builder).addLengthPrefixed (1 samples, 0.12%)</title><rect x="744.0" y="501" width="1.5" height="15.0" fill="rgb(239,161,49)" rx="2" ry="2" />
<text  x="747.03" y="511.5" ></text>
</g>
<g >
<title>runtime.profilealloc (1 samples, 0.12%)</title><rect x="947.3" y="213" width="1.4" height="15.0" fill="rgb(231,172,47)" rx="2" ry="2" />
<text  x="950.27" y="223.5" ></text>
</g>
<g >
<title>runtime.systemstack (48 samples, 5.95%)</title><rect x="1075.9" y="597" width="70.2" height="15.0" fill="rgb(222,188,44)" rx="2" ry="2" />
<text  x="1078.95" y="607.5" >runtime..</text>
</g>
<g >
<title>encoding/json.(*decodeState).object (1 samples, 0.12%)</title><rect x="907.8" y="373" width="1.5" height="15.0" fill="rgb(219,52,16)" rx="2" ry="2" />
<text  x="910.79" y="383.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.yaml_parser_fetch_flow_scalar (12 samples, 1.49%)</title><rect x="869.8" y="325" width="17.5" height="15.0" fill="rgb(245,215,20)" rx="2" ry="2" />
<text  x="872.78" y="335.5" ></text>
</g>
<g >
<title>crypto/tls.(*Conn).writeRecordLocked (14 samples, 1.73%)</title><rect x="780.6" y="533" width="20.5" height="15.0" fill="rgb(219,76,2)" rx="2" ry="2" />
<text  x="783.58" y="543.5" ></text>
</g>
<g >
<title>github.com/json-iterator/go.(*Iterator).skipObject.func1 (1 samples, 0.12%)</title><rect x="1016.0" y="245" width="1.5" height="15.0" fill="rgb(220,108,13)" rx="2" ry="2" />
<text  x="1019.00" y="255.5" ></text>
</g>
<g >
<title>runtime.mallocgc (3 samples, 0.37%)</title><rect x="882.9" y="261" width="4.4" height="15.0" fill="rgb(220,186,20)" rx="2" ry="2" />
<text  x="885.94" y="271.5" ></text>
</g>
<g >
<title>crypto/sha256.(*digest).Write (1 samples, 0.12%)</title><rect x="735.3" y="469" width="1.4" height="15.0" fill="rgb(212,138,4)" rx="2" ry="2" />
<text  x="738.25" y="479.5" ></text>
</g>
<g >
<title>syscall.Syscall (1 samples, 0.12%)</title><rect x="29.0" y="69" width="1.5" height="15.0" fill="rgb(207,52,50)" rx="2" ry="2" />
<text  x="32.01" y="79.5" ></text>
</g>
<g >
<title>net.(*netFD).Write (1 samples, 0.12%)</title><rect x="774.7" y="469" width="1.5" height="15.0" fill="rgb(225,142,5)" rx="2" ry="2" />
<text  x="777.73" y="479.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.12%)</title><rect x="863.9" y="293" width="1.5" height="15.0" fill="rgb(240,0,35)" rx="2" ry="2" />
<text  x="866.93" y="303.5" ></text>
</g>
<g >
<title>crypto/tls.(*Conn).readRecord (2 samples, 0.25%)</title><rect x="65.6" y="533" width="2.9" height="15.0" fill="rgb(234,158,41)" rx="2" ry="2" />
<text  x="68.56" y="543.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush.func1 (2 samples, 0.25%)</title><rect x="1049.6" y="373" width="3.0" height="15.0" fill="rgb(239,126,23)" rx="2" ry="2" />
<text  x="1052.63" y="383.5" ></text>
</g>
<g >
<title>net/http.Header.WriteSubset (2 samples, 0.25%)</title><rect x="777.7" y="549" width="2.9" height="15.0" fill="rgb(220,193,37)" rx="2" ry="2" />
<text  x="780.66" y="559.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.12%)</title><rect x="923.9" y="325" width="1.4" height="15.0" fill="rgb(227,204,54)" rx="2" ry="2" />
<text  x="926.88" y="335.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.yaml_parser_parse_flow_mapping_key (1 samples, 0.12%)</title><rect x="861.0" y="261" width="1.5" height="15.0" fill="rgb(222,55,20)" rx="2" ry="2" />
<text  x="864.00" y="271.5" ></text>
</g>
<g >
<title>runtime.puintptr.ptr (1 samples, 0.12%)</title><rect x="1163.7" y="565" width="1.4" height="15.0" fill="rgb(207,137,25)" rx="2" ry="2" />
<text  x="1166.68" y="575.5" ></text>
</g>
<g >
<title>math/big.(*Int).ModInverse (17 samples, 2.11%)</title><rect x="678.2" y="453" width="24.9" height="15.0" fill="rgb(239,127,15)" rx="2" ry="2" />
<text  x="681.23" y="463.5" >m..</text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.12%)</title><rect x="842.0" y="341" width="1.5" height="15.0" fill="rgb(222,173,7)" rx="2" ry="2" />
<text  x="845.00" y="351.5" ></text>
</g>
<g >
<title>net/http.(*Server).ListenAndServeTLS (7 samples, 0.87%)</title><rect x="15.8" y="597" width="10.3" height="15.0" fill="rgb(221,119,45)" rx="2" ry="2" />
<text  x="18.85" y="607.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.(*decoder).mapping (6 samples, 0.74%)</title><rect x="850.8" y="389" width="8.7" height="15.0" fill="rgb(248,50,45)" rx="2" ry="2" />
<text  x="853.77" y="399.5" ></text>
</g>
<g >
<title>bufio.(*Reader).Peek (8 samples, 0.99%)</title><rect x="751.3" y="581" width="11.7" height="15.0" fill="rgb(216,25,9)" rx="2" ry="2" />
<text  x="754.34" y="591.5" ></text>
</g>
<g >
<title>syscall.Syscall (5 samples, 0.62%)</title><rect x="754.3" y="389" width="7.3" height="15.0" fill="rgb(242,136,46)" rx="2" ry="2" />
<text  x="757.26" y="399.5" ></text>
</g>
<g >
<title>reflect.mapassign (1 samples, 0.12%)</title><rect x="957.5" y="293" width="1.5" height="15.0" fill="rgb(246,215,9)" rx="2" ry="2" />
<text  x="960.51" y="303.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.12%)</title><rect x="71.4" y="453" width="1.5" height="15.0" fill="rgb(226,178,9)" rx="2" ry="2" />
<text  x="74.41" y="463.5" ></text>
</g>
<g >
<title>runtime.callers (2 samples, 0.25%)</title><rect x="991.1" y="213" width="3.0" height="15.0" fill="rgb(220,61,25)" rx="2" ry="2" />
<text  x="994.14" y="223.5" ></text>
</g>
<g >
<title>runtime.mallocgc (8 samples, 0.99%)</title><rect x="994.1" y="261" width="11.7" height="15.0" fill="rgb(225,117,12)" rx="2" ry="2" />
<text  x="997.06" y="271.5" ></text>
</g>
<g >
<title>vendor/golang.org/long long/crypto/cryptobyte.(*Builder).AddUint8LengthPrefixed (1 samples, 0.12%)</title><rect x="745.5" y="501" width="1.5" height="15.0" fill="rgb(229,32,14)" rx="2" ry="2" />
<text  x="748.49" y="511.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.(*parser).scalar (1 samples, 0.12%)</title><rect x="859.5" y="293" width="1.5" height="15.0" fill="rgb(251,198,9)" rx="2" ry="2" />
<text  x="862.54" y="303.5" ></text>
</g>
<g >
<title>k8s.io/client-go/transport.(*bearerAuthRoundTripper).RoundTrip (1 samples, 0.12%)</title><rect x="26.1" y="325" width="1.4" height="15.0" fill="rgb(206,109,26)" rx="2" ry="2" />
<text  x="29.08" y="335.5" ></text>
</g>
<g >
<title>internal/poll.accept (2 samples, 0.25%)</title><rect x="15.8" y="469" width="3.0" height="15.0" fill="rgb(221,137,26)" rx="2" ry="2" />
<text  x="18.85" y="479.5" ></text>
</g>
<g >
<title>math/big.nat.sub (2 samples, 0.25%)</title><rect x="694.3" y="373" width="2.9" height="15.0" fill="rgb(206,15,50)" rx="2" ry="2" />
<text  x="697.31" y="383.5" ></text>
</g>
<g >
<title>runtime.gentraceback (2 samples, 0.25%)</title><rect x="991.1" y="165" width="3.0" height="15.0" fill="rgb(206,183,15)" rx="2" ry="2" />
<text  x="994.14" y="175.5" ></text>
</g>
<g >
<title>runtime.schedule (3 samples, 0.37%)</title><rect x="1146.1" y="581" width="4.4" height="15.0" fill="rgb(250,28,47)" rx="2" ry="2" />
<text  x="1149.13" y="591.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).scavengeOne (6 samples, 0.74%)</title><rect x="1065.7" y="565" width="8.8" height="15.0" fill="rgb(247,112,6)" rx="2" ry="2" />
<text  x="1068.71" y="575.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Accept (2 samples, 0.25%)</title><rect x="15.8" y="485" width="3.0" height="15.0" fill="rgb(252,87,33)" rx="2" ry="2" />
<text  x="18.85" y="495.5" ></text>
</g>
<g >
<title>encoding/json.interfaceEncoder (5 samples, 0.62%)</title><rect x="828.8" y="389" width="7.3" height="15.0" fill="rgb(209,43,6)" rx="2" ry="2" />
<text  x="831.84" y="399.5" ></text>
</g>
<g >
<title>runtime.scanobject (1 samples, 0.12%)</title><rect x="109.4" y="277" width="1.5" height="15.0" fill="rgb(229,32,22)" rx="2" ry="2" />
<text  x="112.43" y="287.5" ></text>
</g>
<g >
<title>math/big.(*Int).double unsigned __int128::* (1 samples, 0.12%)</title><rect x="704.5" y="453" width="1.5" height="15.0" fill="rgb(206,142,24)" rx="2" ry="2" />
<text  x="707.55" y="463.5" ></text>
</g>
<g >
<title>runtime.scanobject (30 samples, 3.72%)</title><rect x="1102.3" y="549" width="43.8" height="15.0" fill="rgb(233,156,43)" rx="2" ry="2" />
<text  x="1105.27" y="559.5" >runt..</text>
</g>
<g >
<title>bufio.(*Writer).Flush (18 samples, 2.23%)</title><rect x="776.2" y="581" width="26.3" height="15.0" fill="rgb(219,67,34)" rx="2" ry="2" />
<text  x="779.20" y="591.5" >b..</text>
</g>
<g >
<title>math/big.nat.sqr (3 samples, 0.37%)</title><rect x="722.1" y="421" width="4.4" height="15.0" fill="rgb(230,109,16)" rx="2" ry="2" />
<text  x="725.09" y="431.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (1 samples, 0.12%)</title><rect x="863.9" y="261" width="1.5" height="15.0" fill="rgb(218,194,9)" rx="2" ry="2" />
<text  x="866.93" y="271.5" ></text>
</g>
<g >
<title>time.Parse (2 samples, 0.25%)</title><rect x="820.1" y="341" width="2.9" height="15.0" fill="rgb(227,180,5)" rx="2" ry="2" />
<text  x="823.06" y="351.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.12%)</title><rect x="862.5" y="293" width="1.4" height="15.0" fill="rgb(251,5,34)" rx="2" ry="2" />
<text  x="865.47" y="303.5" ></text>
</g>
<g >
<title>runtime.copystack (5 samples, 0.62%)</title><rect x="913.6" y="309" width="7.4" height="15.0" fill="rgb(223,114,48)" rx="2" ry="2" />
<text  x="916.64" y="319.5" ></text>
</g>
<g >
<title>math/big.nat.expNN (14 samples, 1.73%)</title><rect x="706.0" y="437" width="20.5" height="15.0" fill="rgb(213,46,30)" rx="2" ry="2" />
<text  x="709.01" y="447.5" ></text>
</g>
<g >
<title>encoding/json.cachedTypeFields (1 samples, 0.12%)</title><rect x="1035.0" y="405" width="1.5" height="15.0" fill="rgb(221,191,25)" rx="2" ry="2" />
<text  x="1038.01" y="415.5" ></text>
</g>
<g >
<title>encoding/json.interfaceEncoder (3 samples, 0.37%)</title><rect x="830.3" y="293" width="4.4" height="15.0" fill="rgb(213,213,38)" rx="2" ry="2" />
<text  x="833.30" y="303.5" ></text>
</g>
<g >
<title>math/big.(*Int).Sub (1 samples, 0.12%)</title><rect x="703.1" y="453" width="1.4" height="15.0" fill="rgb(247,6,2)" rx="2" ry="2" />
<text  x="706.09" y="463.5" ></text>
</g>
<g >
<title>vendor/golang.org/long long/crypto/curve25519.mladder (12 samples, 1.49%)</title><rect x="48.0" y="485" width="17.6" height="15.0" fill="rgb(233,31,10)" rx="2" ry="2" />
<text  x="51.02" y="495.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (2 samples, 0.25%)</title><rect x="768.9" y="501" width="2.9" height="15.0" fill="rgb(240,66,23)" rx="2" ry="2" />
<text  x="771.88" y="511.5" ></text>
</g>
<g >
<title>crypto/tls.(*Conn).readRecord (7 samples, 0.87%)</title><rect x="1055.5" y="597" width="10.2" height="15.0" fill="rgb(249,100,23)" rx="2" ry="2" />
<text  x="1058.48" y="607.5" ></text>
</g>
<g >
<title>crypto/aes.gcmAesEnc (1 samples, 0.12%)</title><rect x="799.6" y="469" width="1.5" height="15.0" fill="rgb(246,196,5)" rx="2" ry="2" />
<text  x="802.59" y="479.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.12%)</title><rect x="956.0" y="373" width="1.5" height="15.0" fill="rgb(241,205,53)" rx="2" ry="2" />
<text  x="959.05" y="383.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.12%)</title><rect x="861.0" y="229" width="1.5" height="15.0" fill="rgb(246,193,40)" rx="2" ry="2" />
<text  x="864.00" y="239.5" ></text>
</g>
<g >
<title>vendor/golang.org/long long/crypto/curve25519.ladderstep (11 samples, 1.36%)</title><rect x="49.5" y="469" width="16.1" height="15.0" fill="rgb(216,150,18)" rx="2" ry="2" />
<text  x="52.48" y="479.5" ></text>
</g>
<g >
<title>vendor/golang.org/long long/crypto/cryptobyte.(*Builder).AddUint8LengthPrefixed (1 samples, 0.12%)</title><rect x="744.0" y="517" width="1.5" height="15.0" fill="rgb(250,7,39)" rx="2" ry="2" />
<text  x="747.03" y="527.5" ></text>
</g>
<g >
<title>runtime.(*mspan).nextFreeIndex (1 samples, 0.12%)</title><rect x="856.6" y="261" width="1.5" height="15.0" fill="rgb(221,146,21)" rx="2" ry="2" />
<text  x="859.62" y="271.5" ></text>
</g>
<g >
<title>crypto/tls.(*Conn).closeNotify (1 samples, 0.12%)</title><rect x="774.7" y="549" width="1.5" height="15.0" fill="rgb(219,108,19)" rx="2" ry="2" />
<text  x="777.73" y="559.5" ></text>
</g>
<g >
<title>math/big.lehmerSimulate (7 samples, 0.87%)</title><rect x="679.7" y="405" width="10.2" height="15.0" fill="rgb(208,93,0)" rx="2" ry="2" />
<text  x="682.69" y="415.5" ></text>
</g>
<g >
<title>encoding/json.interfaceEncoder (4 samples, 0.50%)</title><rect x="941.4" y="277" width="5.9" height="15.0" fill="rgb(223,132,8)" rx="2" ry="2" />
<text  x="944.43" y="287.5" ></text>
</g>
<g >
<title>net.(*netFD).Read (2 samples, 0.25%)</title><rect x="65.6" y="437" width="2.9" height="15.0" fill="rgb(252,129,33)" rx="2" ry="2" />
<text  x="68.56" y="447.5" ></text>
</g>
<g >
<title>crypto/tls.(*serverHandshakeStateTLS13).readClientFinished (4 samples, 0.50%)</title><rect x="65.6" y="549" width="5.8" height="15.0" fill="rgb(234,190,19)" rx="2" ry="2" />
<text  x="68.56" y="559.5" ></text>
</g>
<g >
<title>runtime.growslice (1 samples, 0.12%)</title><rect x="956.0" y="421" width="1.5" height="15.0" fill="rgb(219,84,23)" rx="2" ry="2" />
<text  x="959.05" y="431.5" ></text>
</g>
<g >
<title>bufio.(*Reader).fill (8 samples, 0.99%)</title><rect x="751.3" y="565" width="11.7" height="15.0" fill="rgb(214,130,26)" rx="2" ry="2" />
<text  x="754.34" y="575.5" ></text>
</g>
<g >
<title>net/http.cleanPath (1 samples, 0.12%)</title><rect x="804.0" y="549" width="1.4" height="15.0" fill="rgb(217,145,0)" rx="2" ry="2" />
<text  x="806.98" y="559.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (4 samples, 0.50%)</title><rect x="997.0" y="213" width="5.8" height="15.0" fill="rgb(250,34,24)" rx="2" ry="2" />
<text  x="999.99" y="223.5" ></text>
</g>
<g >
<title>math/big.lehmerUpdate (9 samples, 1.12%)</title><rect x="689.9" y="405" width="13.2" height="15.0" fill="rgb(227,56,47)" rx="2" ry="2" />
<text  x="692.93" y="415.5" ></text>
</g>
<g >
<title>runtime.goexit0 (3 samples, 0.37%)</title><rect x="1146.1" y="597" width="4.4" height="15.0" fill="rgb(211,125,35)" rx="2" ry="2" />
<text  x="1149.13" y="607.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.12%)</title><rect x="909.3" y="293" width="1.4" height="15.0" fill="rgb(240,155,44)" rx="2" ry="2" />
<text  x="912.26" y="303.5" ></text>
</g>
<g >
<title>math/big.mulAddVWW (2 samples, 0.25%)</title><rect x="83.1" y="373" width="2.9" height="15.0" fill="rgb(230,121,53)" rx="2" ry="2" />
<text  x="86.11" y="383.5" ></text>
</g>
<g >
<title>syscall.getsockname (1 samples, 0.12%)</title><rect x="18.8" y="469" width="1.4" height="15.0" fill="rgb(225,182,9)" rx="2" ry="2" />
<text  x="21.77" y="479.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (1 samples, 0.12%)</title><rect x="739.6" y="437" width="1.5" height="15.0" fill="rgb(250,44,52)" rx="2" ry="2" />
<text  x="742.64" y="447.5" ></text>
</g>
<g >
<title>syscall.accept4 (2 samples, 0.25%)</title><rect x="15.8" y="437" width="3.0" height="15.0" fill="rgb(249,74,2)" rx="2" ry="2" />
<text  x="18.85" y="447.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.yaml_parser_delete (1 samples, 0.12%)</title><rect x="1008.7" y="421" width="1.4" height="15.0" fill="rgb(240,115,2)" rx="2" ry="2" />
<text  x="1011.69" y="431.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.12%)</title><rect x="26.1" y="213" width="1.4" height="15.0" fill="rgb(250,165,22)" rx="2" ry="2" />
<text  x="29.08" y="223.5" ></text>
</g>
<g >
<title>vendor/golang.org/long long/crypto/cryptobyte.(*Builder).callContinuation (1 samples, 0.12%)</title><rect x="748.4" y="501" width="1.5" height="15.0" fill="rgb(247,121,45)" rx="2" ry="2" />
<text  x="751.41" y="511.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (1 samples, 0.12%)</title><rect x="904.9" y="373" width="1.4" height="15.0" fill="rgb(240,170,3)" rx="2" ry="2" />
<text  x="907.87" y="383.5" ></text>
</g>
<g >
<title>runtime.lock (1 samples, 0.12%)</title><rect x="14.4" y="565" width="1.4" height="15.0" fill="rgb(226,146,12)" rx="2" ry="2" />
<text  x="17.39" y="575.5" ></text>
</g>
<g >
<title>strconv.Unquote (1 samples, 0.12%)</title><rect x="932.7" y="389" width="1.4" height="15.0" fill="rgb(243,221,30)" rx="2" ry="2" />
<text  x="935.65" y="399.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (3 samples, 0.37%)</title><rect x="1059.9" y="469" width="4.4" height="15.0" fill="rgb(207,135,9)" rx="2" ry="2" />
<text  x="1062.86" y="479.5" ></text>
</g>
<g >
<title>crypto/tls.(*Conn).Write (1 samples, 0.12%)</title><rect x="30.5" y="181" width="1.4" height="15.0" fill="rgb(223,75,15)" rx="2" ry="2" />
<text  x="33.47" y="191.5" ></text>
</g>
<g >
<title>runtime.findObject (1 samples, 0.12%)</title><rect x="866.9" y="245" width="1.4" height="15.0" fill="rgb(209,49,6)" rx="2" ry="2" />
<text  x="869.85" y="255.5" ></text>
</g>
<g >
<title>runtime.gcWriteBarrier (2 samples, 0.25%)</title><rect x="1049.6" y="421" width="3.0" height="15.0" fill="rgb(236,171,39)" rx="2" ry="2" />
<text  x="1052.63" y="431.5" ></text>
</g>
<g >
<title>runtime.SetFinalizer (1 samples, 0.12%)</title><rect x="21.7" y="485" width="1.5" height="15.0" fill="rgb(231,184,21)" rx="2" ry="2" />
<text  x="24.70" y="495.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.12%)</title><rect x="1008.7" y="357" width="1.4" height="15.0" fill="rgb(223,143,16)" rx="2" ry="2" />
<text  x="1011.69" y="367.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (1 samples, 0.12%)</title><rect x="956.0" y="341" width="1.5" height="15.0" fill="rgb(245,207,31)" rx="2" ry="2" />
<text  x="959.05" y="351.5" ></text>
</g>
<g >
<title>github.com/json-iterator/go.(*Iterator).skipObject.func1 (1 samples, 0.12%)</title><rect x="1016.0" y="181" width="1.5" height="15.0" fill="rgb(250,228,43)" rx="2" ry="2" />
<text  x="1019.00" y="191.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.(*parser).mapping (2 samples, 0.25%)</title><rect x="969.2" y="341" width="2.9" height="15.0" fill="rgb(234,98,20)" rx="2" ry="2" />
<text  x="972.21" y="351.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (1 samples, 0.12%)</title><rect x="824.4" y="261" width="1.5" height="15.0" fill="rgb(209,192,47)" rx="2" ry="2" />
<text  x="827.45" y="271.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).unmarshal (2 samples, 0.25%)</title><rect x="937.0" y="437" width="3.0" height="15.0" fill="rgb(249,197,30)" rx="2" ry="2" />
<text  x="940.04" y="447.5" ></text>
</g>
<g >
<title>runtime.callers (1 samples, 0.12%)</title><rect x="842.0" y="357" width="1.5" height="15.0" fill="rgb(251,21,19)" rx="2" ry="2" />
<text  x="845.00" y="367.5" ></text>
</g>
<g >
<title>crypto/tls.(*Conn).readRecord (1 samples, 0.12%)</title><rect x="808.4" y="405" width="1.4" height="15.0" fill="rgb(232,168,0)" rx="2" ry="2" />
<text  x="811.36" y="415.5" ></text>
</g>
<g >
<title>internal/poll.(*pollDesc).wait (2 samples, 0.25%)</title><rect x="751.3" y="405" width="3.0" height="15.0" fill="rgb(242,44,54)" rx="2" ry="2" />
<text  x="754.34" y="415.5" ></text>
</g>
<g >
<title>encoding/json.(*RawMessage).UnmarshalJSON (1 samples, 0.12%)</title><rect x="921.0" y="293" width="1.4" height="15.0" fill="rgb(224,111,49)" rx="2" ry="2" />
<text  x="923.95" y="303.5" ></text>
</g>
<g >
<title>golang.org/long long/net/http2.(*ClientConn).writeHeaders (1 samples, 0.12%)</title><rect x="30.5" y="229" width="1.4" height="15.0" fill="rgb(216,63,29)" rx="2" ry="2" />
<text  x="33.47" y="239.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.(*parser).parse (3 samples, 0.37%)</title><rect x="859.5" y="341" width="4.4" height="15.0" fill="rgb(253,187,54)" rx="2" ry="2" />
<text  x="862.54" y="351.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).freeSpan (1 samples, 0.12%)</title><rect x="1074.5" y="565" width="1.4" height="15.0" fill="rgb(213,41,5)" rx="2" ry="2" />
<text  x="1077.49" y="575.5" ></text>
</g>
<g >
<title>runtime.(*_type).typeOff (1 samples, 0.12%)</title><rect x="817.1" y="293" width="1.5" height="15.0" fill="rgb(217,36,16)" rx="2" ry="2" />
<text  x="820.14" y="303.5" ></text>
</g>
<g >
<title>runtime.deductSweepCredit (1 samples, 0.12%)</title><rect x="108.0" y="309" width="1.4" height="15.0" fill="rgb(219,92,15)" rx="2" ry="2" />
<text  x="110.97" y="319.5" ></text>
</g>
<g >
<title>crypto/sha256.block (1 samples, 0.12%)</title><rect x="68.5" y="437" width="1.5" height="15.0" fill="rgb(235,84,46)" rx="2" ry="2" />
<text  x="71.49" y="447.5" ></text>
</g>
<g >
<title>github.com/gogo/protobuf/jsonpb.checkRequiredFields (1 samples, 0.12%)</title><rect x="929.7" y="421" width="1.5" height="15.0" fill="rgb(253,210,47)" rx="2" ry="2" />
<text  x="932.73" y="431.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (1 samples, 0.12%)</title><rect x="921.0" y="325" width="1.4" height="15.0" fill="rgb(206,73,45)" rx="2" ry="2" />
<text  x="923.95" y="335.5" ></text>
</g>
<g >
<title>net/http.(*conn).serve.func1 (1 samples, 0.12%)</title><rect x="774.7" y="597" width="1.5" height="15.0" fill="rgb(229,99,35)" rx="2" ry="2" />
<text  x="777.73" y="607.5" ></text>
</g>
<g >
<title>runtime.netpoll (3 samples, 0.37%)</title><rect x="1146.1" y="549" width="4.4" height="15.0" fill="rgb(208,212,32)" rx="2" ry="2" />
<text  x="1149.13" y="559.5" ></text>
</g>
<g >
<title>net/http.send (2 samples, 0.25%)</title><rect x="27.5" y="357" width="3.0" height="15.0" fill="rgb(215,3,12)" rx="2" ry="2" />
<text  x="30.55" y="367.5" ></text>
</g>
<g >
<title>encoding/json.mapEncoder.encode (4 samples, 0.50%)</title><rect x="828.8" y="309" width="5.9" height="15.0" fill="rgb(224,164,40)" rx="2" ry="2" />
<text  x="831.84" y="319.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.(*decoder).scalar (1 samples, 0.12%)</title><rect x="856.6" y="325" width="1.5" height="15.0" fill="rgb(237,89,24)" rx="2" ry="2" />
<text  x="859.62" y="335.5" ></text>
</g>
<g >
<title>net/http.send (1 samples, 0.12%)</title><rect x="30.5" y="357" width="1.4" height="15.0" fill="rgb(227,60,40)" rx="2" ry="2" />
<text  x="33.47" y="367.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (7 samples, 0.87%)</title><rect x="815.7" y="389" width="10.2" height="15.0" fill="rgb(211,208,14)" rx="2" ry="2" />
<text  x="818.68" y="399.5" ></text>
</g>
<g >
<title>runtime.bgscavenge (6 samples, 0.74%)</title><rect x="1065.7" y="613" width="8.8" height="15.0" fill="rgb(235,170,42)" rx="2" ry="2" />
<text  x="1068.71" y="623.5" ></text>
</g>
<g >
<title>github.com/json-iterator/go.(*Iterator).readStringSlowPath (1 samples, 0.12%)</title><rect x="1016.0" y="53" width="1.5" height="15.0" fill="rgb(223,175,3)" rx="2" ry="2" />
<text  x="1019.00" y="63.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (1 samples, 0.12%)</title><rect x="866.9" y="309" width="1.4" height="15.0" fill="rgb(214,44,34)" rx="2" ry="2" />
<text  x="869.85" y="319.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (2 samples, 0.25%)</title><rect x="994.1" y="245" width="2.9" height="15.0" fill="rgb(223,157,33)" rx="2" ry="2" />
<text  x="997.06" y="255.5" ></text>
</g>
<g >
<title>runtime.gentraceback (1 samples, 0.12%)</title><rect x="842.0" y="309" width="1.5" height="15.0" fill="rgb(229,94,1)" rx="2" ry="2" />
<text  x="845.00" y="319.5" ></text>
</g>
<g >
<title>net.(*netFD).Write (1 samples, 0.12%)</title><rect x="801.1" y="533" width="1.4" height="15.0" fill="rgb(232,203,2)" rx="2" ry="2" />
<text  x="804.05" y="543.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.12%)</title><rect x="972.1" y="309" width="1.5" height="15.0" fill="rgb(217,178,19)" rx="2" ry="2" />
<text  x="975.13" y="319.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.yaml_parser_fetch_flow_scalar (8 samples, 0.99%)</title><rect x="973.6" y="309" width="11.7" height="15.0" fill="rgb(248,171,14)" rx="2" ry="2" />
<text  x="976.59" y="319.5" ></text>
</g>
<g >
<title>runtime.mapaccess2 (1 samples, 0.12%)</title><rect x="834.7" y="261" width="1.4" height="15.0" fill="rgb(206,3,37)" rx="2" ry="2" />
<text  x="837.68" y="271.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.yaml_parser_fetch_value (9 samples, 1.12%)</title><rect x="888.8" y="325" width="13.1" height="15.0" fill="rgb(220,27,8)" rx="2" ry="2" />
<text  x="891.79" y="335.5" ></text>
</g>
<g >
<title>reflect.Value.MapKeys (1 samples, 0.12%)</title><rect x="929.7" y="405" width="1.5" height="15.0" fill="rgb(233,114,2)" rx="2" ry="2" />
<text  x="932.73" y="415.5" ></text>
</g>
<g >
<title>runtime.growslice (9 samples, 1.12%)</title><rect x="994.1" y="277" width="13.1" height="15.0" fill="rgb(223,221,23)" rx="2" ry="2" />
<text  x="997.06" y="287.5" ></text>
</g>
<g >
<title>bytes.(*Buffer).ReadFrom (7 samples, 0.87%)</title><rect x="751.3" y="485" width="10.3" height="15.0" fill="rgb(224,176,13)" rx="2" ry="2" />
<text  x="754.34" y="495.5" ></text>
</g>
<g >
<title>runtime.slicebytetostring (1 samples, 0.12%)</title><rect x="818.6" y="341" width="1.5" height="15.0" fill="rgb(249,197,7)" rx="2" ry="2" />
<text  x="821.60" y="351.5" ></text>
</g>
<g >
<title>runtime.duffzero (1 samples, 0.12%)</title><rect x="983.8" y="293" width="1.5" height="15.0" fill="rgb(247,191,8)" rx="2" ry="2" />
<text  x="986.83" y="303.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (1 samples, 0.12%)</title><rect x="109.4" y="357" width="1.5" height="15.0" fill="rgb(212,156,10)" rx="2" ry="2" />
<text  x="112.43" y="367.5" ></text>
</g>
<g >
<title>runtime.stringtoslicebyte (1 samples, 0.12%)</title><rect x="843.5" y="421" width="1.4" height="15.0" fill="rgb(235,9,36)" rx="2" ry="2" />
<text  x="846.46" y="431.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.yaml_parser_state_machine (1 samples, 0.12%)</title><rect x="970.7" y="277" width="1.4" height="15.0" fill="rgb(231,104,54)" rx="2" ry="2" />
<text  x="973.67" y="287.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.12%)</title><rect x="972.1" y="293" width="1.5" height="15.0" fill="rgb(251,16,54)" rx="2" ry="2" />
<text  x="975.13" y="303.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.yaml_parser_parse_flow_mapping_value (1 samples, 0.12%)</title><rect x="970.7" y="261" width="1.4" height="15.0" fill="rgb(237,71,8)" rx="2" ry="2" />
<text  x="973.67" y="271.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.yaml_insert_token (8 samples, 0.99%)</title><rect x="888.8" y="309" width="11.7" height="15.0" fill="rgb(251,100,1)" rx="2" ry="2" />
<text  x="891.79" y="319.5" ></text>
</g>
<g >
<title>math/big.shlVU (1 samples, 0.12%)</title><rect x="676.8" y="389" width="1.4" height="15.0" fill="rgb(214,54,29)" rx="2" ry="2" />
<text  x="679.77" y="399.5" ></text>
</g>
<g >
<title>internal/poll.(*fdMutex).rwlock (1 samples, 0.12%)</title><rect x="1058.4" y="469" width="1.5" height="15.0" fill="rgb(218,0,42)" rx="2" ry="2" />
<text  x="1061.40" y="479.5" ></text>
</g>
<g >
<title>runtime.epollctl (1 samples, 0.12%)</title><rect x="20.2" y="421" width="1.5" height="15.0" fill="rgb(212,214,18)" rx="2" ry="2" />
<text  x="23.24" y="431.5" ></text>
</g>
<g >
<title>runtime.convTslice (1 samples, 0.12%)</title><rect x="904.9" y="405" width="1.4" height="15.0" fill="rgb(245,41,7)" rx="2" ry="2" />
<text  x="907.87" y="415.5" ></text>
</g>
<g >
<title>istio.io/istio/pilot/pkg/bootstrap.(*Server).initConfigController.func1 (3 samples, 0.37%)</title><rect x="26.1" y="597" width="4.4" height="15.0" fill="rgb(246,70,40)" rx="2" ry="2" />
<text  x="29.08" y="607.5" ></text>
</g>
<g >
<title>github.com/json-iterator/go.(*stringCodec).Decode (1 samples, 0.12%)</title><rect x="1026.2" y="405" width="1.5" height="15.0" fill="rgb(238,177,29)" rx="2" ry="2" />
<text  x="1029.23" y="415.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (4 samples, 0.50%)</title><rect x="997.0" y="245" width="5.8" height="15.0" fill="rgb(230,200,40)" rx="2" ry="2" />
<text  x="999.99" y="255.5" ></text>
</g>
<g >
<title>crypto/rsa.SignPSS (449 samples, 55.64%)</title><rect x="71.4" y="517" width="656.5" height="15.0" fill="rgb(232,44,9)" rx="2" ry="2" />
<text  x="74.41" y="527.5" >crypto/rsa.SignPSS</text>
</g>
<g >
<title>encoding/json.(*decodeState).value (1 samples, 0.12%)</title><rect x="907.8" y="389" width="1.5" height="15.0" fill="rgb(251,197,21)" rx="2" ry="2" />
<text  x="910.79" y="399.5" ></text>
</g>
<g >
<title>runtime.callers.func1 (1 samples, 0.12%)</title><rect x="842.0" y="325" width="1.5" height="15.0" fill="rgb(254,9,24)" rx="2" ry="2" />
<text  x="845.00" y="335.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.peek_token (23 samples, 2.85%)</title><rect x="973.6" y="357" width="33.6" height="15.0" fill="rgb(248,182,43)" rx="2" ry="2" />
<text  x="976.59" y="367.5" >go..</text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.yaml_parser_scan_flow_scalar (11 samples, 1.36%)</title><rect x="871.2" y="309" width="16.1" height="15.0" fill="rgb(230,225,30)" rx="2" ry="2" />
<text  x="874.24" y="319.5" ></text>
</g>
<g >
<title>math/big.(*Int).GCD (17 samples, 2.11%)</title><rect x="678.2" y="437" width="24.9" height="15.0" fill="rgb(235,227,9)" rx="2" ry="2" />
<text  x="681.23" y="447.5" >m..</text>
</g>
<g >
<title>runtime.selectgo (1 samples, 0.12%)</title><rect x="14.4" y="597" width="1.4" height="15.0" fill="rgb(218,44,0)" rx="2" ry="2" />
<text  x="17.39" y="607.5" ></text>
</g>
<g >
<title>net.(*conn).Read (3 samples, 0.37%)</title><rect x="1055.5" y="517" width="4.4" height="15.0" fill="rgb(223,146,51)" rx="2" ry="2" />
<text  x="1058.48" y="527.5" ></text>
</g>
<g >
<title>github.com/json-iterator/go.(*structFieldDecoder).Decode (1 samples, 0.12%)</title><rect x="1026.2" y="421" width="1.5" height="15.0" fill="rgb(226,206,48)" rx="2" ry="2" />
<text  x="1029.23" y="431.5" ></text>
</g>
<g >
<title>github.com/json-iterator/go.(*threeFieldsStructDecoder).Decode (1 samples, 0.12%)</title><rect x="1011.6" y="325" width="1.5" height="15.0" fill="rgb(226,113,35)" rx="2" ry="2" />
<text  x="1014.61" y="335.5" ></text>
</g>
<g >
<title>runtime.rawbyteslice (1 samples, 0.12%)</title><rect x="843.5" y="405" width="1.4" height="15.0" fill="rgb(209,166,24)" rx="2" ry="2" />
<text  x="846.46" y="415.5" ></text>
</g>
<g >
<title>vendor/golang.org/long long/crypto/cryptobyte.(*Builder).callContinuation (1 samples, 0.12%)</title><rect x="733.8" y="485" width="1.5" height="15.0" fill="rgb(206,121,5)" rx="2" ry="2" />
<text  x="736.79" y="495.5" ></text>
</g>
<g >
<title>runtime.newproc1 (2 samples, 0.25%)</title><rect x="809.8" y="389" width="3.0" height="15.0" fill="rgb(221,68,29)" rx="2" ry="2" />
<text  x="812.83" y="399.5" ></text>
</g>
<g >
<title>github.com/json-iterator/go.(*OptionalDecoder).Decode (1 samples, 0.12%)</title><rect x="1011.6" y="357" width="1.5" height="15.0" fill="rgb(214,209,50)" rx="2" ry="2" />
<text  x="1014.61" y="367.5" ></text>
</g>
<g >
<title>net.(*conn).Write (12 samples, 1.49%)</title><rect x="780.6" y="501" width="17.5" height="15.0" fill="rgb(242,185,52)" rx="2" ry="2" />
<text  x="783.58" y="511.5" ></text>
</g>
<g >
<title>golang.org/long long/net/http2.(*Transport).RoundTripOpt (1 samples, 0.12%)</title><rect x="30.5" y="261" width="1.4" height="15.0" fill="rgb(231,5,46)" rx="2" ry="2" />
<text  x="33.47" y="271.5" ></text>
</g>
<g >
<title>github.com/gogo/protobuf/proto.(*Properties).init (1 samples, 0.12%)</title><rect x="931.2" y="405" width="1.5" height="15.0" fill="rgb(243,65,54)" rx="2" ry="2" />
<text  x="934.19" y="415.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).find (1 samples, 0.12%)</title><rect x="893.2" y="117" width="1.4" height="15.0" fill="rgb(248,52,42)" rx="2" ry="2" />
<text  x="896.17" y="127.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.(*decoder).mapping (6 samples, 0.74%)</title><rect x="957.5" y="341" width="8.8" height="15.0" fill="rgb(239,144,38)" rx="2" ry="2" />
<text  x="960.51" y="351.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).unmarshal (1 samples, 0.12%)</title><rect x="909.3" y="389" width="1.4" height="15.0" fill="rgb(223,140,16)" rx="2" ry="2" />
<text  x="912.26" y="399.5" ></text>
</g>
<g >
<title>go.opencensus.io/stats/view.(*worker).start (4 samples, 0.50%)</title><rect x="10.0" y="613" width="5.8" height="15.0" fill="rgb(216,109,28)" rx="2" ry="2" />
<text  x="13.00" y="623.5" ></text>
</g>
<g >
<title>k8s.io/apimachinery/pkg/util/wait.JitterUntil (1 samples, 0.12%)</title><rect x="30.5" y="533" width="1.4" height="15.0" fill="rgb(224,24,34)" rx="2" ry="2" />
<text  x="33.47" y="543.5" ></text>
</g>
<g >
<title>github.com/json-iterator/go.(*stringCodec).Decode (1 samples, 0.12%)</title><rect x="1011.6" y="277" width="1.5" height="15.0" fill="rgb(243,178,45)" rx="2" ry="2" />
<text  x="1014.61" y="287.5" ></text>
</g>
<g >
<title>vendor/golang.org/long long/crypto/cryptobyte.(*Builder).AddUint24LengthPrefixed (1 samples, 0.12%)</title><rect x="748.4" y="533" width="1.5" height="15.0" fill="rgb(223,109,47)" rx="2" ry="2" />
<text  x="751.41" y="543.5" ></text>
</g>
<g >
<title>math/big.nat.div (10 samples, 1.24%)</title><rect x="707.5" y="421" width="14.6" height="15.0" fill="rgb(251,179,8)" rx="2" ry="2" />
<text  x="710.47" y="431.5" ></text>
</g>
<g >
<title>runtime.scanframeworker (3 samples, 0.37%)</title><rect x="1093.5" y="469" width="4.4" height="15.0" fill="rgb(230,30,50)" rx="2" ry="2" />
<text  x="1096.49" y="479.5" ></text>
</g>
<g >
<title>syscall.Syscall (11 samples, 1.36%)</title><rect x="782.0" y="437" width="16.1" height="15.0" fill="rgb(208,11,34)" rx="2" ry="2" />
<text  x="785.04" y="447.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.12%)</title><rect x="1172.5" y="517" width="1.4" height="15.0" fill="rgb(244,143,13)" rx="2" ry="2" />
<text  x="1175.45" y="527.5" ></text>
</g>
<g >
<title>crypto/sha256.block (1 samples, 0.12%)</title><rect x="726.5" y="405" width="1.4" height="15.0" fill="rgb(241,18,54)" rx="2" ry="2" />
<text  x="729.48" y="415.5" ></text>
</g>
<g >
<title>k8s.io/client-go/transport.(*bearerAuthRoundTripper).RoundTrip (2 samples, 0.25%)</title><rect x="27.5" y="325" width="3.0" height="15.0" fill="rgb(230,143,50)" rx="2" ry="2" />
<text  x="30.55" y="335.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).reflectValue (5 samples, 0.62%)</title><rect x="828.8" y="421" width="7.3" height="15.0" fill="rgb(230,117,54)" rx="2" ry="2" />
<text  x="831.84" y="431.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.(*parser).peek (24 samples, 2.97%)</title><rect x="973.6" y="405" width="35.1" height="15.0" fill="rgb(229,6,13)" rx="2" ry="2" />
<text  x="976.59" y="415.5" >go..</text>
</g>
<g >
<title>runtime.add (1 samples, 0.12%)</title><rect x="945.8" y="197" width="1.5" height="15.0" fill="rgb(208,224,28)" rx="2" ry="2" />
<text  x="948.81" y="207.5" ></text>
</g>
<g >
<title>math/big.subVV (3 samples, 0.37%)</title><rect x="86.0" y="373" width="4.4" height="15.0" fill="rgb(216,105,49)" rx="2" ry="2" />
<text  x="89.03" y="383.5" ></text>
</g>
<g >
<title>github.com/json-iterator/go.(*referenceDecoder).Decode (3 samples, 0.37%)</title><rect x="1013.1" y="341" width="4.4" height="15.0" fill="rgb(239,152,16)" rx="2" ry="2" />
<text  x="1016.07" y="351.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.12%)</title><rect x="890.2" y="181" width="1.5" height="15.0" fill="rgb(248,221,5)" rx="2" ry="2" />
<text  x="893.25" y="191.5" ></text>
</g>
<g >
<title>encoding/json.interfaceEncoder (9 samples, 1.12%)</title><rect x="940.0" y="325" width="13.1" height="15.0" fill="rgb(232,19,40)" rx="2" ry="2" />
<text  x="942.96" y="335.5" ></text>
</g>
<g >
<title>encoding/json.Marshal (12 samples, 1.49%)</title><rect x="940.0" y="437" width="17.5" height="15.0" fill="rgb(212,200,16)" rx="2" ry="2" />
<text  x="942.96" y="447.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.12%)</title><rect x="921.0" y="261" width="1.4" height="15.0" fill="rgb(243,42,43)" rx="2" ry="2" />
<text  x="923.95" y="271.5" ></text>
</g>
<g >
<title>crypto/rsa.decryptAndCheck (447 samples, 55.39%)</title><rect x="72.9" y="485" width="653.6" height="15.0" fill="rgb(222,169,4)" rx="2" ry="2" />
<text  x="75.87" y="495.5" >crypto/rsa.decryptAndCheck</text>
</g>
<g >
<title>runtime.bulkBarrierPreWrite (1 samples, 0.12%)</title><rect x="773.3" y="549" width="1.4" height="15.0" fill="rgb(244,9,53)" rx="2" ry="2" />
<text  x="776.27" y="559.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.(*parser).document (3 samples, 0.37%)</title><rect x="969.2" y="405" width="4.4" height="15.0" fill="rgb(212,7,22)" rx="2" ry="2" />
<text  x="972.21" y="415.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.12%)</title><rect x="843.5" y="389" width="1.4" height="15.0" fill="rgb(215,169,13)" rx="2" ry="2" />
<text  x="846.46" y="399.5" ></text>
</g>
<g >
<title>math/big.nat.divLarge (12 samples, 1.49%)</title><rect x="74.3" y="405" width="17.6" height="15.0" fill="rgb(224,192,9)" rx="2" ry="2" />
<text  x="77.34" y="415.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.yaml_parser_fetch_value (9 samples, 1.12%)</title><rect x="994.1" y="309" width="13.1" height="15.0" fill="rgb(220,84,50)" rx="2" ry="2" />
<text  x="997.06" y="319.5" ></text>
</g>
<g >
<title>runtime.mProf_Malloc (1 samples, 0.12%)</title><rect x="842.0" y="373" width="1.5" height="15.0" fill="rgb(254,163,29)" rx="2" ry="2" />
<text  x="845.00" y="383.5" ></text>
</g>
<g >
<title>math/big.nat.div (4 samples, 0.50%)</title><rect x="100.7" y="405" width="5.8" height="15.0" fill="rgb(221,119,27)" rx="2" ry="2" />
<text  x="103.66" y="415.5" ></text>
</g>
<g >
<title>reflect.StructTag.Get (1 samples, 0.12%)</title><rect x="932.7" y="421" width="1.4" height="15.0" fill="rgb(223,99,10)" rx="2" ry="2" />
<text  x="935.65" y="431.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (1 samples, 0.12%)</title><rect x="805.4" y="325" width="1.5" height="15.0" fill="rgb(208,221,9)" rx="2" ry="2" />
<text  x="808.44" y="335.5" ></text>
</g>
<g >
<title>vendor/golang.org/long long/crypto/cryptobyte.(*Builder).AddUint8LengthPrefixed (1 samples, 0.12%)</title><rect x="739.6" y="501" width="1.5" height="15.0" fill="rgb(254,214,40)" rx="2" ry="2" />
<text  x="742.64" y="511.5" ></text>
</g>
<g >
<title>net/http.(*chunkWriter).writeHeader (1 samples, 0.12%)</title><rect x="776.2" y="549" width="1.5" height="15.0" fill="rgb(242,205,21)" rx="2" ry="2" />
<text  x="779.20" y="559.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.12%)</title><rect x="931.2" y="325" width="1.5" height="15.0" fill="rgb(230,80,30)" rx="2" ry="2" />
<text  x="934.19" y="335.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.(*parser).peek (1 samples, 0.12%)</title><rect x="861.0" y="309" width="1.5" height="15.0" fill="rgb(254,224,28)" rx="2" ry="2" />
<text  x="864.00" y="319.5" ></text>
</g>
<g >
<title>sync.(*Pool).pin (1 samples, 0.12%)</title><rect x="27.5" y="261" width="1.5" height="15.0" fill="rgb(227,77,42)" rx="2" ry="2" />
<text  x="30.55" y="271.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.25%)</title><rect x="809.8" y="421" width="3.0" height="15.0" fill="rgb(220,228,28)" rx="2" ry="2" />
<text  x="812.83" y="431.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.12%)</title><rect x="105.0" y="373" width="1.5" height="15.0" fill="rgb(210,171,15)" rx="2" ry="2" />
<text  x="108.04" y="383.5" ></text>
</g>
<g >
<title>math/big.subVV (2 samples, 0.25%)</title><rect x="719.2" y="373" width="2.9" height="15.0" fill="rgb(248,71,1)" rx="2" ry="2" />
<text  x="722.17" y="383.5" ></text>
</g>
<g >
<title>net/http.(*connReader).Read (8 samples, 0.99%)</title><rect x="751.3" y="549" width="11.7" height="15.0" fill="rgb(254,190,47)" rx="2" ry="2" />
<text  x="754.34" y="559.5" ></text>
</g>
<g >
<title>github.com/json-iterator/go.(*Iterator).skipString (1 samples, 0.12%)</title><rect x="1016.0" y="85" width="1.5" height="15.0" fill="rgb(219,57,19)" rx="2" ry="2" />
<text  x="1019.00" y="95.5" ></text>
</g>
<g >
<title>reflect.mapiterinit (1 samples, 0.12%)</title><rect x="947.3" y="261" width="1.4" height="15.0" fill="rgb(206,12,3)" rx="2" ry="2" />
<text  x="950.27" y="271.5" ></text>
</g>
<g >
<title>syscall.Syscall6 (2 samples, 0.25%)</title><rect x="23.2" y="453" width="2.9" height="15.0" fill="rgb(211,194,44)" rx="2" ry="2" />
<text  x="26.16" y="463.5" ></text>
</g>
<g >
<title>runtime.adjustframe (3 samples, 0.37%)</title><rect x="915.1" y="277" width="4.4" height="15.0" fill="rgb(253,160,47)" rx="2" ry="2" />
<text  x="918.11" y="287.5" ></text>
</g>
<g >
<title>crypto/tls.(*Conn).readHandshake (2 samples, 0.25%)</title><rect x="31.9" y="549" width="3.0" height="15.0" fill="rgb(231,94,53)" rx="2" ry="2" />
<text  x="34.93" y="559.5" ></text>
</g>
<g >
<title>k8s.io/client-go/kubernetes/typed/core/v1.(*configMaps).Get (1 samples, 0.12%)</title><rect x="26.1" y="437" width="1.4" height="15.0" fill="rgb(205,77,25)" rx="2" ry="2" />
<text  x="29.08" y="447.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).string (1 samples, 0.12%)</title><rect x="951.7" y="277" width="1.4" height="15.0" fill="rgb(240,3,52)" rx="2" ry="2" />
<text  x="954.66" y="287.5" ></text>
</g>
<g >
<title>runtime.callers.func1 (1 samples, 0.12%)</title><rect x="947.3" y="149" width="1.4" height="15.0" fill="rgb(209,158,50)" rx="2" ry="2" />
<text  x="950.27" y="159.5" ></text>
</g>
<g >
<title>internal/poll.runtime_pollOpen (1 samples, 0.12%)</title><rect x="20.2" y="453" width="1.5" height="15.0" fill="rgb(229,152,30)" rx="2" ry="2" />
<text  x="23.24" y="463.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.12%)</title><rect x="108.0" y="341" width="1.4" height="15.0" fill="rgb(233,62,7)" rx="2" ry="2" />
<text  x="110.97" y="351.5" ></text>
</g>
<g >
<title>runtime.growslice (1 samples, 0.12%)</title><rect x="969.2" y="293" width="1.5" height="15.0" fill="rgb(206,79,29)" rx="2" ry="2" />
<text  x="972.21" y="303.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.12%)</title><rect x="842.0" y="421" width="1.5" height="15.0" fill="rgb(218,81,11)" rx="2" ry="2" />
<text  x="845.00" y="431.5" ></text>
</g>
<g >
<title>time.parse (2 samples, 0.25%)</title><rect x="820.1" y="325" width="2.9" height="15.0" fill="rgb(242,81,7)" rx="2" ry="2" />
<text  x="823.06" y="335.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (1 samples, 0.12%)</title><rect x="1172.5" y="533" width="1.4" height="15.0" fill="rgb(220,58,42)" rx="2" ry="2" />
<text  x="1175.45" y="543.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.yaml_parser_state_machine (1 samples, 0.12%)</title><rect x="861.0" y="277" width="1.5" height="15.0" fill="rgb(221,149,1)" rx="2" ry="2" />
<text  x="864.00" y="287.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.12%)</title><rect x="906.3" y="421" width="1.5" height="15.0" fill="rgb(248,190,23)" rx="2" ry="2" />
<text  x="909.33" y="431.5" ></text>
</g>
<g >
<title>github.com/json-iterator/go.(*Iterator).Skip (1 samples, 0.12%)</title><rect x="1021.8" y="117" width="1.5" height="15.0" fill="rgb(241,58,51)" rx="2" ry="2" />
<text  x="1024.85" y="127.5" ></text>
</g>
<g >
<title>syscall.read (1 samples, 0.12%)</title><rect x="808.4" y="277" width="1.4" height="15.0" fill="rgb(253,108,2)" rx="2" ry="2" />
<text  x="811.36" y="287.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (1 samples, 0.12%)</title><rect x="109.4" y="293" width="1.5" height="15.0" fill="rgb(252,106,39)" rx="2" ry="2" />
<text  x="112.43" y="303.5" ></text>
</g>
<g >
<title>crypto/rsa.decrypt (433 samples, 53.66%)</title><rect x="72.9" y="469" width="633.1" height="15.0" fill="rgb(253,82,28)" rx="2" ry="2" />
<text  x="75.87" y="479.5" >crypto/rsa.decrypt</text>
</g>
<g >
<title>crypto.Hash.New (1 samples, 0.12%)</title><rect x="71.4" y="485" width="1.5" height="15.0" fill="rgb(245,81,12)" rx="2" ry="2" />
<text  x="74.41" y="495.5" ></text>
</g>
<g >
<title>reflect.MakeMapWithSize (1 samples, 0.12%)</title><rect x="858.1" y="341" width="1.4" height="15.0" fill="rgb(243,147,24)" rx="2" ry="2" />
<text  x="861.08" y="351.5" ></text>
</g>
<g >
<title>github.com/json-iterator/go.(*Iterator).skipObject.func1 (3 samples, 0.37%)</title><rect x="1018.9" y="261" width="4.4" height="15.0" fill="rgb(234,160,44)" rx="2" ry="2" />
<text  x="1021.92" y="271.5" ></text>
</g>
<g >
<title>net/http.checkConnErrorWriter.Write (15 samples, 1.86%)</title><rect x="780.6" y="565" width="21.9" height="15.0" fill="rgb(228,129,5)" rx="2" ry="2" />
<text  x="783.58" y="575.5" >n..</text>
</g>
<g >
<title>crypto/sha256.(*digest).Sum (1 samples, 0.12%)</title><rect x="742.6" y="517" width="1.4" height="15.0" fill="rgb(224,34,41)" rx="2" ry="2" />
<text  x="745.57" y="527.5" ></text>
</g>
<g >
<title>k8s.io/client-go/transport.(*userAgentRoundTripper).RoundTrip (1 samples, 0.12%)</title><rect x="30.5" y="341" width="1.4" height="15.0" fill="rgb(226,59,6)" rx="2" ry="2" />
<text  x="33.47" y="351.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (2 samples, 0.25%)</title><rect x="921.0" y="341" width="2.9" height="15.0" fill="rgb(254,92,53)" rx="2" ry="2" />
<text  x="923.95" y="351.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush.func1 (1 samples, 0.12%)</title><rect x="1008.7" y="341" width="1.4" height="15.0" fill="rgb(254,166,34)" rx="2" ry="2" />
<text  x="1011.69" y="351.5" ></text>
</g>
<g >
<title>runtime.mapaccess2_faststr (1 samples, 0.12%)</title><rect x="12.9" y="549" width="1.5" height="15.0" fill="rgb(250,15,14)" rx="2" ry="2" />
<text  x="15.92" y="559.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (2 samples, 0.25%)</title><rect x="994.1" y="213" width="2.9" height="15.0" fill="rgb(250,113,7)" rx="2" ry="2" />
<text  x="997.06" y="223.5" ></text>
</g>
<g >
<title>math/big.nat.mul (4 samples, 0.50%)</title><rect x="697.2" y="373" width="5.9" height="15.0" fill="rgb(247,115,40)" rx="2" ry="2" />
<text  x="700.24" y="383.5" ></text>
</g>
<g >
<title>net.(*netFD).Read (1 samples, 0.12%)</title><rect x="808.4" y="309" width="1.4" height="15.0" fill="rgb(213,198,19)" rx="2" ry="2" />
<text  x="811.36" y="319.5" ></text>
</g>
<g >
<title>runtime.slicebytetostring (1 samples, 0.12%)</title><rect x="1020.4" y="181" width="1.4" height="15.0" fill="rgb(243,70,54)" rx="2" ry="2" />
<text  x="1023.38" y="191.5" ></text>
</g>
<g >
<title>runtime.mSysStatInc (1 samples, 0.12%)</title><rect x="805.4" y="293" width="1.5" height="15.0" fill="rgb(240,17,1)" rx="2" ry="2" />
<text  x="808.44" y="303.5" ></text>
</g>
<g >
<title>github.com/gogo/protobuf/jsonpb.(*Unmarshaler).unmarshalValue.func1 (1 samples, 0.12%)</title><rect x="912.2" y="405" width="1.4" height="15.0" fill="rgb(205,188,42)" rx="2" ry="2" />
<text  x="915.18" y="415.5" ></text>
</g>
<g >
<title>golang.org/long long/net/http2.(*Transport).RoundTrip (1 samples, 0.12%)</title><rect x="26.1" y="277" width="1.4" height="15.0" fill="rgb(242,192,22)" rx="2" ry="2" />
<text  x="29.08" y="287.5" ></text>
</g>
<g >
<title>crypto/tls.(*clientHelloMsg).unmarshal (1 samples, 0.12%)</title><rect x="31.9" y="533" width="1.5" height="15.0" fill="rgb(246,153,13)" rx="2" ry="2" />
<text  x="34.93" y="543.5" ></text>
</g>
<g >
<title>golang.org/long long/net/http2.(*ClientConn).roundTrip (1 samples, 0.12%)</title><rect x="29.0" y="245" width="1.5" height="15.0" fill="rgb(226,1,27)" rx="2" ry="2" />
<text  x="32.01" y="255.5" ></text>
</g>
<g >
<title>encoding/json.NewDecoder (1 samples, 0.12%)</title><rect x="906.3" y="453" width="1.5" height="15.0" fill="rgb(240,155,22)" rx="2" ry="2" />
<text  x="909.33" y="463.5" ></text>
</g>
<g >
<title>github.com/json-iterator/go.(*threeFieldsStructDecoder).Decode (1 samples, 0.12%)</title><rect x="1024.8" y="357" width="1.4" height="15.0" fill="rgb(214,159,54)" rx="2" ry="2" />
<text  x="1027.77" y="367.5" ></text>
</g>
<g >
<title>runtime.(*itabTableType).find (1 samples, 0.12%)</title><rect x="840.5" y="357" width="1.5" height="15.0" fill="rgb(243,192,3)" rx="2" ry="2" />
<text  x="843.53" y="367.5" ></text>
</g>
<g >
<title>sort.quickSort_func (1 samples, 0.12%)</title><rect x="950.2" y="261" width="1.5" height="15.0" fill="rgb(224,85,30)" rx="2" ry="2" />
<text  x="953.20" y="271.5" ></text>
</g>
<g >
<title>net/http.(*Client).do (1 samples, 0.12%)</title><rect x="30.5" y="389" width="1.4" height="15.0" fill="rgb(234,64,54)" rx="2" ry="2" />
<text  x="33.47" y="399.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).string (3 samples, 0.37%)</title><rect x="941.4" y="229" width="4.4" height="15.0" fill="rgb(241,222,13)" rx="2" ry="2" />
<text  x="944.43" y="239.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.yaml_parser_state_machine (24 samples, 2.97%)</title><rect x="973.6" y="373" width="35.1" height="15.0" fill="rgb(205,173,38)" rx="2" ry="2" />
<text  x="976.59" y="383.5" >go..</text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.(*parser).mapping (3 samples, 0.37%)</title><rect x="969.2" y="373" width="4.4" height="15.0" fill="rgb(221,186,41)" rx="2" ry="2" />
<text  x="972.21" y="383.5" ></text>
</g>
<g >
<title>syscall.Read (1 samples, 0.12%)</title><rect x="67.0" y="421" width="1.5" height="15.0" fill="rgb(222,60,20)" rx="2" ry="2" />
<text  x="70.03" y="431.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.12%)</title><rect x="741.1" y="485" width="1.5" height="15.0" fill="rgb(243,177,45)" rx="2" ry="2" />
<text  x="744.10" y="495.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1 samples, 0.12%)</title><rect x="71.4" y="389" width="1.5" height="15.0" fill="rgb(238,207,33)" rx="2" ry="2" />
<text  x="74.41" y="399.5" ></text>
</g>
<g >
<title>net/url.stringContainsCTLByte (1 samples, 0.12%)</title><rect x="767.4" y="533" width="1.5" height="15.0" fill="rgb(219,218,43)" rx="2" ry="2" />
<text  x="770.42" y="543.5" ></text>
</g>
<g >
<title>runtime.sysmon (17 samples, 2.11%)</title><rect x="1165.1" y="581" width="24.9" height="15.0" fill="rgb(244,229,54)" rx="2" ry="2" />
<text  x="1168.14" y="591.5" >r..</text>
</g>
<g >
<title>runtime.futexsleep (2 samples, 0.25%)</title><rect x="1169.5" y="533" width="3.0" height="15.0" fill="rgb(233,171,46)" rx="2" ry="2" />
<text  x="1172.53" y="543.5" ></text>
</g>
<g >
<title>io/ioutil.ReadAll (5 samples, 0.62%)</title><rect x="805.4" y="533" width="7.4" height="15.0" fill="rgb(215,190,41)" rx="2" ry="2" />
<text  x="808.44" y="543.5" ></text>
</g>
<g >
<title>crypto/rsa.emsaPSSEncode (1 samples, 0.12%)</title><rect x="726.5" y="485" width="1.4" height="15.0" fill="rgb(222,165,12)" rx="2" ry="2" />
<text  x="729.48" y="495.5" ></text>
</g>
<g >
<title>vendor/golang.org/long long/crypto/hkdf.Expand (1 samples, 0.12%)</title><rect x="68.5" y="485" width="1.5" height="15.0" fill="rgb(230,43,12)" rx="2" ry="2" />
<text  x="71.49" y="495.5" ></text>
</g>
<g >
<title>github.com/gogo/protobuf/jsonpb.(*Unmarshaler).unmarshalValue (2 samples, 0.25%)</title><rect x="925.3" y="389" width="3.0" height="15.0" fill="rgb(248,160,42)" rx="2" ry="2" />
<text  x="928.34" y="399.5" ></text>
</g>
<g >
<title>vendor/golang.org/long long/crypto/cryptobyte.(*Builder).AddUint16LengthPrefixed (1 samples, 0.12%)</title><rect x="748.4" y="485" width="1.5" height="15.0" fill="rgb(234,94,1)" rx="2" ry="2" />
<text  x="751.41" y="495.5" ></text>
</g>
<g >
<title>encoding/json.Unmarshal (2 samples, 0.25%)</title><rect x="909.3" y="405" width="2.9" height="15.0" fill="rgb(233,69,17)" rx="2" ry="2" />
<text  x="912.26" y="415.5" ></text>
</g>
<g >
<title>net/http.(*connReader).Read (1 samples, 0.12%)</title><rect x="808.4" y="421" width="1.4" height="15.0" fill="rgb(220,114,46)" rx="2" ry="2" />
<text  x="811.36" y="431.5" ></text>
</g>
<g >
<title>crypto/tls.(*Conn).SetReadDeadline (1 samples, 0.12%)</title><rect x="802.5" y="565" width="1.5" height="15.0" fill="rgb(219,77,26)" rx="2" ry="2" />
<text  x="805.52" y="575.5" ></text>
</g>
<g >
<title>net/http.htmlSig.match (1 samples, 0.12%)</title><rect x="776.2" y="517" width="1.5" height="15.0" fill="rgb(245,220,27)" rx="2" ry="2" />
<text  x="779.20" y="527.5" ></text>
</g>
<g >
<title>encoding/json.indirect (1 samples, 0.12%)</title><rect x="817.1" y="341" width="1.5" height="15.0" fill="rgb(254,204,22)" rx="2" ry="2" />
<text  x="820.14" y="351.5" ></text>
</g>
<g >
<title>net.(*conn).Read (2 samples, 0.25%)</title><rect x="65.6" y="453" width="2.9" height="15.0" fill="rgb(212,30,0)" rx="2" ry="2" />
<text  x="68.56" y="463.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.yaml_parser_parse (1 samples, 0.12%)</title><rect x="861.0" y="293" width="1.5" height="15.0" fill="rgb(218,89,29)" rx="2" ry="2" />
<text  x="864.00" y="303.5" ></text>
</g>
<g >
<title>runtime.growslice (5 samples, 0.62%)</title><rect x="986.8" y="277" width="7.3" height="15.0" fill="rgb(212,26,51)" rx="2" ry="2" />
<text  x="989.75" y="287.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.12%)</title><rect x="894.6" y="133" width="1.5" height="15.0" fill="rgb(215,46,40)" rx="2" ry="2" />
<text  x="897.63" y="143.5" ></text>
</g>
<g >
<title>runtime.copystack (2 samples, 0.25%)</title><rect x="1055.5" y="453" width="2.9" height="15.0" fill="rgb(242,139,13)" rx="2" ry="2" />
<text  x="1058.48" y="463.5" ></text>
</g>
<g >
<title>crypto/tls.aeadAESGCMTLS13 (1 samples, 0.12%)</title><rect x="747.0" y="517" width="1.4" height="15.0" fill="rgb(221,120,50)" rx="2" ry="2" />
<text  x="749.95" y="527.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (1 samples, 0.12%)</title><rect x="805.4" y="373" width="1.5" height="15.0" fill="rgb(241,207,54)" rx="2" ry="2" />
<text  x="808.44" y="383.5" ></text>
</g>
<g >
<title>sync.(*Pool).Get (1 samples, 0.12%)</title><rect x="27.5" y="277" width="1.5" height="15.0" fill="rgb(237,224,0)" rx="2" ry="2" />
<text  x="30.55" y="287.5" ></text>
</g>
<g >
<title>runtime.markBits.isMarked (1 samples, 0.12%)</title><rect x="1143.2" y="533" width="1.5" height="15.0" fill="rgb(243,121,49)" rx="2" ry="2" />
<text  x="1146.21" y="543.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.yaml_parser_parse_node (1 samples, 0.12%)</title><rect x="970.7" y="245" width="1.4" height="15.0" fill="rgb(245,227,43)" rx="2" ry="2" />
<text  x="973.67" y="255.5" ></text>
</g>
<g >
<title>runtime.callers (1 samples, 0.12%)</title><rect x="947.3" y="181" width="1.4" height="15.0" fill="rgb(212,131,17)" rx="2" ry="2" />
<text  x="950.27" y="191.5" ></text>
</g>
<g >
<title>encoding/json.typeEncoder (1 samples, 0.12%)</title><rect x="945.8" y="229" width="1.5" height="15.0" fill="rgb(250,66,24)" rx="2" ry="2" />
<text  x="948.81" y="239.5" ></text>
</g>
<g >
<title>sync.(*Map).Load (1 samples, 0.12%)</title><rect x="834.7" y="277" width="1.4" height="15.0" fill="rgb(231,180,36)" rx="2" ry="2" />
<text  x="837.68" y="287.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (1 samples, 0.12%)</title><rect x="866.9" y="341" width="1.4" height="15.0" fill="rgb(226,203,51)" rx="2" ry="2" />
<text  x="869.85" y="351.5" ></text>
</g>
<g >
<title>syscall.Write (7 samples, 0.87%)</title><rect x="34.9" y="501" width="10.2" height="15.0" fill="rgb(249,29,1)" rx="2" ry="2" />
<text  x="37.86" y="511.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.(*decoder).scalar (3 samples, 0.37%)</title><rect x="961.9" y="309" width="4.4" height="15.0" fill="rgb(236,130,6)" rx="2" ry="2" />
<text  x="964.90" y="319.5" ></text>
</g>
<g >
<title>k8s.io/apimachinery/pkg/util/wait.BackoffUntil.func1 (3 samples, 0.37%)</title><rect x="26.1" y="501" width="4.4" height="15.0" fill="rgb(250,36,9)" rx="2" ry="2" />
<text  x="29.08" y="511.5" ></text>
</g>
<g >
<title>net.(*conn).Write (1 samples, 0.12%)</title><rect x="774.7" y="485" width="1.5" height="15.0" fill="rgb(244,40,15)" rx="2" ry="2" />
<text  x="777.73" y="495.5" ></text>
</g>
<g >
<title>crypto/sha256.(*digest).Write (1 samples, 0.12%)</title><rect x="68.5" y="453" width="1.5" height="15.0" fill="rgb(254,111,6)" rx="2" ry="2" />
<text  x="71.49" y="463.5" ></text>
</g>
<g >
<title>math/big.nat.div (1 samples, 0.12%)</title><rect x="704.5" y="421" width="1.5" height="15.0" fill="rgb(215,69,52)" rx="2" ry="2" />
<text  x="707.55" y="431.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.(*parser).mapping (1 samples, 0.12%)</title><rect x="969.2" y="309" width="1.5" height="15.0" fill="rgb(236,213,43)" rx="2" ry="2" />
<text  x="972.21" y="319.5" ></text>
</g>
<g >
<title>bytes.(*Buffer).ReadFrom (5 samples, 0.62%)</title><rect x="805.4" y="501" width="7.4" height="15.0" fill="rgb(224,117,20)" rx="2" ry="2" />
<text  x="808.44" y="511.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.12%)</title><rect x="805.4" y="421" width="1.5" height="15.0" fill="rgb(227,99,50)" rx="2" ry="2" />
<text  x="808.44" y="431.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.(*parser).document (6 samples, 0.74%)</title><rect x="859.5" y="421" width="8.8" height="15.0" fill="rgb(208,82,38)" rx="2" ry="2" />
<text  x="862.54" y="431.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.(*decoder).scalar (1 samples, 0.12%)</title><rect x="960.4" y="277" width="1.5" height="15.0" fill="rgb(228,105,48)" rx="2" ry="2" />
<text  x="963.43" y="287.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.(*decoder).document (8 samples, 0.99%)</title><rect x="957.5" y="405" width="11.7" height="15.0" fill="rgb(227,23,46)" rx="2" ry="2" />
<text  x="960.51" y="415.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).reflectValue (9 samples, 1.12%)</title><rect x="940.0" y="357" width="13.1" height="15.0" fill="rgb(216,100,18)" rx="2" ry="2" />
<text  x="942.96" y="367.5" ></text>
</g>
<g >
<title>github.com/json-iterator/go.(*OptionalDecoder).Decode (11 samples, 1.36%)</title><rect x="1010.1" y="421" width="16.1" height="15.0" fill="rgb(231,114,4)" rx="2" ry="2" />
<text  x="1013.15" y="431.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (9 samples, 1.12%)</title><rect x="814.2" y="421" width="13.2" height="15.0" fill="rgb(232,92,31)" rx="2" ry="2" />
<text  x="817.21" y="431.5" ></text>
</g>
<g >
<title>runtime.mapiterinit (1 samples, 0.12%)</title><rect x="953.1" y="341" width="1.5" height="15.0" fill="rgb(226,165,12)" rx="2" ry="2" />
<text  x="956.12" y="351.5" ></text>
</g>
<g >
<title>runtime.releasem (1 samples, 0.12%)</title><rect x="843.5" y="373" width="1.4" height="15.0" fill="rgb(243,191,18)" rx="2" ry="2" />
<text  x="846.46" y="383.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (2 samples, 0.25%)</title><rect x="768.9" y="533" width="2.9" height="15.0" fill="rgb(237,153,33)" rx="2" ry="2" />
<text  x="771.88" y="543.5" ></text>
</g>
<g >
<title>runtime.newstack (2 samples, 0.25%)</title><rect x="1055.5" y="469" width="2.9" height="15.0" fill="rgb(223,156,48)" rx="2" ry="2" />
<text  x="1058.48" y="479.5" ></text>
</g>
<g >
<title>reflect.MakeMap (1 samples, 0.12%)</title><rect x="858.1" y="357" width="1.4" height="15.0" fill="rgb(205,214,35)" rx="2" ry="2" />
<text  x="861.08" y="367.5" ></text>
</g>
<g >
<title>crypto/tls.(*Conn).readRecordOrCCS (1 samples, 0.12%)</title><rect x="808.4" y="389" width="1.4" height="15.0" fill="rgb(247,209,17)" rx="2" ry="2" />
<text  x="811.36" y="399.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.12%)</title><rect x="956.0" y="405" width="1.5" height="15.0" fill="rgb(208,41,51)" rx="2" ry="2" />
<text  x="959.05" y="415.5" ></text>
</g>
<g >
<title>net.IP.String (1 samples, 0.12%)</title><rect x="749.9" y="581" width="1.4" height="15.0" fill="rgb(252,115,54)" rx="2" ry="2" />
<text  x="752.88" y="591.5" ></text>
</g>
<g >
<title>io.ReadAtLeast (1 samples, 0.12%)</title><rect x="72.9" y="437" width="1.4" height="15.0" fill="rgb(209,99,10)" rx="2" ry="2" />
<text  x="75.87" y="447.5" ></text>
</g>
<g >
<title>runtime.futex (2 samples, 0.25%)</title><rect x="1169.5" y="517" width="3.0" height="15.0" fill="rgb(242,69,29)" rx="2" ry="2" />
<text  x="1172.53" y="527.5" ></text>
</g>
<g >
<title>sync.(*Pool).pin (1 samples, 0.12%)</title><rect x="836.1" y="405" width="1.5" height="15.0" fill="rgb(248,100,29)" rx="2" ry="2" />
<text  x="839.15" y="415.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (1 samples, 0.12%)</title><rect x="956.0" y="389" width="1.5" height="15.0" fill="rgb(241,225,47)" rx="2" ry="2" />
<text  x="959.05" y="399.5" ></text>
</g>
<g >
<title>syscall.SetsockoptInt (2 samples, 0.25%)</title><rect x="23.2" y="485" width="2.9" height="15.0" fill="rgb(253,220,33)" rx="2" ry="2" />
<text  x="26.16" y="495.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.12%)</title><rect x="825.9" y="373" width="1.5" height="15.0" fill="rgb(223,105,39)" rx="2" ry="2" />
<text  x="828.91" y="383.5" ></text>
</g>
<g >
<title>bytes.(*Buffer).ReadFrom (1 samples, 0.12%)</title><rect x="808.4" y="357" width="1.4" height="15.0" fill="rgb(236,142,45)" rx="2" ry="2" />
<text  x="811.36" y="367.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.12%)</title><rect x="903.4" y="389" width="1.5" height="15.0" fill="rgb(239,73,40)" rx="2" ry="2" />
<text  x="906.41" y="399.5" ></text>
</g>
<g >
<title>golang.org/long long/net/http2.stickyErrWriter.Write (1 samples, 0.12%)</title><rect x="29.0" y="197" width="1.5" height="15.0" fill="rgb(213,164,41)" rx="2" ry="2" />
<text  x="32.01" y="207.5" ></text>
</g>
<g >
<title>vendor/golang.org/long long/crypto/cryptobyte.(*Builder).callContinuation (1 samples, 0.12%)</title><rect x="744.0" y="485" width="1.5" height="15.0" fill="rgb(219,141,44)" rx="2" ry="2" />
<text  x="747.03" y="495.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpan (1 samples, 0.12%)</title><rect x="1074.5" y="549" width="1.4" height="15.0" fill="rgb(241,110,5)" rx="2" ry="2" />
<text  x="1077.49" y="559.5" ></text>
</g>
<g >
<title>runtime.newproc (2 samples, 0.25%)</title><rect x="809.8" y="437" width="3.0" height="15.0" fill="rgb(211,120,36)" rx="2" ry="2" />
<text  x="812.83" y="447.5" ></text>
</g>
<g >
<title>github.com/json-iterator/go.(*Iterator).ReadObjectCB (1 samples, 0.12%)</title><rect x="1016.0" y="133" width="1.5" height="15.0" fill="rgb(228,53,47)" rx="2" ry="2" />
<text  x="1019.00" y="143.5" ></text>
</g>
<g >
<title>net/textproto.(*Reader).ReadMIMEHeader (1 samples, 0.12%)</title><rect x="766.0" y="565" width="1.4" height="15.0" fill="rgb(239,152,49)" rx="2" ry="2" />
<text  x="768.96" y="575.5" ></text>
</g>
<g >
<title>net/url.ParseRequestURI (1 samples, 0.12%)</title><rect x="767.4" y="565" width="1.5" height="15.0" fill="rgb(206,79,41)" rx="2" ry="2" />
<text  x="770.42" y="575.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.(*decoder).unmarshal (6 samples, 0.74%)</title><rect x="850.8" y="405" width="8.7" height="15.0" fill="rgb(244,126,15)" rx="2" ry="2" />
<text  x="853.77" y="415.5" ></text>
</g>
<g >
<title>math/big.(*Int).Add (4 samples, 0.50%)</title><rect x="691.4" y="389" width="5.8" height="15.0" fill="rgb(218,63,44)" rx="2" ry="2" />
<text  x="694.39" y="399.5" ></text>
</g>
<g >
<title>math/big.nat.norm (1 samples, 0.12%)</title><rect x="701.6" y="341" width="1.5" height="15.0" fill="rgb(212,17,5)" rx="2" ry="2" />
<text  x="704.62" y="351.5" ></text>
</g>
<g >
<title>crypto/tls.(*atLeastReader).Read (3 samples, 0.37%)</title><rect x="1055.5" y="533" width="4.4" height="15.0" fill="rgb(246,185,30)" rx="2" ry="2" />
<text  x="1058.48" y="543.5" ></text>
</g>
<g >
<title>reflect.Value.Addr (1 samples, 0.12%)</title><rect x="966.3" y="325" width="1.4" height="15.0" fill="rgb(238,215,50)" rx="2" ry="2" />
<text  x="969.28" y="335.5" ></text>
</g>
<g >
<title>k8s.io/client-go/transport.(*bearerAuthRoundTripper).RoundTrip (1 samples, 0.12%)</title><rect x="30.5" y="325" width="1.4" height="15.0" fill="rgb(213,96,35)" rx="2" ry="2" />
<text  x="33.47" y="335.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.(*decoder).unmarshal (5 samples, 0.62%)</title><rect x="852.2" y="373" width="7.3" height="15.0" fill="rgb(254,21,47)" rx="2" ry="2" />
<text  x="855.23" y="383.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (1 samples, 0.12%)</title><rect x="869.8" y="261" width="1.4" height="15.0" fill="rgb(244,170,0)" rx="2" ry="2" />
<text  x="872.78" y="271.5" ></text>
</g>
<g >
<title>runtime.newstack (1 samples, 0.12%)</title><rect x="749.9" y="565" width="1.4" height="15.0" fill="rgb(218,195,20)" rx="2" ry="2" />
<text  x="752.88" y="575.5" ></text>
</g>
<g >
<title>crypto/tls.(*serverHandshakeStateTLS13).sendServerFinished (7 samples, 0.87%)</title><rect x="732.3" y="549" width="10.3" height="15.0" fill="rgb(254,82,34)" rx="2" ry="2" />
<text  x="735.33" y="559.5" ></text>
</g>
<g >
<title>runtime.assertE2I2 (1 samples, 0.12%)</title><rect x="935.6" y="437" width="1.4" height="15.0" fill="rgb(240,79,41)" rx="2" ry="2" />
<text  x="938.58" y="447.5" ></text>
</g>
<g >
<title>github.com/json-iterator/go.(*Iterator).readByte (1 samples, 0.12%)</title><rect x="1016.0" y="37" width="1.5" height="15.0" fill="rgb(247,164,26)" rx="2" ry="2" />
<text  x="1019.00" y="47.5" ></text>
</g>
<g >
<title>runtime.heapBits.bits (4 samples, 0.50%)</title><rect x="1078.9" y="549" width="5.8" height="15.0" fill="rgb(221,155,16)" rx="2" ry="2" />
<text  x="1081.87" y="559.5" ></text>
</g>
<g >
<title>net.(*conn).Write (1 samples, 0.12%)</title><rect x="29.0" y="133" width="1.5" height="15.0" fill="rgb(244,109,3)" rx="2" ry="2" />
<text  x="32.01" y="143.5" ></text>
</g>
<g >
<title>golang.org/long long/net/http2.(*ClientConn).roundTrip (1 samples, 0.12%)</title><rect x="30.5" y="245" width="1.4" height="15.0" fill="rgb(254,192,54)" rx="2" ry="2" />
<text  x="33.47" y="255.5" ></text>
</g>
<g >
<title>runtime.mcall (13 samples, 1.61%)</title><rect x="1146.1" y="613" width="19.0" height="15.0" fill="rgb(230,195,31)" rx="2" ry="2" />
<text  x="1149.13" y="623.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.25%)</title><rect x="863.9" y="325" width="3.0" height="15.0" fill="rgb(242,3,6)" rx="2" ry="2" />
<text  x="866.93" y="335.5" ></text>
</g>
<g >
<title>runtime.(*maptype).indirectkey (1 samples, 0.12%)</title><rect x="957.5" y="277" width="1.5" height="15.0" fill="rgb(222,180,35)" rx="2" ry="2" />
<text  x="960.51" y="287.5" ></text>
</g>
<g >
<title>k8s.io/client-go/tools/leaderelection/resourcelock.(*ConfigMapLock).Get (1 samples, 0.12%)</title><rect x="26.1" y="453" width="1.4" height="15.0" fill="rgb(238,187,42)" rx="2" ry="2" />
<text  x="29.08" y="463.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).reflectValue (5 samples, 0.62%)</title><rect x="828.8" y="325" width="7.3" height="15.0" fill="rgb(211,6,17)" rx="2" ry="2" />
<text  x="831.84" y="335.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (1 samples, 0.12%)</title><rect x="903.4" y="341" width="1.5" height="15.0" fill="rgb(225,47,43)" rx="2" ry="2" />
<text  x="906.41" y="351.5" ></text>
</g>
<g >
<title>encoding/json.stateInString (2 samples, 0.25%)</title><rect x="1032.1" y="373" width="2.9" height="15.0" fill="rgb(206,142,17)" rx="2" ry="2" />
<text  x="1035.08" y="383.5" ></text>
</g>
<g >
<title>reflect.Value.Convert (1 samples, 0.12%)</title><rect x="909.3" y="341" width="1.4" height="15.0" fill="rgb(241,155,17)" rx="2" ry="2" />
<text  x="912.26" y="351.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (2 samples, 0.25%)</title><rect x="768.9" y="469" width="2.9" height="15.0" fill="rgb(230,195,32)" rx="2" ry="2" />
<text  x="771.88" y="479.5" ></text>
</g>
<g >
<title>net/http.(*Client).do (2 samples, 0.25%)</title><rect x="27.5" y="389" width="3.0" height="15.0" fill="rgb(207,131,5)" rx="2" ry="2" />
<text  x="30.55" y="399.5" ></text>
</g>
<g >
<title>crypto/tls.(*Conn).write (1 samples, 0.12%)</title><rect x="774.7" y="501" width="1.5" height="15.0" fill="rgb(219,111,20)" rx="2" ry="2" />
<text  x="777.73" y="511.5" ></text>
</g>
<g >
<title>runtime.makeslice (3 samples, 0.37%)</title><rect x="882.9" y="277" width="4.4" height="15.0" fill="rgb(213,0,44)" rx="2" ry="2" />
<text  x="885.94" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpan.func1 (1 samples, 0.12%)</title><rect x="894.6" y="117" width="1.5" height="15.0" fill="rgb(243,20,50)" rx="2" ry="2" />
<text  x="897.63" y="127.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.12%)</title><rect x="885.9" y="245" width="1.4" height="15.0" fill="rgb(208,76,37)" rx="2" ry="2" />
<text  x="888.86" y="255.5" ></text>
</g>
<g >
<title>k8s.io/client-go/kubernetes/typed/core/v1.(*configMaps).Get (1 samples, 0.12%)</title><rect x="30.5" y="437" width="1.4" height="15.0" fill="rgb(228,157,35)" rx="2" ry="2" />
<text  x="33.47" y="447.5" ></text>
</g>
<g >
<title>net.(*conn).Read (1 samples, 0.12%)</title><rect x="808.4" y="325" width="1.4" height="15.0" fill="rgb(205,180,9)" rx="2" ry="2" />
<text  x="811.36" y="335.5" ></text>
</g>
<g >
<title>math/big.nat.mulAddWW (2 samples, 0.25%)</title><rect x="700.2" y="357" width="2.9" height="15.0" fill="rgb(221,218,5)" rx="2" ry="2" />
<text  x="703.16" y="367.5" ></text>
</g>
<g >
<title>memeqbody (1 samples, 0.12%)</title><rect x="839.1" y="421" width="1.4" height="15.0" fill="rgb(249,38,41)" rx="2" ry="2" />
<text  x="842.07" y="431.5" ></text>
</g>
<g >
<title>encoding/json.stateEndValue (1 samples, 0.12%)</title><rect x="1042.3" y="437" width="1.5" height="15.0" fill="rgb(250,228,20)" rx="2" ry="2" />
<text  x="1045.32" y="447.5" ></text>
</g>
<g >
<title>reflect.cvtBytesString (1 samples, 0.12%)</title><rect x="909.3" y="325" width="1.4" height="15.0" fill="rgb(231,98,31)" rx="2" ry="2" />
<text  x="912.26" y="335.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.(*parser).parse (1 samples, 0.12%)</title><rect x="859.5" y="309" width="1.5" height="15.0" fill="rgb(246,46,16)" rx="2" ry="2" />
<text  x="862.54" y="319.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (2 samples, 0.25%)</title><rect x="896.1" y="229" width="2.9" height="15.0" fill="rgb(249,145,3)" rx="2" ry="2" />
<text  x="899.10" y="239.5" ></text>
</g>
<g >
<title>github.com/json-iterator/go.(*Iterator).ReadString (1 samples, 0.12%)</title><rect x="1016.0" y="69" width="1.5" height="15.0" fill="rgb(234,200,40)" rx="2" ry="2" />
<text  x="1019.00" y="79.5" ></text>
</g>
<g >
<title>runtime.growslice (8 samples, 0.99%)</title><rect x="888.8" y="293" width="11.7" height="15.0" fill="rgb(226,35,8)" rx="2" ry="2" />
<text  x="891.79" y="303.5" ></text>
</g>
<g >
<title>reflect.Value.Addr (1 samples, 0.12%)</title><rect x="817.1" y="325" width="1.5" height="15.0" fill="rgb(207,109,22)" rx="2" ry="2" />
<text  x="820.14" y="335.5" ></text>
</g>
<g >
<title>vendor/golang.org/long long/crypto/cryptobyte.(*Builder).addLengthPrefixed (1 samples, 0.12%)</title><rect x="730.9" y="517" width="1.4" height="15.0" fill="rgb(218,158,50)" rx="2" ry="2" />
<text  x="733.87" y="527.5" ></text>
</g>
<g >
<title>istio.io/istio/pkg/webhooks/validation/server.serve (166 samples, 20.57%)</title><rect x="812.8" y="533" width="242.7" height="15.0" fill="rgb(224,14,3)" rx="2" ry="2" />
<text  x="815.75" y="543.5" >istio.io/istio/pkg/webhooks/vali..</text>
</g>
<g >
<title>runtime.gcDrain (47 samples, 5.82%)</title><rect x="1077.4" y="565" width="68.7" height="15.0" fill="rgb(234,43,54)" rx="2" ry="2" />
<text  x="1080.41" y="575.5" >runtime..</text>
</g>
<g >
<title>crypto/tls.(*Conn).writeRecordLocked (1 samples, 0.12%)</title><rect x="30.5" y="165" width="1.4" height="15.0" fill="rgb(242,214,22)" rx="2" ry="2" />
<text  x="33.47" y="175.5" ></text>
</g>
<g >
<title>crypto/tls.(*Conn).readRecord (7 samples, 0.87%)</title><rect x="751.3" y="533" width="10.3" height="15.0" fill="rgb(223,107,29)" rx="2" ry="2" />
<text  x="754.34" y="543.5" ></text>
</g>
<g >
<title>runtime.newproc.func1 (2 samples, 0.25%)</title><rect x="809.8" y="405" width="3.0" height="15.0" fill="rgb(253,117,40)" rx="2" ry="2" />
<text  x="812.83" y="415.5" ></text>
</g>
<g >
<title>syscall.Read (5 samples, 0.62%)</title><rect x="754.3" y="421" width="7.3" height="15.0" fill="rgb(245,94,51)" rx="2" ry="2" />
<text  x="757.26" y="431.5" ></text>
</g>
<g >
<title>net.ipEmptyString (1 samples, 0.12%)</title><rect x="749.9" y="597" width="1.4" height="15.0" fill="rgb(227,158,2)" rx="2" ry="2" />
<text  x="752.88" y="607.5" ></text>
</g>
<g >
<title>runtime.duffcopy (1 samples, 0.12%)</title><rect x="982.4" y="277" width="1.4" height="15.0" fill="rgb(211,7,49)" rx="2" ry="2" />
<text  x="985.37" y="287.5" ></text>
</g>
<g >
<title>net.(*netFD).Write (7 samples, 0.87%)</title><rect x="34.9" y="517" width="10.2" height="15.0" fill="rgb(234,127,2)" rx="2" ry="2" />
<text  x="37.86" y="527.5" ></text>
</g>
<g >
<title>vendor/golang.org/long long/crypto/cryptobyte.(*Builder).callContinuation (1 samples, 0.12%)</title><rect x="745.5" y="469" width="1.5" height="15.0" fill="rgb(227,226,41)" rx="2" ry="2" />
<text  x="748.49" y="479.5" ></text>
</g>
<g >
<title>vendor/golang.org/long long/crypto/cryptobyte.(*Builder).addLengthPrefixed (1 samples, 0.12%)</title><rect x="748.4" y="469" width="1.5" height="15.0" fill="rgb(219,50,30)" rx="2" ry="2" />
<text  x="751.41" y="479.5" ></text>
</g>
<g >
<title>math/big.addMulVVW (3 samples, 0.37%)</title><rect x="722.1" y="389" width="4.4" height="15.0" fill="rgb(212,202,6)" rx="2" ry="2" />
<text  x="725.09" y="399.5" ></text>
</g>
<g >
<title>runtime.mapassign (1 samples, 0.12%)</title><rect x="763.0" y="549" width="1.5" height="15.0" fill="rgb(251,37,0)" rx="2" ry="2" />
<text  x="766.04" y="559.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (4 samples, 0.50%)</title><rect x="997.0" y="181" width="5.8" height="15.0" fill="rgb(215,156,46)" rx="2" ry="2" />
<text  x="999.99" y="191.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (2 samples, 0.25%)</title><rect x="978.0" y="229" width="2.9" height="15.0" fill="rgb(208,66,8)" rx="2" ry="2" />
<text  x="980.98" y="239.5" ></text>
</g>
<g >
<title>vendor/golang.org/long long/crypto/cryptobyte.(*Builder).addLengthPrefixed (1 samples, 0.12%)</title><rect x="748.4" y="517" width="1.5" height="15.0" fill="rgb(248,31,42)" rx="2" ry="2" />
<text  x="751.41" y="527.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.12%)</title><rect x="842.0" y="405" width="1.5" height="15.0" fill="rgb(227,73,6)" rx="2" ry="2" />
<text  x="845.00" y="415.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.yaml_parser_parse (24 samples, 2.97%)</title><rect x="973.6" y="389" width="35.1" height="15.0" fill="rgb(217,209,43)" rx="2" ry="2" />
<text  x="976.59" y="399.5" >go..</text>
</g>
<g >
<title>encoding/json.(*encodeState).string (3 samples, 0.37%)</title><rect x="830.3" y="245" width="4.4" height="15.0" fill="rgb(245,81,6)" rx="2" ry="2" />
<text  x="833.30" y="255.5" ></text>
</g>
<g >
<title>runtime.systemstack (6 samples, 0.74%)</title><rect x="1065.7" y="597" width="8.8" height="15.0" fill="rgb(244,92,7)" rx="2" ry="2" />
<text  x="1068.71" y="607.5" ></text>
</g>
<g >
<title>encoding/json.Unmarshal (8 samples, 0.99%)</title><rect x="913.6" y="389" width="11.7" height="15.0" fill="rgb(213,13,25)" rx="2" ry="2" />
<text  x="916.64" y="399.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (2 samples, 0.25%)</title><rect x="937.0" y="405" width="3.0" height="15.0" fill="rgb(234,81,11)" rx="2" ry="2" />
<text  x="940.04" y="415.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).literalStore (1 samples, 0.12%)</title><rect x="921.0" y="309" width="1.4" height="15.0" fill="rgb(209,182,40)" rx="2" ry="2" />
<text  x="923.95" y="319.5" ></text>
</g>
<g >
<title>runtime.systemstack (3 samples, 0.37%)</title><rect x="986.8" y="229" width="4.3" height="15.0" fill="rgb(213,24,45)" rx="2" ry="2" />
<text  x="989.75" y="239.5" ></text>
</g>
<g >
<title>runtime.acquirem (1 samples, 0.12%)</title><rect x="954.6" y="341" width="1.4" height="15.0" fill="rgb(244,192,4)" rx="2" ry="2" />
<text  x="957.58" y="351.5" ></text>
</g>
<g >
<title>istio.io/istio/pkg/webhooks/validation/server.(*Webhook).admitPilot (134 samples, 16.60%)</title><rect x="814.2" y="501" width="195.9" height="15.0" fill="rgb(239,137,7)" rx="2" ry="2" />
<text  x="817.21" y="511.5" >istio.io/istio/pkg/webhoo..</text>
</g>
<g >
<title>encoding/json.(*decodeState).value (5 samples, 0.62%)</title><rect x="1027.7" y="405" width="7.3" height="15.0" fill="rgb(219,200,29)" rx="2" ry="2" />
<text  x="1030.70" y="415.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker.func2 (48 samples, 5.95%)</title><rect x="1075.9" y="581" width="70.2" height="15.0" fill="rgb(207,192,7)" rx="2" ry="2" />
<text  x="1078.95" y="591.5" >runtime..</text>
</g>
<g >
<title>reflect.Value.SetMapIndex (2 samples, 0.25%)</title><rect x="853.7" y="325" width="2.9" height="15.0" fill="rgb(227,117,44)" rx="2" ry="2" />
<text  x="856.69" y="335.5" ></text>
</g>
<g >
<title>runtime.getArgInfoFast (1 samples, 0.12%)</title><rect x="1097.9" y="501" width="1.4" height="15.0" fill="rgb(245,51,25)" rx="2" ry="2" />
<text  x="1100.88" y="511.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.(*parser).peek (1 samples, 0.12%)</title><rect x="970.7" y="309" width="1.4" height="15.0" fill="rgb(241,174,4)" rx="2" ry="2" />
<text  x="973.67" y="319.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.12%)</title><rect x="849.3" y="405" width="1.5" height="15.0" fill="rgb(251,22,24)" rx="2" ry="2" />
<text  x="852.31" y="415.5" ></text>
</g>
<g >
<title>internal/poll.(*pollDesc).waitRead (1 samples, 0.12%)</title><rect x="65.6" y="421" width="1.4" height="15.0" fill="rgb(210,189,49)" rx="2" ry="2" />
<text  x="68.56" y="431.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.12%)</title><rect x="866.9" y="357" width="1.4" height="15.0" fill="rgb(221,72,46)" rx="2" ry="2" />
<text  x="869.85" y="367.5" ></text>
</g>
<g >
<title>github.com/json-iterator/go.(*Iterator).ReadString (2 samples, 0.25%)</title><rect x="1013.1" y="245" width="2.9" height="15.0" fill="rgb(205,218,4)" rx="2" ry="2" />
<text  x="1016.07" y="255.5" ></text>
</g>
<g >
<title>crypto/tls.(*cipherSuiteTLS13).finishedHash (1 samples, 0.12%)</title><rect x="735.3" y="533" width="1.4" height="15.0" fill="rgb(226,220,22)" rx="2" ry="2" />
<text  x="738.25" y="543.5" ></text>
</g>
<g >
<title>crypto/tls.(*cipherSuiteTLS13).expandLabel (1 samples, 0.12%)</title><rect x="735.3" y="517" width="1.4" height="15.0" fill="rgb(221,97,44)" rx="2" ry="2" />
<text  x="738.25" y="527.5" ></text>
</g>
<g >
<title>runtime.assertI2I2 (2 samples, 0.25%)</title><rect x="777.7" y="517" width="2.9" height="15.0" fill="rgb(225,91,9)" rx="2" ry="2" />
<text  x="780.66" y="527.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.yaml_parser_append_tag_directive (1 samples, 0.12%)</title><rect x="1007.2" y="325" width="1.5" height="15.0" fill="rgb(235,146,32)" rx="2" ry="2" />
<text  x="1010.22" y="335.5" ></text>
</g>
<g >
<title>reflect.makemap (1 samples, 0.12%)</title><rect x="858.1" y="325" width="1.4" height="15.0" fill="rgb(250,21,18)" rx="2" ry="2" />
<text  x="861.08" y="335.5" ></text>
</g>
<g >
<title>runtime.mallocgc (3 samples, 0.37%)</title><rect x="1059.9" y="533" width="4.4" height="15.0" fill="rgb(239,220,36)" rx="2" ry="2" />
<text  x="1062.86" y="543.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.12%)</title><rect x="919.5" y="293" width="1.5" height="15.0" fill="rgb(230,189,49)" rx="2" ry="2" />
<text  x="922.49" y="303.5" ></text>
</g>
<g >
<title>net.setKeepAlivePeriod (2 samples, 0.25%)</title><rect x="23.2" y="501" width="2.9" height="15.0" fill="rgb(216,86,1)" rx="2" ry="2" />
<text  x="26.16" y="511.5" ></text>
</g>
<g >
<title>runtime.mstart1 (17 samples, 2.11%)</title><rect x="1165.1" y="597" width="24.9" height="15.0" fill="rgb(243,64,21)" rx="2" ry="2" />
<text  x="1168.14" y="607.5" >r..</text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.Unmarshal (38 samples, 4.71%)</title><rect x="849.3" y="469" width="55.6" height="15.0" fill="rgb(247,173,7)" rx="2" ry="2" />
<text  x="852.31" y="479.5" >gopkg..</text>
</g>
<g >
<title>syscall.Syscall6 (2 samples, 0.25%)</title><rect x="15.8" y="421" width="3.0" height="15.0" fill="rgb(215,155,1)" rx="2" ry="2" />
<text  x="18.85" y="431.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.read (3 samples, 0.37%)</title><rect x="978.0" y="277" width="4.4" height="15.0" fill="rgb(210,24,32)" rx="2" ry="2" />
<text  x="980.98" y="287.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (1 samples, 0.12%)</title><rect x="909.3" y="357" width="1.4" height="15.0" fill="rgb(242,160,18)" rx="2" ry="2" />
<text  x="912.26" y="367.5" ></text>
</g>
<g >
<title>runtime.scanobject (2 samples, 0.25%)</title><rect x="768.9" y="453" width="2.9" height="15.0" fill="rgb(217,81,42)" rx="2" ry="2" />
<text  x="771.88" y="463.5" ></text>
</g>
<g >
<title>vendor/golang.org/long long/crypto/cryptobyte.(*Builder).AddUint8LengthPrefixed (1 samples, 0.12%)</title><rect x="733.8" y="517" width="1.5" height="15.0" fill="rgb(226,107,47)" rx="2" ry="2" />
<text  x="736.79" y="527.5" ></text>
</g>
<g >
<title>math/big.nat.sqr (2 samples, 0.25%)</title><rect x="675.3" y="421" width="2.9" height="15.0" fill="rgb(216,15,0)" rx="2" ry="2" />
<text  x="678.30" y="431.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.12%)</title><rect x="828.8" y="261" width="1.5" height="15.0" fill="rgb(254,39,41)" rx="2" ry="2" />
<text  x="831.84" y="271.5" ></text>
</g>
<g >
<title>crypto/tls.(*atLeastReader).Read (1 samples, 0.12%)</title><rect x="808.4" y="341" width="1.4" height="15.0" fill="rgb(215,29,26)" rx="2" ry="2" />
<text  x="811.36" y="351.5" ></text>
</g>
<g >
<title>net/http.(*Client).send (1 samples, 0.12%)</title><rect x="26.1" y="373" width="1.4" height="15.0" fill="rgb(245,159,51)" rx="2" ry="2" />
<text  x="29.08" y="383.5" ></text>
</g>
<g >
<title>github.com/json-iterator/go.(*Iterator).Skip (1 samples, 0.12%)</title><rect x="1016.0" y="165" width="1.5" height="15.0" fill="rgb(234,23,4)" rx="2" ry="2" />
<text  x="1019.00" y="175.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.12%)</title><rect x="863.9" y="229" width="1.5" height="15.0" fill="rgb(219,148,28)" rx="2" ry="2" />
<text  x="866.93" y="239.5" ></text>
</g>
<g >
<title>istio.io/istio/pkg/webhooks/validation/server.(*Webhook).serveValidate (171 samples, 21.19%)</title><rect x="805.4" y="549" width="250.1" height="15.0" fill="rgb(226,54,1)" rx="2" ry="2" />
<text  x="808.44" y="559.5" >istio.io/istio/pkg/webhooks/valid..</text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.yaml_parser_parse_document_start (1 samples, 0.12%)</title><rect x="1007.2" y="357" width="1.5" height="15.0" fill="rgb(205,145,46)" rx="2" ry="2" />
<text  x="1010.22" y="367.5" ></text>
</g>
<g >
<title>runtime.madvise (6 samples, 0.74%)</title><rect x="1065.7" y="517" width="8.8" height="15.0" fill="rgb(234,5,32)" rx="2" ry="2" />
<text  x="1068.71" y="527.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.12%)</title><rect x="903.4" y="325" width="1.5" height="15.0" fill="rgb(237,213,46)" rx="2" ry="2" />
<text  x="906.41" y="335.5" ></text>
</g>
<g >
<title>github.com/ghodss/yaml.Unmarshal (50 samples, 6.20%)</title><rect x="937.0" y="469" width="73.1" height="15.0" fill="rgb(217,107,22)" rx="2" ry="2" />
<text  x="940.04" y="479.5" >github.c..</text>
</g>
<g >
<title>crypto/tls.(*Conn).readRecordOrCCS (7 samples, 0.87%)</title><rect x="751.3" y="517" width="10.3" height="15.0" fill="rgb(207,30,14)" rx="2" ry="2" />
<text  x="754.34" y="527.5" ></text>
</g>
<g >
<title>vendor/golang.org/long long/crypto/cryptobyte.(*Builder).add (1 samples, 0.12%)</title><rect x="733.8" y="469" width="1.5" height="15.0" fill="rgb(207,38,3)" rx="2" ry="2" />
<text  x="736.79" y="479.5" ></text>
</g>
<g >
<title>bufio.(*Writer).Flush (1 samples, 0.12%)</title><rect x="30.5" y="213" width="1.4" height="15.0" fill="rgb(215,21,18)" rx="2" ry="2" />
<text  x="33.47" y="223.5" ></text>
</g>
<g >
<title>k8s.io/client-go/tools/leaderelection.(*LeaderElector).Run (3 samples, 0.37%)</title><rect x="26.1" y="565" width="4.4" height="15.0" fill="rgb(223,147,17)" rx="2" ry="2" />
<text  x="29.08" y="575.5" ></text>
</g>
<g >
<title>github.com/json-iterator/go.(*Iterator).SkipAndReturnBytes (4 samples, 0.50%)</title><rect x="1017.5" y="325" width="5.8" height="15.0" fill="rgb(250,92,3)" rx="2" ry="2" />
<text  x="1020.46" y="335.5" ></text>
</g>
<g >
<title>math/big.(*Int).Exp (14 samples, 1.73%)</title><rect x="706.0" y="453" width="20.5" height="15.0" fill="rgb(249,19,2)" rx="2" ry="2" />
<text  x="709.01" y="463.5" ></text>
</g>
<g >
<title>net/http.(*conn).close (1 samples, 0.12%)</title><rect x="774.7" y="581" width="1.5" height="15.0" fill="rgb(231,172,34)" rx="2" ry="2" />
<text  x="777.73" y="591.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.(*parser).node (1 samples, 0.12%)</title><rect x="972.1" y="341" width="1.5" height="15.0" fill="rgb(241,188,30)" rx="2" ry="2" />
<text  x="975.13" y="351.5" ></text>
</g>
<g >
<title>k8s.io/client-go/kubernetes/typed/core/v1.(*configMaps).Update (2 samples, 0.25%)</title><rect x="27.5" y="437" width="3.0" height="15.0" fill="rgb(240,136,0)" rx="2" ry="2" />
<text  x="30.55" y="447.5" ></text>
</g>
<g >
<title>github.com/json-iterator/go.(*Iterator).Skip (3 samples, 0.37%)</title><rect x="1018.9" y="245" width="4.4" height="15.0" fill="rgb(208,147,7)" rx="2" ry="2" />
<text  x="1021.92" y="255.5" ></text>
</g>
<g >
<title>net/http.serverHandler.ServeHTTP (172 samples, 21.31%)</title><rect x="804.0" y="597" width="251.5" height="15.0" fill="rgb(234,76,28)" rx="2" ry="2" />
<text  x="806.98" y="607.5" >net/http.serverHandler.ServeHTTP</text>
</g>
<g >
<title>io.ReadFull (1 samples, 0.12%)</title><rect x="72.9" y="453" width="1.4" height="15.0" fill="rgb(225,190,49)" rx="2" ry="2" />
<text  x="75.87" y="463.5" ></text>
</g>
<g >
<title>runtime.gfget.func1 (1 samples, 0.12%)</title><rect x="811.3" y="357" width="1.5" height="15.0" fill="rgb(227,85,15)" rx="2" ry="2" />
<text  x="814.29" y="367.5" ></text>
</g>
<g >
<title>encoding/json.mapEncoder.encode (5 samples, 0.62%)</title><rect x="828.8" y="405" width="7.3" height="15.0" fill="rgb(212,223,4)" rx="2" ry="2" />
<text  x="831.84" y="415.5" ></text>
</g>
<g >
<title>runtime.netpollready (1 samples, 0.12%)</title><rect x="1149.1" y="533" width="1.4" height="15.0" fill="rgb(253,29,29)" rx="2" ry="2" />
<text  x="1152.06" y="543.5" ></text>
</g>
<g >
<title>runtime.scanobject (1 samples, 0.12%)</title><rect x="956.0" y="309" width="1.5" height="15.0" fill="rgb(236,27,31)" rx="2" ry="2" />
<text  x="959.05" y="319.5" ></text>
</g>
<g >
<title>runtime.netpollopen (1 samples, 0.12%)</title><rect x="20.2" y="437" width="1.5" height="15.0" fill="rgb(220,78,12)" rx="2" ry="2" />
<text  x="23.24" y="447.5" ></text>
</g>
<g >
<title>crypto/tls.(*certificateMsgTLS13).marshal.func1 (1 samples, 0.12%)</title><rect x="730.9" y="485" width="1.4" height="15.0" fill="rgb(207,224,26)" rx="2" ry="2" />
<text  x="733.87" y="495.5" ></text>
</g>
<g >
<title>github.com/json-iterator/go.(*Iterator).ReadObjectCB (4 samples, 0.50%)</title><rect x="1017.5" y="277" width="5.8" height="15.0" fill="rgb(253,47,40)" rx="2" ry="2" />
<text  x="1020.46" y="287.5" ></text>
</g>
<g >
<title>k8s.io/client-go/tools/leaderelection.(*LeaderElector).acquire (3 samples, 0.37%)</title><rect x="26.1" y="549" width="4.4" height="15.0" fill="rgb(251,77,39)" rx="2" ry="2" />
<text  x="29.08" y="559.5" ></text>
</g>
<g >
<title>crypto/tls.(*Conn).Handshake (491 samples, 60.84%)</title><rect x="31.9" y="597" width="718.0" height="15.0" fill="rgb(213,215,52)" rx="2" ry="2" />
<text  x="34.93" y="607.5" >crypto/tls.(*Conn).Handshake</text>
</g>
<g >
<title>runtime.execute (1 samples, 0.12%)</title><rect x="1150.5" y="549" width="1.5" height="15.0" fill="rgb(219,63,35)" rx="2" ry="2" />
<text  x="1153.52" y="559.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.yaml_insert_token (6 samples, 0.74%)</title><rect x="985.3" y="293" width="8.8" height="15.0" fill="rgb(234,142,43)" rx="2" ry="2" />
<text  x="988.29" y="303.5" ></text>
</g>
<g >
<title>runtime.typedmemclr (1 samples, 0.12%)</title><rect x="1008.7" y="405" width="1.4" height="15.0" fill="rgb(244,216,7)" rx="2" ry="2" />
<text  x="1011.69" y="415.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.25%)</title><rect x="991.1" y="197" width="3.0" height="15.0" fill="rgb(215,52,32)" rx="2" ry="2" />
<text  x="994.14" y="207.5" ></text>
</g>
<g >
<title>runtime.notesleep (1 samples, 0.12%)</title><rect x="1162.2" y="533" width="1.5" height="15.0" fill="rgb(236,200,24)" rx="2" ry="2" />
<text  x="1165.22" y="543.5" ></text>
</g>
<g >
<title>github.com/json-iterator/go.(*referenceDecoder).Decode (5 samples, 0.62%)</title><rect x="1017.5" y="357" width="7.3" height="15.0" fill="rgb(246,73,30)" rx="2" ry="2" />
<text  x="1020.46" y="367.5" ></text>
</g>
<g >
<title>math/big.shlVU (1 samples, 0.12%)</title><rect x="90.4" y="389" width="1.5" height="15.0" fill="rgb(209,96,46)" rx="2" ry="2" />
<text  x="93.42" y="399.5" ></text>
</g>
<g >
<title>runtime.ready (1 samples, 0.12%)</title><rect x="1157.8" y="453" width="1.5" height="15.0" fill="rgb(205,93,42)" rx="2" ry="2" />
<text  x="1160.83" y="463.5" ></text>
</g>
<g >
<title>reflect.(*rtype).exportedMethods (1 samples, 0.12%)</title><rect x="814.2" y="341" width="1.5" height="15.0" fill="rgb(251,90,4)" rx="2" ry="2" />
<text  x="817.21" y="351.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.12%)</title><rect x="824.4" y="309" width="1.5" height="15.0" fill="rgb(245,164,21)" rx="2" ry="2" />
<text  x="827.45" y="319.5" ></text>
</g>
<g >
<title>go.opencensus.io/tag.(*Map).Value (1 samples, 0.12%)</title><rect x="12.9" y="565" width="1.5" height="15.0" fill="rgb(222,163,32)" rx="2" ry="2" />
<text  x="15.92" y="575.5" ></text>
</g>
<g >
<title>encoding/json.stringEncoder (3 samples, 0.37%)</title><rect x="941.4" y="245" width="4.4" height="15.0" fill="rgb(228,94,33)" rx="2" ry="2" />
<text  x="944.43" y="255.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).unmarshal (7 samples, 0.87%)</title><rect x="913.6" y="373" width="10.3" height="15.0" fill="rgb(225,14,2)" rx="2" ry="2" />
<text  x="916.64" y="383.5" ></text>
</g>
<g >
<title>reflect.(*rtype).uncommon (1 samples, 0.12%)</title><rect x="814.2" y="325" width="1.5" height="15.0" fill="rgb(251,180,1)" rx="2" ry="2" />
<text  x="817.21" y="335.5" ></text>
</g>
<g >
<title>runtime.gcmarknewobject (1 samples, 0.12%)</title><rect x="884.4" y="245" width="1.5" height="15.0" fill="rgb(253,180,49)" rx="2" ry="2" />
<text  x="887.40" y="255.5" ></text>
</g>
<g >
<title>bytes.(*Buffer).WriteString (1 samples, 0.12%)</title><rect x="828.8" y="277" width="1.5" height="15.0" fill="rgb(233,14,37)" rx="2" ry="2" />
<text  x="831.84" y="287.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.12%)</title><rect x="1007.2" y="293" width="1.5" height="15.0" fill="rgb(224,30,21)" rx="2" ry="2" />
<text  x="1010.22" y="303.5" ></text>
</g>
<g >
<title>github.com/json-iterator/go.(*Iterator).Skip (1 samples, 0.12%)</title><rect x="1016.0" y="229" width="1.5" height="15.0" fill="rgb(210,64,33)" rx="2" ry="2" />
<text  x="1019.00" y="239.5" ></text>
</g>
<g >
<title>encoding/json.checkValid (1 samples, 0.12%)</title><rect x="923.9" y="373" width="1.4" height="15.0" fill="rgb(247,46,22)" rx="2" ry="2" />
<text  x="926.88" y="383.5" ></text>
</g>
<g >
<title>net/http.(*conn).serve (700 samples, 86.74%)</title><rect x="31.9" y="613" width="1023.6" height="15.0" fill="rgb(245,9,52)" rx="2" ry="2" />
<text  x="34.93" y="623.5" >net/http.(*conn).serve</text>
</g>
<g >
<title>encoding/json.(*encodeState).marshal (5 samples, 0.62%)</title><rect x="828.8" y="437" width="7.3" height="15.0" fill="rgb(254,101,1)" rx="2" ry="2" />
<text  x="831.84" y="447.5" ></text>
</g>
<g >
<title>reflect.Value.MapKeys (2 samples, 0.25%)</title><rect x="953.1" y="373" width="2.9" height="15.0" fill="rgb(248,116,49)" rx="2" ry="2" />
<text  x="956.12" y="383.5" ></text>
</g>
<g >
<title>math/big.basicSqr (3 samples, 0.37%)</title><rect x="722.1" y="405" width="4.4" height="15.0" fill="rgb(246,65,13)" rx="2" ry="2" />
<text  x="725.09" y="415.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.12%)</title><rect x="969.2" y="277" width="1.5" height="15.0" fill="rgb(223,56,38)" rx="2" ry="2" />
<text  x="972.21" y="287.5" ></text>
</g>
<g >
<title>runtime.scanobject (3 samples, 0.37%)</title><rect x="1059.9" y="437" width="4.4" height="15.0" fill="rgb(205,117,11)" rx="2" ry="2" />
<text  x="1062.86" y="447.5" ></text>
</g>
<g >
<title>runtime.(*gcBits).bitp (1 samples, 0.12%)</title><rect x="1062.8" y="421" width="1.5" height="15.0" fill="rgb(214,192,31)" rx="2" ry="2" />
<text  x="1065.79" y="431.5" ></text>
</g>
<g >
<title>bytes.makeSlice (2 samples, 0.25%)</title><rect x="805.4" y="469" width="3.0" height="15.0" fill="rgb(226,89,51)" rx="2" ry="2" />
<text  x="808.44" y="479.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.12%)</title><rect x="806.9" y="405" width="1.5" height="15.0" fill="rgb(213,89,28)" rx="2" ry="2" />
<text  x="809.90" y="415.5" ></text>
</g>
<g >
<title>crypto/tls.(*cipherSuiteTLS13).expandLabel.func1 (1 samples, 0.12%)</title><rect x="744.0" y="469" width="1.5" height="15.0" fill="rgb(212,198,15)" rx="2" ry="2" />
<text  x="747.03" y="479.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).marshal (1 samples, 0.12%)</title><rect x="904.9" y="453" width="1.4" height="15.0" fill="rgb(250,135,1)" rx="2" ry="2" />
<text  x="907.87" y="463.5" ></text>
</g>
<g >
<title>runtime.arenaIndex (1 samples, 0.12%)</title><rect x="825.9" y="325" width="1.5" height="15.0" fill="rgb(252,100,22)" rx="2" ry="2" />
<text  x="828.91" y="335.5" ></text>
</g>
<g >
<title>syscall.RawSyscall (1 samples, 0.12%)</title><rect x="18.8" y="453" width="1.4" height="15.0" fill="rgb(234,197,43)" rx="2" ry="2" />
<text  x="21.77" y="463.5" ></text>
</g>
<g >
<title>github.com/json-iterator/go.(*structFieldDecoder).Decode (10 samples, 1.24%)</title><rect x="1011.6" y="373" width="14.6" height="15.0" fill="rgb(237,68,39)" rx="2" ry="2" />
<text  x="1014.61" y="383.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (4 samples, 0.50%)</title><rect x="890.2" y="229" width="5.9" height="15.0" fill="rgb(214,210,52)" rx="2" ry="2" />
<text  x="893.25" y="239.5" ></text>
</g>
<g >
<title>math/big.subVV (4 samples, 0.50%)</title><rect x="662.1" y="389" width="5.9" height="15.0" fill="rgb(213,14,31)" rx="2" ry="2" />
<text  x="665.14" y="399.5" ></text>
</g>
<g >
<title>net/url.parse (1 samples, 0.12%)</title><rect x="767.4" y="549" width="1.5" height="15.0" fill="rgb(244,227,41)" rx="2" ry="2" />
<text  x="770.42" y="559.5" ></text>
</g>
<g >
<title>runtime.gentraceback (1 samples, 0.12%)</title><rect x="748.4" y="293" width="1.5" height="15.0" fill="rgb(223,22,43)" rx="2" ry="2" />
<text  x="751.41" y="303.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (3 samples, 0.37%)</title><rect x="1059.9" y="485" width="4.4" height="15.0" fill="rgb(210,15,33)" rx="2" ry="2" />
<text  x="1062.86" y="495.5" ></text>
</g>
<g >
<title>istio.io/istio/pkg/webhooks/validation/server.checkFields (50 samples, 6.20%)</title><rect x="937.0" y="485" width="73.1" height="15.0" fill="rgb(240,22,21)" rx="2" ry="2" />
<text  x="940.04" y="495.5" >istio.io..</text>
</g>
<g >
<title>reflect.New (1 samples, 0.12%)</title><rect x="967.7" y="357" width="1.5" height="15.0" fill="rgb(210,77,9)" rx="2" ry="2" />
<text  x="970.74" y="367.5" ></text>
</g>
<g >
<title>github.com/json-iterator/go.(*Iterator).ReadObjectCB (1 samples, 0.12%)</title><rect x="1021.8" y="149" width="1.5" height="15.0" fill="rgb(224,62,47)" rx="2" ry="2" />
<text  x="1024.85" y="159.5" ></text>
</g>
<g >
<title>runtime.growslice (1 samples, 0.12%)</title><rect x="861.0" y="245" width="1.5" height="15.0" fill="rgb(210,195,9)" rx="2" ry="2" />
<text  x="864.00" y="255.5" ></text>
</g>
<g >
<title>runtime.goschedImpl (3 samples, 0.37%)</title><rect x="1150.5" y="581" width="4.4" height="15.0" fill="rgb(211,200,23)" rx="2" ry="2" />
<text  x="1153.52" y="591.5" ></text>
</g>
<g >
<title>context.WithCancel (1 samples, 0.12%)</title><rect x="763.0" y="581" width="1.5" height="15.0" fill="rgb(234,59,1)" rx="2" ry="2" />
<text  x="766.04" y="591.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.12%)</title><rect x="931.2" y="309" width="1.5" height="15.0" fill="rgb(215,167,51)" rx="2" ry="2" />
<text  x="934.19" y="319.5" ></text>
</g>
<g >
<title>runtime.convTstring (2 samples, 0.25%)</title><rect x="963.4" y="293" width="2.9" height="15.0" fill="rgb(231,199,29)" rx="2" ry="2" />
<text  x="966.36" y="303.5" ></text>
</g>
<g >
<title>net/textproto.(*Reader).readLineSlice (1 samples, 0.12%)</title><rect x="771.8" y="565" width="1.5" height="15.0" fill="rgb(224,4,29)" rx="2" ry="2" />
<text  x="774.81" y="575.5" ></text>
</g>
<g >
<title>runtime.assertE2I2 (1 samples, 0.12%)</title><rect x="847.8" y="421" width="1.5" height="15.0" fill="rgb(213,57,28)" rx="2" ry="2" />
<text  x="850.84" y="431.5" ></text>
</g>
<g >
<title>runtime.newobject (3 samples, 0.37%)</title><rect x="1059.9" y="549" width="4.4" height="15.0" fill="rgb(246,104,21)" rx="2" ry="2" />
<text  x="1062.86" y="559.5" ></text>
</g>
<g >
<title>runtime.slicebytetostring (1 samples, 0.12%)</title><rect x="909.3" y="309" width="1.4" height="15.0" fill="rgb(240,77,28)" rx="2" ry="2" />
<text  x="912.26" y="319.5" ></text>
</g>
<g >
<title>github.com/json-iterator/go.(*unmarshalerDecoder).Decode (3 samples, 0.37%)</title><rect x="1013.1" y="325" width="4.4" height="15.0" fill="rgb(217,136,30)" rx="2" ry="2" />
<text  x="1016.07" y="335.5" ></text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.12%)</title><rect x="1172.5" y="549" width="1.4" height="15.0" fill="rgb(240,27,43)" rx="2" ry="2" />
<text  x="1175.45" y="559.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.(*parser).parse (27 samples, 3.35%)</title><rect x="969.2" y="421" width="39.5" height="15.0" fill="rgb(233,23,17)" rx="2" ry="2" />
<text  x="972.21" y="431.5" >gop..</text>
</g>
<g >
<title>runtime.sweepone (1 samples, 0.12%)</title><rect x="108.0" y="293" width="1.4" height="15.0" fill="rgb(211,155,9)" rx="2" ry="2" />
<text  x="110.97" y="303.5" ></text>
</g>
<g >
<title>syscall.write (1 samples, 0.12%)</title><rect x="30.5" y="85" width="1.4" height="15.0" fill="rgb(207,60,45)" rx="2" ry="2" />
<text  x="33.47" y="95.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush (1 samples, 0.12%)</title><rect x="825.9" y="389" width="1.5" height="15.0" fill="rgb(242,205,42)" rx="2" ry="2" />
<text  x="828.91" y="399.5" ></text>
</g>
<g >
<title>bytes.(*Buffer).WriteByte (1 samples, 0.12%)</title><rect x="940.0" y="277" width="1.4" height="15.0" fill="rgb(231,136,40)" rx="2" ry="2" />
<text  x="942.96" y="287.5" ></text>
</g>
<g >
<title>crypto/tls.(*cipherSuiteTLS13).expandLabel (2 samples, 0.25%)</title><rect x="736.7" y="501" width="2.9" height="15.0" fill="rgb(206,110,15)" rx="2" ry="2" />
<text  x="739.72" y="511.5" ></text>
</g>
<g >
<title>reflect.(*rtype).typeOff (1 samples, 0.12%)</title><rect x="817.1" y="309" width="1.5" height="15.0" fill="rgb(223,159,47)" rx="2" ry="2" />
<text  x="820.14" y="319.5" ></text>
</g>
<g >
<title>net.(*netFD).setAddr (1 samples, 0.12%)</title><rect x="21.7" y="501" width="1.5" height="15.0" fill="rgb(238,88,0)" rx="2" ry="2" />
<text  x="24.70" y="511.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).readLock (1 samples, 0.12%)</title><rect x="1058.4" y="485" width="1.5" height="15.0" fill="rgb(253,89,18)" rx="2" ry="2" />
<text  x="1061.40" y="495.5" ></text>
</g>
<g >
<title>github.com/json-iterator/go.(*placeholderDecoder).Decode (3 samples, 0.37%)</title><rect x="1013.1" y="357" width="4.4" height="15.0" fill="rgb(240,96,31)" rx="2" ry="2" />
<text  x="1016.07" y="367.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.12%)</title><rect x="824.4" y="325" width="1.5" height="15.0" fill="rgb(244,176,0)" rx="2" ry="2" />
<text  x="827.45" y="335.5" ></text>
</g>
<g >
<title>runtime.pageIndexOf (1 samples, 0.12%)</title><rect x="1144.7" y="533" width="1.4" height="15.0" fill="rgb(240,23,43)" rx="2" ry="2" />
<text  x="1147.67" y="543.5" ></text>
</g>
<g >
<title>internal/syscall/unix.GetRandom (1 samples, 0.12%)</title><rect x="72.9" y="373" width="1.4" height="15.0" fill="rgb(209,177,5)" rx="2" ry="2" />
<text  x="75.87" y="383.5" ></text>
</g>
<g >
<title>math/big.(*Int).QuoRem (1 samples, 0.12%)</title><rect x="704.5" y="437" width="1.5" height="15.0" fill="rgb(223,61,22)" rx="2" ry="2" />
<text  x="707.55" y="447.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush (1 samples, 0.12%)</title><rect x="1008.7" y="373" width="1.4" height="15.0" fill="rgb(242,92,34)" rx="2" ry="2" />
<text  x="1011.69" y="383.5" ></text>
</g>
<g >
<title>net.(*netFD).Write (1 samples, 0.12%)</title><rect x="30.5" y="117" width="1.4" height="15.0" fill="rgb(236,159,26)" rx="2" ry="2" />
<text  x="33.47" y="127.5" ></text>
</g>
<g >
<title>encoding/json.indirect (1 samples, 0.12%)</title><rect x="814.2" y="373" width="1.5" height="15.0" fill="rgb(234,111,44)" rx="2" ry="2" />
<text  x="817.21" y="383.5" ></text>
</g>
<g >
<title>runtime.growslice (1 samples, 0.12%)</title><rect x="887.3" y="293" width="1.5" height="15.0" fill="rgb(238,188,33)" rx="2" ry="2" />
<text  x="890.32" y="303.5" ></text>
</g>
<g >
<title>net/http.(*conn).readRequest (16 samples, 1.98%)</title><rect x="751.3" y="597" width="23.4" height="15.0" fill="rgb(222,161,40)" rx="2" ry="2" />
<text  x="754.34" y="607.5" >n..</text>
</g>
<g >
<title>sync.(*Pool).Get (1 samples, 0.12%)</title><rect x="836.1" y="421" width="1.5" height="15.0" fill="rgb(212,100,22)" rx="2" ry="2" />
<text  x="839.15" y="431.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (3 samples, 0.37%)</title><rect x="986.8" y="213" width="4.3" height="15.0" fill="rgb(230,118,53)" rx="2" ry="2" />
<text  x="989.75" y="223.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).skip (1 samples, 0.12%)</title><rect x="907.8" y="357" width="1.5" height="15.0" fill="rgb(209,195,19)" rx="2" ry="2" />
<text  x="910.79" y="367.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (1 samples, 0.12%)</title><rect x="806.9" y="357" width="1.5" height="15.0" fill="rgb(244,119,17)" rx="2" ry="2" />
<text  x="809.90" y="367.5" ></text>
</g>
<g >
<title>net.(*TCPListener).Accept (7 samples, 0.87%)</title><rect x="15.8" y="533" width="10.3" height="15.0" fill="rgb(239,137,50)" rx="2" ry="2" />
<text  x="18.85" y="543.5" ></text>
</g>
<g >
<title>syscall.Syscall (1 samples, 0.12%)</title><rect x="72.9" y="357" width="1.4" height="15.0" fill="rgb(205,203,49)" rx="2" ry="2" />
<text  x="75.87" y="367.5" ></text>
</g>
<g >
<title>crypto/tls.(*Conn).write (1 samples, 0.12%)</title><rect x="29.0" y="149" width="1.5" height="15.0" fill="rgb(213,203,4)" rx="2" ry="2" />
<text  x="32.01" y="159.5" ></text>
</g>
<g >
<title>runtime.systemstack (3 samples, 0.37%)</title><rect x="1059.9" y="501" width="4.4" height="15.0" fill="rgb(209,72,8)" rx="2" ry="2" />
<text  x="1062.86" y="511.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (2 samples, 0.25%)</title><rect x="896.1" y="261" width="2.9" height="15.0" fill="rgb(237,88,24)" rx="2" ry="2" />
<text  x="899.10" y="271.5" ></text>
</g>
<g >
<title>k8s.io/client-go/tools/leaderelection.(*LeaderElector).tryAcquireOrRenew (3 samples, 0.37%)</title><rect x="26.1" y="469" width="4.4" height="15.0" fill="rgb(240,197,16)" rx="2" ry="2" />
<text  x="29.08" y="479.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker (48 samples, 5.95%)</title><rect x="1075.9" y="613" width="70.2" height="15.0" fill="rgb(227,130,47)" rx="2" ry="2" />
<text  x="1078.95" y="623.5" >runtime..</text>
</g>
<g >
<title>runtime.(*mspan).refillAllocCache (1 samples, 0.12%)</title><rect x="923.9" y="277" width="1.4" height="15.0" fill="rgb(233,113,19)" rx="2" ry="2" />
<text  x="926.88" y="287.5" ></text>
</g>
<g >
<title>runtime.mapdelete_faststr (1 samples, 0.12%)</title><rect x="773.3" y="581" width="1.4" height="15.0" fill="rgb(211,17,24)" rx="2" ry="2" />
<text  x="776.27" y="591.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.yaml_parser_fetch_next_token (23 samples, 2.85%)</title><rect x="973.6" y="325" width="33.6" height="15.0" fill="rgb(222,175,1)" rx="2" ry="2" />
<text  x="976.59" y="335.5" >go..</text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.25%)</title><rect x="896.1" y="245" width="2.9" height="15.0" fill="rgb(229,5,10)" rx="2" ry="2" />
<text  x="899.10" y="255.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.12%)</title><rect x="736.7" y="453" width="1.5" height="15.0" fill="rgb(248,78,14)" rx="2" ry="2" />
<text  x="739.72" y="463.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).literalStore (2 samples, 0.25%)</title><rect x="1027.7" y="389" width="2.9" height="15.0" fill="rgb(233,197,41)" rx="2" ry="2" />
<text  x="1030.70" y="399.5" ></text>
</g>
<g >
<title>runtime.findfunc (1 samples, 0.12%)</title><rect x="749.9" y="517" width="1.4" height="15.0" fill="rgb(248,157,15)" rx="2" ry="2" />
<text  x="752.88" y="527.5" ></text>
</g>
<g >
<title>runtime.makeslice (3 samples, 0.37%)</title><rect x="978.0" y="261" width="4.4" height="15.0" fill="rgb(206,38,28)" rx="2" ry="2" />
<text  x="980.98" y="271.5" ></text>
</g>
<g >
<title>k8s.io/apimachinery/pkg/util/yaml.hasJSONPrefix (2 samples, 0.25%)</title><rect x="1052.6" y="485" width="2.9" height="15.0" fill="rgb(213,19,38)" rx="2" ry="2" />
<text  x="1055.55" y="495.5" ></text>
</g>
<g >
<title>runtime.netpollblock (1 samples, 0.12%)</title><rect x="752.8" y="373" width="1.5" height="15.0" fill="rgb(226,78,26)" rx="2" ry="2" />
<text  x="755.80" y="383.5" ></text>
</g>
<g >
<title>runtime.pcvalue (1 samples, 0.12%)</title><rect x="748.4" y="261" width="1.5" height="15.0" fill="rgb(248,76,20)" rx="2" ry="2" />
<text  x="751.41" y="271.5" ></text>
</g>
<g >
<title>syscall.Write (12 samples, 1.49%)</title><rect x="780.6" y="469" width="17.5" height="15.0" fill="rgb(206,27,7)" rx="2" ry="2" />
<text  x="783.58" y="479.5" ></text>
</g>
<g >
<title>vendor/golang.org/long long/crypto/curve25519.X25519 (14 samples, 1.73%)</title><rect x="45.1" y="533" width="20.5" height="15.0" fill="rgb(226,26,34)" rx="2" ry="2" />
<text  x="48.09" y="543.5" ></text>
</g>
<g >
<title>reflect.(*rtype).ptrTo (1 samples, 0.12%)</title><rect x="966.3" y="309" width="1.4" height="15.0" fill="rgb(219,104,34)" rx="2" ry="2" />
<text  x="969.28" y="319.5" ></text>
</g>
<g >
<title>runtime.pcvalue (2 samples, 0.25%)</title><rect x="1090.6" y="469" width="2.9" height="15.0" fill="rgb(217,53,24)" rx="2" ry="2" />
<text  x="1093.57" y="479.5" ></text>
</g>
<g >
<title>github.com/ghodss/yaml.convertToJSONableObject (3 samples, 0.37%)</title><rect x="840.5" y="437" width="4.4" height="15.0" fill="rgb(239,93,47)" rx="2" ry="2" />
<text  x="843.53" y="447.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.12%)</title><rect x="824.4" y="293" width="1.5" height="15.0" fill="rgb(225,52,16)" rx="2" ry="2" />
<text  x="827.45" y="303.5" ></text>
</g>
<g >
<title>runtime.checkTimers (1 samples, 0.12%)</title><rect x="1157.8" y="549" width="1.5" height="15.0" fill="rgb(223,16,36)" rx="2" ry="2" />
<text  x="1160.83" y="559.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.12%)</title><rect x="903.4" y="405" width="1.5" height="15.0" fill="rgb(239,27,39)" rx="2" ry="2" />
<text  x="906.41" y="415.5" ></text>
</g>
<g >
<title>crypto/tls.(*Conn).readFromUntil (1 samples, 0.12%)</title><rect x="808.4" y="373" width="1.4" height="15.0" fill="rgb(219,206,10)" rx="2" ry="2" />
<text  x="811.36" y="383.5" ></text>
</g>
<g >
<title>math/big.nat.divBasic (9 samples, 1.12%)</title><rect x="708.9" y="389" width="13.2" height="15.0" fill="rgb(251,163,3)" rx="2" ry="2" />
<text  x="711.93" y="399.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).literalStore (1 samples, 0.12%)</title><rect x="814.2" y="389" width="1.5" height="15.0" fill="rgb(233,54,28)" rx="2" ry="2" />
<text  x="817.21" y="399.5" ></text>
</g>
<g >
<title>runtime.findObject (5 samples, 0.62%)</title><rect x="1133.0" y="533" width="7.3" height="15.0" fill="rgb(221,217,48)" rx="2" ry="2" />
<text  x="1135.97" y="543.5" ></text>
</g>
<g >
<title>github.com/json-iterator/go.(*Iterator).skipObject.func1 (1 samples, 0.12%)</title><rect x="1021.8" y="197" width="1.5" height="15.0" fill="rgb(235,23,30)" rx="2" ry="2" />
<text  x="1024.85" y="207.5" ></text>
</g>
<g >
<title>runtime.notetsleep (2 samples, 0.25%)</title><rect x="1169.5" y="565" width="3.0" height="15.0" fill="rgb(210,120,22)" rx="2" ry="2" />
<text  x="1172.53" y="575.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.12%)</title><rect x="856.6" y="277" width="1.5" height="15.0" fill="rgb(236,139,30)" rx="2" ry="2" />
<text  x="859.62" y="287.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.12%)</title><rect x="903.4" y="421" width="1.5" height="15.0" fill="rgb(212,7,31)" rx="2" ry="2" />
<text  x="906.41" y="431.5" ></text>
</g>
<g >
<title>crypto/tls.(*cipherSuiteTLS13).expandLabel (1 samples, 0.12%)</title><rect x="68.5" y="501" width="1.5" height="15.0" fill="rgb(221,168,30)" rx="2" ry="2" />
<text  x="71.49" y="511.5" ></text>
</g>
<g >
<title>crypto/tls.(*halfConn).setTrafficSecret (2 samples, 0.25%)</title><rect x="745.5" y="533" width="2.9" height="15.0" fill="rgb(210,104,41)" rx="2" ry="2" />
<text  x="748.49" y="543.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.(*decoder).mapping (8 samples, 0.99%)</title><rect x="957.5" y="373" width="11.7" height="15.0" fill="rgb(238,165,0)" rx="2" ry="2" />
<text  x="960.51" y="383.5" ></text>
</g>
<g >
<title>istio.io/istio/pkg/webhooks/validation/server.(*Webhook).validate (134 samples, 16.60%)</title><rect x="814.2" y="517" width="195.9" height="15.0" fill="rgb(207,181,1)" rx="2" ry="2" />
<text  x="817.21" y="527.5" >istio.io/istio/pkg/webhoo..</text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.yaml_insert_token (1 samples, 0.12%)</title><rect x="869.8" y="309" width="1.4" height="15.0" fill="rgb(248,92,16)" rx="2" ry="2" />
<text  x="872.78" y="319.5" ></text>
</g>
<g >
<title>net/http.(*connReader).lock (1 samples, 0.12%)</title><rect x="761.6" y="533" width="1.4" height="15.0" fill="rgb(239,182,26)" rx="2" ry="2" />
<text  x="764.57" y="543.5" ></text>
</g>
<g >
<title>bufio.(*Reader).ReadLine (1 samples, 0.12%)</title><rect x="771.8" y="549" width="1.5" height="15.0" fill="rgb(251,103,0)" rx="2" ry="2" />
<text  x="774.81" y="559.5" ></text>
</g>
<g >
<title>math/big.nat.divLarge (3 samples, 0.37%)</title><rect x="100.7" y="389" width="4.3" height="15.0" fill="rgb(247,34,44)" rx="2" ry="2" />
<text  x="103.66" y="399.5" ></text>
</g>
<g >
<title>github.com/json-iterator/go.(*frozenConfig).Unmarshal (12 samples, 1.49%)</title><rect x="1010.1" y="485" width="17.6" height="15.0" fill="rgb(246,61,21)" rx="2" ry="2" />
<text  x="1013.15" y="495.5" ></text>
</g>
<g >
<title>encoding/json.stateEndValue (1 samples, 0.12%)</title><rect x="823.0" y="341" width="1.4" height="15.0" fill="rgb(241,100,6)" rx="2" ry="2" />
<text  x="825.99" y="351.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.(*decoder).unmarshal (5 samples, 0.62%)</title><rect x="959.0" y="325" width="7.3" height="15.0" fill="rgb(221,159,23)" rx="2" ry="2" />
<text  x="961.97" y="335.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (1 samples, 0.12%)</title><rect x="937.0" y="389" width="1.5" height="15.0" fill="rgb(209,10,18)" rx="2" ry="2" />
<text  x="940.04" y="399.5" ></text>
</g>
<g >
<title>syscall.write (1 samples, 0.12%)</title><rect x="29.0" y="85" width="1.5" height="15.0" fill="rgb(206,35,12)" rx="2" ry="2" />
<text  x="32.01" y="95.5" ></text>
</g>
<g >
<title>runtime.gentraceback (1 samples, 0.12%)</title><rect x="749.9" y="533" width="1.4" height="15.0" fill="rgb(252,34,49)" rx="2" ry="2" />
<text  x="752.88" y="543.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.12%)</title><rect x="1074.5" y="533" width="1.4" height="15.0" fill="rgb(207,139,24)" rx="2" ry="2" />
<text  x="1077.49" y="543.5" ></text>
</g>
<g >
<title>k8s.io/client-go/tools/leaderelection.(*LeaderElector).Run (1 samples, 0.12%)</title><rect x="30.5" y="565" width="1.4" height="15.0" fill="rgb(250,171,47)" rx="2" ry="2" />
<text  x="33.47" y="575.5" ></text>
</g>
<g >
<title>runtime.addspecial (1 samples, 0.12%)</title><rect x="21.7" y="421" width="1.5" height="15.0" fill="rgb(205,39,18)" rx="2" ry="2" />
<text  x="24.70" y="431.5" ></text>
</g>
<g >
<title>crypto/tls.(*serverHandshakeStateTLS13).handshake (489 samples, 60.59%)</title><rect x="34.9" y="565" width="715.0" height="15.0" fill="rgb(207,86,29)" rx="2" ry="2" />
<text  x="37.86" y="575.5" >crypto/tls.(*serverHandshakeStateTLS13).handshake</text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.12%)</title><rect x="866.9" y="325" width="1.4" height="15.0" fill="rgb(247,31,38)" rx="2" ry="2" />
<text  x="869.85" y="335.5" ></text>
</g>
<g >
<title>crypto/tls.(*Conn).Close (1 samples, 0.12%)</title><rect x="774.7" y="565" width="1.5" height="15.0" fill="rgb(226,181,12)" rx="2" ry="2" />
<text  x="777.73" y="575.5" ></text>
</g>
<g >
<title>net/http.(*Client).Do (1 samples, 0.12%)</title><rect x="30.5" y="405" width="1.4" height="15.0" fill="rgb(248,76,46)" rx="2" ry="2" />
<text  x="33.47" y="415.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).SetReadDeadline (1 samples, 0.12%)</title><rect x="802.5" y="549" width="1.5" height="15.0" fill="rgb(232,187,36)" rx="2" ry="2" />
<text  x="805.52" y="559.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (1 samples, 0.12%)</title><rect x="805.4" y="357" width="1.5" height="15.0" fill="rgb(250,180,30)" rx="2" ry="2" />
<text  x="808.44" y="367.5" ></text>
</g>
<g >
<title>syscall.read (5 samples, 0.62%)</title><rect x="754.3" y="405" width="7.3" height="15.0" fill="rgb(249,156,15)" rx="2" ry="2" />
<text  x="757.26" y="415.5" ></text>
</g>
<g >
<title>runtime.gcWriteBarrier (1 samples, 0.12%)</title><rect x="825.9" y="405" width="1.5" height="15.0" fill="rgb(231,195,1)" rx="2" ry="2" />
<text  x="828.91" y="415.5" ></text>
</g>
<g >
<title>k8s.io/client-go/tools/leaderelection.(*LeaderElector).acquire (1 samples, 0.12%)</title><rect x="30.5" y="549" width="1.4" height="15.0" fill="rgb(217,125,5)" rx="2" ry="2" />
<text  x="33.47" y="559.5" ></text>
</g>
<g >
<title>runtime.(*mspan).nextFreeIndex (1 samples, 0.12%)</title><rect x="923.9" y="293" width="1.4" height="15.0" fill="rgb(228,8,22)" rx="2" ry="2" />
<text  x="926.88" y="303.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.12%)</title><rect x="733.8" y="453" width="1.5" height="15.0" fill="rgb(239,154,37)" rx="2" ry="2" />
<text  x="736.79" y="463.5" ></text>
</g>
<g >
<title>runtime.findObject (1 samples, 0.12%)</title><rect x="897.6" y="165" width="1.4" height="15.0" fill="rgb(236,121,23)" rx="2" ry="2" />
<text  x="900.56" y="175.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.12%)</title><rect x="929.7" y="341" width="1.5" height="15.0" fill="rgb(242,203,30)" rx="2" ry="2" />
<text  x="932.73" y="351.5" ></text>
</g>
<g >
<title>encoding/json.checkValid (1 samples, 0.12%)</title><rect x="827.4" y="453" width="1.4" height="15.0" fill="rgb(216,76,42)" rx="2" ry="2" />
<text  x="830.37" y="463.5" ></text>
</g>
<g >
<title>reflect.mapassign (1 samples, 0.12%)</title><rect x="824.4" y="357" width="1.5" height="15.0" fill="rgb(240,46,46)" rx="2" ry="2" />
<text  x="827.45" y="367.5" ></text>
</g>
<g >
<title>encoding/json.stateInString (1 samples, 0.12%)</title><rect x="937.0" y="341" width="1.5" height="15.0" fill="rgb(238,216,1)" rx="2" ry="2" />
<text  x="940.04" y="351.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.12%)</title><rect x="21.7" y="469" width="1.5" height="15.0" fill="rgb(247,37,17)" rx="2" ry="2" />
<text  x="24.70" y="479.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (1 samples, 0.12%)</title><rect x="937.0" y="373" width="1.5" height="15.0" fill="rgb(215,95,38)" rx="2" ry="2" />
<text  x="940.04" y="383.5" ></text>
</g>
<g >
<title>runtime.slicebytetostring (1 samples, 0.12%)</title><rect x="938.5" y="357" width="1.5" height="15.0" fill="rgb(243,73,54)" rx="2" ry="2" />
<text  x="941.50" y="367.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.(*parser).mapping (3 samples, 0.37%)</title><rect x="859.5" y="325" width="4.4" height="15.0" fill="rgb(239,211,49)" rx="2" ry="2" />
<text  x="862.54" y="335.5" ></text>
</g>
<g >
<title>encoding/json.interfaceEncoder (9 samples, 1.12%)</title><rect x="940.0" y="373" width="13.1" height="15.0" fill="rgb(231,8,47)" rx="2" ry="2" />
<text  x="942.96" y="383.5" ></text>
</g>
<g >
<title>runtime.copystack (1 samples, 0.12%)</title><rect x="748.4" y="309" width="1.5" height="15.0" fill="rgb(235,209,25)" rx="2" ry="2" />
<text  x="751.41" y="319.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.12%)</title><rect x="71.4" y="405" width="1.5" height="15.0" fill="rgb(213,70,35)" rx="2" ry="2" />
<text  x="74.41" y="415.5" ></text>
</g>
<g >
<title>crypto/tls.(*halfConn).setTrafficSecret (2 samples, 0.25%)</title><rect x="68.5" y="533" width="2.9" height="15.0" fill="rgb(228,55,21)" rx="2" ry="2" />
<text  x="71.49" y="543.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1 samples, 0.12%)</title><rect x="824.4" y="277" width="1.5" height="15.0" fill="rgb(234,185,29)" rx="2" ry="2" />
<text  x="827.45" y="287.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (2 samples, 0.25%)</title><rect x="768.9" y="485" width="2.9" height="15.0" fill="rgb(213,220,38)" rx="2" ry="2" />
<text  x="771.88" y="495.5" ></text>
</g>
<g >
<title>runtime.runtimer (1 samples, 0.12%)</title><rect x="1157.8" y="533" width="1.5" height="15.0" fill="rgb(216,78,19)" rx="2" ry="2" />
<text  x="1160.83" y="543.5" ></text>
</g>
<g >
<title>github.com/json-iterator/go.(*Iterator).Skip (4 samples, 0.50%)</title><rect x="1017.5" y="309" width="5.8" height="15.0" fill="rgb(248,81,17)" rx="2" ry="2" />
<text  x="1020.46" y="319.5" ></text>
</g>
<g >
<title>bufio.(*Writer).Flush (1 samples, 0.12%)</title><rect x="29.0" y="213" width="1.5" height="15.0" fill="rgb(205,222,4)" rx="2" ry="2" />
<text  x="32.01" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1 samples, 0.12%)</title><rect x="805.4" y="389" width="1.5" height="15.0" fill="rgb(210,127,24)" rx="2" ry="2" />
<text  x="808.44" y="399.5" ></text>
</g>
<g >
<title>syscall.read (1 samples, 0.12%)</title><rect x="67.0" y="405" width="1.5" height="15.0" fill="rgb(228,35,34)" rx="2" ry="2" />
<text  x="70.03" y="415.5" ></text>
</g>
<g >
<title>runtime.mSysStatInc (1 samples, 0.12%)</title><rect x="863.9" y="181" width="1.5" height="15.0" fill="rgb(219,188,13)" rx="2" ry="2" />
<text  x="866.93" y="191.5" ></text>
</g>
<g >
<title>reflect.StructTag.Lookup (1 samples, 0.12%)</title><rect x="932.7" y="405" width="1.4" height="15.0" fill="rgb(236,41,4)" rx="2" ry="2" />
<text  x="935.65" y="415.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.12%)</title><rect x="899.0" y="277" width="1.5" height="15.0" fill="rgb(213,186,12)" rx="2" ry="2" />
<text  x="902.02" y="287.5" ></text>
</g>
<g >
<title>crypto/tls.marshalCertificate.func1.2 (1 samples, 0.12%)</title><rect x="730.9" y="373" width="1.4" height="15.0" fill="rgb(230,68,47)" rx="2" ry="2" />
<text  x="733.87" y="383.5" ></text>
</g>
<g >
<title>encoding/json.mapEncoder.encode (11 samples, 1.36%)</title><rect x="940.0" y="389" width="16.0" height="15.0" fill="rgb(224,163,1)" rx="2" ry="2" />
<text  x="942.96" y="399.5" ></text>
</g>
<g >
<title>net.(*conn).Write (1 samples, 0.12%)</title><rect x="30.5" y="133" width="1.4" height="15.0" fill="rgb(213,48,26)" rx="2" ry="2" />
<text  x="33.47" y="143.5" ></text>
</g>
<g >
<title>vendor/golang.org/long long/crypto/curve25519.invert (2 samples, 0.25%)</title><rect x="45.1" y="485" width="2.9" height="15.0" fill="rgb(205,127,37)" rx="2" ry="2" />
<text  x="48.09" y="495.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.yaml_parser_parse (1 samples, 0.12%)</title><rect x="970.7" y="293" width="1.4" height="15.0" fill="rgb(217,134,25)" rx="2" ry="2" />
<text  x="973.67" y="303.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).string (1 samples, 0.12%)</title><rect x="828.8" y="293" width="1.5" height="15.0" fill="rgb(239,30,20)" rx="2" ry="2" />
<text  x="831.84" y="303.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.25%)</title><rect x="768.9" y="517" width="2.9" height="15.0" fill="rgb(236,133,25)" rx="2" ry="2" />
<text  x="771.88" y="527.5" ></text>
</g>
<g >
<title>vendor/golang.org/long long/crypto/cryptobyte.(*Builder).callContinuation (1 samples, 0.12%)</title><rect x="730.9" y="389" width="1.4" height="15.0" fill="rgb(220,5,32)" rx="2" ry="2" />
<text  x="733.87" y="399.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (3 samples, 0.37%)</title><rect x="1059.9" y="517" width="4.4" height="15.0" fill="rgb(225,200,40)" rx="2" ry="2" />
<text  x="1062.86" y="527.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush (2 samples, 0.25%)</title><rect x="1049.6" y="405" width="3.0" height="15.0" fill="rgb(214,56,20)" rx="2" ry="2" />
<text  x="1052.63" y="415.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush1 (1 samples, 0.12%)</title><rect x="825.9" y="341" width="1.5" height="15.0" fill="rgb(235,143,29)" rx="2" ry="2" />
<text  x="828.91" y="351.5" ></text>
</g>
<g >
<title>math/big.mulAddVWW (1 samples, 0.12%)</title><rect x="700.2" y="341" width="1.4" height="15.0" fill="rgb(251,189,5)" rx="2" ry="2" />
<text  x="703.16" y="351.5" ></text>
</g>
<g >
<title>crypto/tls.(*serverHandshakeStateTLS13).processClientHello (14 samples, 1.73%)</title><rect x="45.1" y="549" width="20.5" height="15.0" fill="rgb(251,118,44)" rx="2" ry="2" />
<text  x="48.09" y="559.5" ></text>
</g>
<g >
<title>crypto/sha256.block (1 samples, 0.12%)</title><rect x="735.3" y="453" width="1.4" height="15.0" fill="rgb(232,41,53)" rx="2" ry="2" />
<text  x="738.25" y="463.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).unmarshal (9 samples, 1.12%)</title><rect x="814.2" y="453" width="13.2" height="15.0" fill="rgb(210,34,48)" rx="2" ry="2" />
<text  x="817.21" y="463.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.12%)</title><rect x="744.0" y="437" width="1.5" height="15.0" fill="rgb(236,198,32)" rx="2" ry="2" />
<text  x="747.03" y="447.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.yaml_parser_fetch_more_tokens (23 samples, 2.85%)</title><rect x="973.6" y="341" width="33.6" height="15.0" fill="rgb(244,96,47)" rx="2" ry="2" />
<text  x="976.59" y="351.5" >go..</text>
</g>
<g >
<title>runtime.bulkBarrierPreWrite (1 samples, 0.12%)</title><rect x="1008.7" y="389" width="1.4" height="15.0" fill="rgb(248,39,38)" rx="2" ry="2" />
<text  x="1011.69" y="399.5" ></text>
</g>
<g >
<title>io.(*LimitedReader).Read (1 samples, 0.12%)</title><rect x="808.4" y="453" width="1.4" height="15.0" fill="rgb(227,136,16)" rx="2" ry="2" />
<text  x="811.36" y="463.5" ></text>
</g>
<g >
<title>runtime.markroot.func1 (11 samples, 1.36%)</title><rect x="1086.2" y="533" width="16.1" height="15.0" fill="rgb(223,3,35)" rx="2" ry="2" />
<text  x="1089.18" y="543.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.12%)</title><rect x="748.4" y="357" width="1.5" height="15.0" fill="rgb(220,17,1)" rx="2" ry="2" />
<text  x="751.41" y="367.5" ></text>
</g>
<g >
<title>reflect.Value.SetMapIndex (1 samples, 0.12%)</title><rect x="824.4" y="373" width="1.5" height="15.0" fill="rgb(243,16,51)" rx="2" ry="2" />
<text  x="827.45" y="383.5" ></text>
</g>
<g >
<title>runtime.stringtoslicebyte (2 samples, 0.25%)</title><rect x="10.0" y="549" width="2.9" height="15.0" fill="rgb(212,207,36)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>runtime.netpollunblock (1 samples, 0.12%)</title><rect x="1149.1" y="517" width="1.4" height="15.0" fill="rgb(245,184,16)" rx="2" ry="2" />
<text  x="1152.06" y="527.5" ></text>
</g>
<g >
<title>runtime.stackalloc (1 samples, 0.12%)</title><rect x="811.3" y="341" width="1.5" height="15.0" fill="rgb(213,99,17)" rx="2" ry="2" />
<text  x="814.29" y="351.5" ></text>
</g>
<g >
<title>github.com/gogo/protobuf/jsonpb.acceptedJSONFieldNames (1 samples, 0.12%)</title><rect x="928.3" y="405" width="1.4" height="15.0" fill="rgb(242,130,7)" rx="2" ry="2" />
<text  x="931.27" y="415.5" ></text>
</g>
<g >
<title>runtime.runOneTimer (1 samples, 0.12%)</title><rect x="1157.8" y="517" width="1.5" height="15.0" fill="rgb(239,180,35)" rx="2" ry="2" />
<text  x="1160.83" y="527.5" ></text>
</g>
<g >
<title>runtime.findrunnable (6 samples, 0.74%)</title><rect x="1154.9" y="565" width="8.8" height="15.0" fill="rgb(251,125,38)" rx="2" ry="2" />
<text  x="1157.91" y="575.5" ></text>
</g>
<g >
<title>runtime.stopm (1 samples, 0.12%)</title><rect x="1162.2" y="549" width="1.5" height="15.0" fill="rgb(231,94,17)" rx="2" ry="2" />
<text  x="1165.22" y="559.5" ></text>
</g>
<g >
<title>net.(*netFD).Read (3 samples, 0.37%)</title><rect x="1055.5" y="501" width="4.4" height="15.0" fill="rgb(227,176,6)" rx="2" ry="2" />
<text  x="1058.48" y="511.5" ></text>
</g>
<g >
<title>github.com/json-iterator/go.(*Iterator).Skip (1 samples, 0.12%)</title><rect x="1021.8" y="181" width="1.5" height="15.0" fill="rgb(232,60,26)" rx="2" ry="2" />
<text  x="1024.85" y="191.5" ></text>
</g>
<g >
<title>runtime.gentraceback (1 samples, 0.12%)</title><rect x="947.3" y="133" width="1.4" height="15.0" fill="rgb(211,128,9)" rx="2" ry="2" />
<text  x="950.27" y="143.5" ></text>
</g>
<g >
<title>net/textproto.(*Reader).readContinuedLineSlice (1 samples, 0.12%)</title><rect x="766.0" y="549" width="1.4" height="15.0" fill="rgb(206,145,19)" rx="2" ry="2" />
<text  x="768.96" y="559.5" ></text>
</g>
<g >
<title>golang.org/long long/net/http2.(*Transport).RoundTrip (1 samples, 0.12%)</title><rect x="30.5" y="277" width="1.4" height="15.0" fill="rgb(221,103,34)" rx="2" ry="2" />
<text  x="33.47" y="287.5" ></text>
</g>
<g >
<title>net/http.Header.writeSubset (2 samples, 0.25%)</title><rect x="777.7" y="533" width="2.9" height="15.0" fill="rgb(244,160,0)" rx="2" ry="2" />
<text  x="780.66" y="543.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.12%)</title><rect x="1005.8" y="261" width="1.4" height="15.0" fill="rgb(214,209,36)" rx="2" ry="2" />
<text  x="1008.76" y="271.5" ></text>
</g>
<g >
<title>runtime.pcvalue (1 samples, 0.12%)</title><rect x="842.0" y="277" width="1.5" height="15.0" fill="rgb(251,152,28)" rx="2" ry="2" />
<text  x="845.00" y="287.5" ></text>
</g>
<g >
<title>golang.org/long long/net/http2.stickyErrWriter.Write (1 samples, 0.12%)</title><rect x="30.5" y="197" width="1.4" height="15.0" fill="rgb(233,39,34)" rx="2" ry="2" />
<text  x="33.47" y="207.5" ></text>
</g>
<g >
<title>fmt.newPrinter (1 samples, 0.12%)</title><rect x="27.5" y="293" width="1.5" height="15.0" fill="rgb(230,162,21)" rx="2" ry="2" />
<text  x="30.55" y="303.5" ></text>
</g>
<g >
<title>reflect.Value.MapKeys (2 samples, 0.25%)</title><rect x="947.3" y="277" width="2.9" height="15.0" fill="rgb(225,165,45)" rx="2" ry="2" />
<text  x="950.27" y="287.5" ></text>
</g>
<g >
<title>runtime.pcvalue (1 samples, 0.12%)</title><rect x="1095.0" y="421" width="1.4" height="15.0" fill="rgb(224,103,8)" rx="2" ry="2" />
<text  x="1097.96" y="431.5" ></text>
</g>
<g >
<title>net/http.(*connReader).backgroundRead (7 samples, 0.87%)</title><rect x="1055.5" y="613" width="10.2" height="15.0" fill="rgb(234,189,50)" rx="2" ry="2" />
<text  x="1058.48" y="623.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.(*parser).parse (2 samples, 0.25%)</title><rect x="969.2" y="325" width="2.9" height="15.0" fill="rgb(249,33,42)" rx="2" ry="2" />
<text  x="972.21" y="335.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.25%)</title><rect x="963.4" y="277" width="2.9" height="15.0" fill="rgb(210,63,31)" rx="2" ry="2" />
<text  x="966.36" y="287.5" ></text>
</g>
<g >
<title>all (807 samples, 100%)</title><rect x="10.0" y="629" width="1180.0" height="15.0" fill="rgb(251,39,10)" rx="2" ry="2" />
<text  x="13.00" y="639.5" ></text>
</g>
<g >
<title>runtime.convTstring (1 samples, 0.12%)</title><rect x="856.6" y="309" width="1.5" height="15.0" fill="rgb(236,122,36)" rx="2" ry="2" />
<text  x="859.62" y="319.5" ></text>
</g>
<g >
<title>crypto/hmac.New (1 samples, 0.12%)</title><rect x="741.1" y="501" width="1.5" height="15.0" fill="rgb(224,144,34)" rx="2" ry="2" />
<text  x="744.10" y="511.5" ></text>
</g>
<g >
<title>golang.org/long long/net/http2.(*Transport).RoundTripOpt (1 samples, 0.12%)</title><rect x="26.1" y="261" width="1.4" height="15.0" fill="rgb(226,156,38)" rx="2" ry="2" />
<text  x="29.08" y="271.5" ></text>
</g>
<g >
<title>crypto/tls.(*Conn).write (12 samples, 1.49%)</title><rect x="780.6" y="517" width="17.5" height="15.0" fill="rgb(207,15,29)" rx="2" ry="2" />
<text  x="783.58" y="527.5" ></text>
</g>
<g >
<title>encoding/json.valueEncoder (1 samples, 0.12%)</title><rect x="834.7" y="309" width="1.4" height="15.0" fill="rgb(227,98,36)" rx="2" ry="2" />
<text  x="837.68" y="319.5" ></text>
</g>
<g >
<title>math/big.nat.montgomery (386 samples, 47.83%)</title><rect x="110.9" y="405" width="564.4" height="15.0" fill="rgb(222,53,54)" rx="2" ry="2" />
<text  x="113.89" y="415.5" >math/big.nat.montgomery</text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.12%)</title><rect x="1007.2" y="309" width="1.5" height="15.0" fill="rgb(210,81,47)" rx="2" ry="2" />
<text  x="1010.22" y="319.5" ></text>
</g>
<g >
<title>runtime.scanobject (3 samples, 0.37%)</title><rect x="986.8" y="165" width="4.3" height="15.0" fill="rgb(224,189,2)" rx="2" ry="2" />
<text  x="989.75" y="175.5" ></text>
</g>
<g >
<title>crypto/tls.(*Conn).serverHandshake (491 samples, 60.84%)</title><rect x="31.9" y="581" width="718.0" height="15.0" fill="rgb(220,119,9)" rx="2" ry="2" />
<text  x="34.93" y="591.5" >crypto/tls.(*Conn).serverHandshake</text>
</g>
<g >
<title>github.com/gogo/protobuf/proto.(*Properties).setFieldProps (1 samples, 0.12%)</title><rect x="931.2" y="389" width="1.5" height="15.0" fill="rgb(246,121,11)" rx="2" ry="2" />
<text  x="934.19" y="399.5" ></text>
</g>
<g >
<title>math/big.nat.div (12 samples, 1.49%)</title><rect x="74.3" y="421" width="17.6" height="15.0" fill="rgb(243,152,9)" rx="2" ry="2" />
<text  x="77.34" y="431.5" ></text>
</g>
<g >
<title>vendor/golang.org/long long/crypto/cryptobyte.(*String).read (1 samples, 0.12%)</title><rect x="33.4" y="533" width="1.5" height="15.0" fill="rgb(213,187,33)" rx="2" ry="2" />
<text  x="36.40" y="543.5" ></text>
</g>
<g >
<title>crypto/tls.(*Conn).Write (14 samples, 1.73%)</title><rect x="780.6" y="549" width="20.5" height="15.0" fill="rgb(248,28,41)" rx="2" ry="2" />
<text  x="783.58" y="559.5" ></text>
</g>
<g >
<title>runtime.findObject (2 samples, 0.25%)</title><rect x="1049.6" y="341" width="3.0" height="15.0" fill="rgb(215,226,1)" rx="2" ry="2" />
<text  x="1052.63" y="351.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpan (1 samples, 0.12%)</title><rect x="863.9" y="197" width="1.5" height="15.0" fill="rgb(243,151,12)" rx="2" ry="2" />
<text  x="866.93" y="207.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.yaml_parser_state_machine (23 samples, 2.85%)</title><rect x="868.3" y="389" width="33.6" height="15.0" fill="rgb(233,145,20)" rx="2" ry="2" />
<text  x="871.31" y="399.5" >go..</text>
</g>
<g >
<title>github.com/json-iterator/go.(*unmarshalerDecoder).Decode (5 samples, 0.62%)</title><rect x="1017.5" y="341" width="7.3" height="15.0" fill="rgb(215,90,14)" rx="2" ry="2" />
<text  x="1020.46" y="351.5" ></text>
</g>
<g >
<title>runtime.scanblock (2 samples, 0.25%)</title><rect x="1099.3" y="501" width="3.0" height="15.0" fill="rgb(211,1,19)" rx="2" ry="2" />
<text  x="1102.34" y="511.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.12%)</title><rect x="904.9" y="389" width="1.4" height="15.0" fill="rgb(205,77,53)" rx="2" ry="2" />
<text  x="907.87" y="399.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.(*parser).node (2 samples, 0.25%)</title><rect x="863.9" y="357" width="3.0" height="15.0" fill="rgb(210,110,2)" rx="2" ry="2" />
<text  x="866.93" y="367.5" ></text>
</g>
<g >
<title>github.com/json-iterator/go.(*Iterator).skipString (1 samples, 0.12%)</title><rect x="1021.8" y="101" width="1.5" height="15.0" fill="rgb(243,4,6)" rx="2" ry="2" />
<text  x="1024.85" y="111.5" ></text>
</g>
<g >
<title>github.com/json-iterator/go.(*Iterator).ReadString (1 samples, 0.12%)</title><rect x="1021.8" y="85" width="1.5" height="15.0" fill="rgb(226,78,35)" rx="2" ry="2" />
<text  x="1024.85" y="95.5" ></text>
</g>
<g >
<title>crypto/rand.(*devReader).Read (1 samples, 0.12%)</title><rect x="72.9" y="421" width="1.4" height="15.0" fill="rgb(225,28,30)" rx="2" ry="2" />
<text  x="75.87" y="431.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.12%)</title><rect x="108.0" y="357" width="1.4" height="15.0" fill="rgb(221,185,27)" rx="2" ry="2" />
<text  x="110.97" y="367.5" ></text>
</g>
<g >
<title>encoding/json.stringEncoder (1 samples, 0.12%)</title><rect x="951.7" y="293" width="1.4" height="15.0" fill="rgb(226,73,41)" rx="2" ry="2" />
<text  x="954.66" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (1 samples, 0.12%)</title><rect x="863.9" y="213" width="1.5" height="15.0" fill="rgb(248,224,27)" rx="2" ry="2" />
<text  x="866.93" y="223.5" ></text>
</g>
<g >
<title>runtime.typedmemmove (1 samples, 0.12%)</title><rect x="929.7" y="357" width="1.5" height="15.0" fill="rgb(219,64,4)" rx="2" ry="2" />
<text  x="932.73" y="367.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).skip (3 samples, 0.37%)</title><rect x="1030.6" y="389" width="4.4" height="15.0" fill="rgb(237,39,43)" rx="2" ry="2" />
<text  x="1033.62" y="399.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (1 samples, 0.12%)</title><rect x="865.4" y="309" width="1.5" height="15.0" fill="rgb(237,141,29)" rx="2" ry="2" />
<text  x="868.39" y="319.5" ></text>
</g>
<g >
<title>runtime.growslice (1 samples, 0.12%)</title><rect x="827.4" y="421" width="1.4" height="15.0" fill="rgb(251,157,14)" rx="2" ry="2" />
<text  x="830.37" y="431.5" ></text>
</g>
<g >
<title>bytes.(*Buffer).grow (2 samples, 0.25%)</title><rect x="805.4" y="485" width="3.0" height="15.0" fill="rgb(236,175,0)" rx="2" ry="2" />
<text  x="808.44" y="495.5" ></text>
</g>
<g >
<title>encoding/json.typeEncoder (1 samples, 0.12%)</title><rect x="834.7" y="293" width="1.4" height="15.0" fill="rgb(249,53,53)" rx="2" ry="2" />
<text  x="837.68" y="303.5" ></text>
</g>
<g >
<title>runtime.(*pallocBits).findSmallN (1 samples, 0.12%)</title><rect x="893.2" y="85" width="1.4" height="15.0" fill="rgb(216,5,14)" rx="2" ry="2" />
<text  x="896.17" y="95.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (4 samples, 0.50%)</title><rect x="997.0" y="197" width="5.8" height="15.0" fill="rgb(224,181,9)" rx="2" ry="2" />
<text  x="999.99" y="207.5" ></text>
</g>
<g >
<title>golang.org/long long/net/http2.(*ClientConn).writeHeaders (1 samples, 0.12%)</title><rect x="29.0" y="229" width="1.5" height="15.0" fill="rgb(236,226,36)" rx="2" ry="2" />
<text  x="32.01" y="239.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).literalStore (4 samples, 0.50%)</title><rect x="817.1" y="357" width="5.9" height="15.0" fill="rgb(217,144,49)" rx="2" ry="2" />
<text  x="820.14" y="367.5" ></text>
</g>
<g >
<title>crypto/tls.(*Conn).readFromUntil (2 samples, 0.25%)</title><rect x="65.6" y="501" width="2.9" height="15.0" fill="rgb(248,200,1)" rx="2" ry="2" />
<text  x="68.56" y="511.5" ></text>
</g>
<g >
<title>crypto/rsa.(*PrivateKey).Sign (449 samples, 55.64%)</title><rect x="71.4" y="533" width="656.5" height="15.0" fill="rgb(232,133,27)" rx="2" ry="2" />
<text  x="74.41" y="543.5" >crypto/rsa.(*PrivateKey).Sign</text>
</g>
<g >
<title>crypto/aes.(*gcmAsm).Seal (1 samples, 0.12%)</title><rect x="799.6" y="485" width="1.5" height="15.0" fill="rgb(218,145,44)" rx="2" ry="2" />
<text  x="802.59" y="495.5" ></text>
</g>
<g >
<title>crypto/tls.(*cipherSuiteTLS13).deriveSecret (1 samples, 0.12%)</title><rect x="733.8" y="533" width="1.5" height="15.0" fill="rgb(220,202,54)" rx="2" ry="2" />
<text  x="736.79" y="543.5" ></text>
</g>
<g >
<title>runtime.netpoll (2 samples, 0.25%)</title><rect x="1159.3" y="549" width="2.9" height="15.0" fill="rgb(209,207,9)" rx="2" ry="2" />
<text  x="1162.29" y="559.5" ></text>
</g>
<g >
<title>vendor/golang.org/long long/crypto/cryptobyte.(*Builder).add (1 samples, 0.12%)</title><rect x="745.5" y="453" width="1.5" height="15.0" fill="rgb(223,199,34)" rx="2" ry="2" />
<text  x="748.49" y="463.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.12%)</title><rect x="105.0" y="357" width="1.5" height="15.0" fill="rgb(220,128,54)" rx="2" ry="2" />
<text  x="108.04" y="367.5" ></text>
</g>
<g >
<title>net/http.(*response).finishRequest (19 samples, 2.35%)</title><rect x="776.2" y="597" width="27.8" height="15.0" fill="rgb(211,64,17)" rx="2" ry="2" />
<text  x="779.20" y="607.5" >n..</text>
</g>
<g >
<title>crypto/tls.(*cipherSuiteTLS13).trafficKey (3 samples, 0.37%)</title><rect x="736.7" y="517" width="4.4" height="15.0" fill="rgb(238,65,1)" rx="2" ry="2" />
<text  x="739.72" y="527.5" ></text>
</g>
<g >
<title>vendor/golang.org/long long/crypto/cryptobyte.(*Builder).AddUint24LengthPrefixed (1 samples, 0.12%)</title><rect x="730.9" y="533" width="1.4" height="15.0" fill="rgb(239,187,41)" rx="2" ry="2" />
<text  x="733.87" y="543.5" ></text>
</g>
<g >
<title>crypto/rsa.signPSSWithSalt (449 samples, 55.64%)</title><rect x="71.4" y="501" width="656.5" height="15.0" fill="rgb(205,168,54)" rx="2" ry="2" />
<text  x="74.41" y="511.5" >crypto/rsa.signPSSWithSalt</text>
</g>
<g >
<title>crypto/aes.newCipher (1 samples, 0.12%)</title><rect x="747.0" y="485" width="1.4" height="15.0" fill="rgb(209,175,31)" rx="2" ry="2" />
<text  x="749.95" y="495.5" ></text>
</g>
<g >
<title>encoding/json.stringEncoder (3 samples, 0.37%)</title><rect x="830.3" y="261" width="4.4" height="15.0" fill="rgb(213,226,16)" rx="2" ry="2" />
<text  x="833.30" y="271.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (3 samples, 0.37%)</title><rect x="986.8" y="197" width="4.3" height="15.0" fill="rgb(220,161,13)" rx="2" ry="2" />
<text  x="989.75" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (4 samples, 0.50%)</title><rect x="890.2" y="261" width="5.9" height="15.0" fill="rgb(207,90,0)" rx="2" ry="2" />
<text  x="893.25" y="271.5" ></text>
</g>
<g >
<title>runtime.growslice (1 samples, 0.12%)</title><rect x="742.6" y="501" width="1.4" height="15.0" fill="rgb(244,42,39)" rx="2" ry="2" />
<text  x="745.57" y="511.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).putFast (1 samples, 0.12%)</title><rect x="896.1" y="165" width="1.5" height="15.0" fill="rgb(217,205,41)" rx="2" ry="2" />
<text  x="899.10" y="175.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.12%)</title><rect x="859.5" y="261" width="1.5" height="15.0" fill="rgb(220,54,42)" rx="2" ry="2" />
<text  x="862.54" y="271.5" ></text>
</g>
<g >
<title>runtime.findObject (1 samples, 0.12%)</title><rect x="770.3" y="437" width="1.5" height="15.0" fill="rgb(210,184,7)" rx="2" ry="2" />
<text  x="773.35" y="447.5" ></text>
</g>
<g >
<title>net.(*conn).Write (7 samples, 0.87%)</title><rect x="34.9" y="533" width="10.2" height="15.0" fill="rgb(221,22,18)" rx="2" ry="2" />
<text  x="37.86" y="543.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.12%)</title><rect x="906.3" y="437" width="1.5" height="15.0" fill="rgb(247,41,9)" rx="2" ry="2" />
<text  x="909.33" y="447.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (1 samples, 0.12%)</title><rect x="862.5" y="277" width="1.4" height="15.0" fill="rgb(234,194,48)" rx="2" ry="2" />
<text  x="865.47" y="287.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (2 samples, 0.25%)</title><rect x="978.0" y="165" width="2.9" height="15.0" fill="rgb(230,35,21)" rx="2" ry="2" />
<text  x="980.98" y="175.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (1 samples, 0.12%)</title><rect x="866.9" y="293" width="1.4" height="15.0" fill="rgb(228,159,2)" rx="2" ry="2" />
<text  x="869.85" y="303.5" ></text>
</g>
<g >
<title>k8s.io/client-go/tools/leaderelection.(*LeaderElector).tryAcquireOrRenew (1 samples, 0.12%)</title><rect x="30.5" y="469" width="1.4" height="15.0" fill="rgb(234,143,3)" rx="2" ry="2" />
<text  x="33.47" y="479.5" ></text>
</g>
<g >
<title>runtime.getitab (2 samples, 0.25%)</title><rect x="777.7" y="501" width="2.9" height="15.0" fill="rgb(245,47,6)" rx="2" ry="2" />
<text  x="780.66" y="511.5" ></text>
</g>
<g >
<title>runtime.park_m (7 samples, 0.87%)</title><rect x="1154.9" y="597" width="10.2" height="15.0" fill="rgb(254,219,2)" rx="2" ry="2" />
<text  x="1157.91" y="607.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.yaml_parser_fetch_next_token (23 samples, 2.85%)</title><rect x="868.3" y="341" width="33.6" height="15.0" fill="rgb(237,189,30)" rx="2" ry="2" />
<text  x="871.31" y="351.5" >go..</text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.12%)</title><rect x="972.1" y="325" width="1.5" height="15.0" fill="rgb(245,207,4)" rx="2" ry="2" />
<text  x="975.13" y="335.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (2 samples, 0.25%)</title><rect x="937.0" y="421" width="3.0" height="15.0" fill="rgb(243,164,36)" rx="2" ry="2" />
<text  x="940.04" y="431.5" ></text>
</g>
<g >
<title>github.com/ghodss/yaml.convertToJSONableObject (1 samples, 0.12%)</title><rect x="840.5" y="421" width="1.5" height="15.0" fill="rgb(240,82,6)" rx="2" ry="2" />
<text  x="843.53" y="431.5" ></text>
</g>
<g >
<title>runtime.step (1 samples, 0.12%)</title><rect x="918.0" y="213" width="1.5" height="15.0" fill="rgb(235,10,48)" rx="2" ry="2" />
<text  x="921.03" y="223.5" ></text>
</g>
<g >
<title>crypto/tls.(*xorNonceAEAD).Seal (1 samples, 0.12%)</title><rect x="799.6" y="501" width="1.5" height="15.0" fill="rgb(206,55,50)" rx="2" ry="2" />
<text  x="802.59" y="511.5" ></text>
</g>
<g >
<title>math/big.(*Int).Mul (4 samples, 0.50%)</title><rect x="697.2" y="389" width="5.9" height="15.0" fill="rgb(213,223,53)" rx="2" ry="2" />
<text  x="700.24" y="399.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.25%)</title><rect x="978.0" y="213" width="2.9" height="15.0" fill="rgb(226,33,4)" rx="2" ry="2" />
<text  x="980.98" y="223.5" ></text>
</g>
<g >
<title>crypto/tls.(*Conn).readRecordOrCCS (7 samples, 0.87%)</title><rect x="1055.5" y="581" width="10.2" height="15.0" fill="rgb(236,55,53)" rx="2" ry="2" />
<text  x="1058.48" y="591.5" ></text>
</g>
<g >
<title>reflect.(*rtype).typeOff (1 samples, 0.12%)</title><rect x="960.4" y="245" width="1.5" height="15.0" fill="rgb(221,46,40)" rx="2" ry="2" />
<text  x="963.43" y="255.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.handleErr (1 samples, 0.12%)</title><rect x="901.9" y="437" width="1.5" height="15.0" fill="rgb(253,185,34)" rx="2" ry="2" />
<text  x="904.95" y="447.5" ></text>
</g>
<g >
<title>runtime.(*itabTableType).find (1 samples, 0.12%)</title><rect x="779.1" y="485" width="1.5" height="15.0" fill="rgb(235,108,13)" rx="2" ry="2" />
<text  x="782.12" y="495.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Read (2 samples, 0.25%)</title><rect x="1055.5" y="485" width="2.9" height="15.0" fill="rgb(231,51,2)" rx="2" ry="2" />
<text  x="1058.48" y="495.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).allocRange (1 samples, 0.12%)</title><rect x="891.7" y="117" width="1.5" height="15.0" fill="rgb(228,220,16)" rx="2" ry="2" />
<text  x="894.71" y="127.5" ></text>
</g>
<g >
<title>runtime.newstack (5 samples, 0.62%)</title><rect x="913.6" y="325" width="7.4" height="15.0" fill="rgb(211,91,39)" rx="2" ry="2" />
<text  x="916.64" y="335.5" ></text>
</g>
<g >
<title>encoding/json.checkValid (1 samples, 0.12%)</title><rect x="910.7" y="389" width="1.5" height="15.0" fill="rgb(244,43,41)" rx="2" ry="2" />
<text  x="913.72" y="399.5" ></text>
</g>
<g >
<title>runtime.wakeScavenger (1 samples, 0.12%)</title><rect x="1157.8" y="485" width="1.5" height="15.0" fill="rgb(250,59,14)" rx="2" ry="2" />
<text  x="1160.83" y="495.5" ></text>
</g>
<g >
<title>runtime.gfget (1 samples, 0.12%)</title><rect x="811.3" y="373" width="1.5" height="15.0" fill="rgb(230,99,11)" rx="2" ry="2" />
<text  x="814.29" y="383.5" ></text>
</g>
<g >
<title>crypto/sha256.New (1 samples, 0.12%)</title><rect x="71.4" y="469" width="1.5" height="15.0" fill="rgb(209,7,36)" rx="2" ry="2" />
<text  x="74.41" y="479.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (1 samples, 0.12%)</title><rect x="806.9" y="421" width="1.5" height="15.0" fill="rgb(229,36,40)" rx="2" ry="2" />
<text  x="809.90" y="431.5" ></text>
</g>
<g >
<title>k8s.io/client-go/rest.(*Request).Do (2 samples, 0.25%)</title><rect x="27.5" y="421" width="3.0" height="15.0" fill="rgb(208,38,1)" rx="2" ry="2" />
<text  x="30.55" y="431.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (1 samples, 0.12%)</title><rect x="806.9" y="373" width="1.5" height="15.0" fill="rgb(248,173,26)" rx="2" ry="2" />
<text  x="809.90" y="383.5" ></text>
</g>
<g >
<title>crypto/tls.(*cipherSuiteTLS13).trafficKey (1 samples, 0.12%)</title><rect x="68.5" y="517" width="1.5" height="15.0" fill="rgb(242,196,19)" rx="2" ry="2" />
<text  x="71.49" y="527.5" ></text>
</g>
<g >
<title>runtime.unlock (1 samples, 0.12%)</title><rect x="1074.5" y="501" width="1.4" height="15.0" fill="rgb(206,144,34)" rx="2" ry="2" />
<text  x="1077.49" y="511.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.12%)</title><rect x="109.4" y="341" width="1.5" height="15.0" fill="rgb(224,213,14)" rx="2" ry="2" />
<text  x="112.43" y="351.5" ></text>
</g>
<g >
<title>github.com/gogo/protobuf/jsonpb.(*Unmarshaler).unmarshalValue (10 samples, 1.24%)</title><rect x="913.6" y="405" width="14.7" height="15.0" fill="rgb(240,189,6)" rx="2" ry="2" />
<text  x="916.64" y="415.5" ></text>
</g>
<g >
<title>crypto/tls.(*Conn).readFromUntil (6 samples, 0.74%)</title><rect x="1055.5" y="565" width="8.8" height="15.0" fill="rgb(230,115,15)" rx="2" ry="2" />
<text  x="1058.48" y="575.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.12%)</title><rect x="739.6" y="453" width="1.5" height="15.0" fill="rgb(237,132,14)" rx="2" ry="2" />
<text  x="742.64" y="463.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (2 samples, 0.25%)</title><rect x="659.2" y="373" width="2.9" height="15.0" fill="rgb(220,3,4)" rx="2" ry="2" />
<text  x="662.22" y="383.5" ></text>
</g>
<g >
<title>k8s.io/apimachinery/pkg/runtime.(*RawExtension).UnmarshalJSON (1 samples, 0.12%)</title><rect x="1023.3" y="325" width="1.5" height="15.0" fill="rgb(234,109,18)" rx="2" ry="2" />
<text  x="1026.31" y="335.5" ></text>
</g>
<g >
<title>syscall.write (7 samples, 0.87%)</title><rect x="34.9" y="485" width="10.2" height="15.0" fill="rgb(254,84,13)" rx="2" ry="2" />
<text  x="37.86" y="495.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.(*parser).parse (6 samples, 0.74%)</title><rect x="859.5" y="405" width="8.8" height="15.0" fill="rgb(243,88,32)" rx="2" ry="2" />
<text  x="862.54" y="415.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (3 samples, 0.37%)</title><rect x="986.8" y="181" width="4.3" height="15.0" fill="rgb(235,40,3)" rx="2" ry="2" />
<text  x="989.75" y="191.5" ></text>
</g>
<g >
<title>runtime.profilealloc (1 samples, 0.12%)</title><rect x="842.0" y="389" width="1.5" height="15.0" fill="rgb(205,43,29)" rx="2" ry="2" />
<text  x="845.00" y="399.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.12%)</title><rect x="805.4" y="341" width="1.5" height="15.0" fill="rgb(214,65,12)" rx="2" ry="2" />
<text  x="808.44" y="351.5" ></text>
</g>
<g >
<title>crypto/tls.(*Conn).flush (7 samples, 0.87%)</title><rect x="34.9" y="549" width="10.2" height="15.0" fill="rgb(218,6,19)" rx="2" ry="2" />
<text  x="37.86" y="559.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (2 samples, 0.25%)</title><rect x="896.1" y="197" width="2.9" height="15.0" fill="rgb(212,75,17)" rx="2" ry="2" />
<text  x="899.10" y="207.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.25%)</title><rect x="805.4" y="437" width="3.0" height="15.0" fill="rgb(242,209,24)" rx="2" ry="2" />
<text  x="808.44" y="447.5" ></text>
</g>
<g >
<title>vendor/golang.org/long long/crypto/cryptobyte.(*Builder).addLengthPrefixed (1 samples, 0.12%)</title><rect x="730.9" y="453" width="1.4" height="15.0" fill="rgb(222,50,29)" rx="2" ry="2" />
<text  x="733.87" y="463.5" ></text>
</g>
<g >
<title>aeshashbody (1 samples, 0.12%)</title><rect x="855.2" y="245" width="1.4" height="15.0" fill="rgb(238,38,54)" rx="2" ry="2" />
<text  x="858.15" y="255.5" ></text>
</g>
<g >
<title>syscall.Getsockname (1 samples, 0.12%)</title><rect x="18.8" y="485" width="1.4" height="15.0" fill="rgb(244,228,47)" rx="2" ry="2" />
<text  x="21.77" y="495.5" ></text>
</g>
<g >
<title>vendor/golang.org/long long/crypto/cryptobyte.(*Builder).callContinuation (1 samples, 0.12%)</title><rect x="748.4" y="405" width="1.5" height="15.0" fill="rgb(214,171,34)" rx="2" ry="2" />
<text  x="751.41" y="415.5" ></text>
</g>
<g >
<title>encoding/json.(*Decoder).Decode (1 samples, 0.12%)</title><rect x="907.8" y="421" width="1.5" height="15.0" fill="rgb(208,27,13)" rx="2" ry="2" />
<text  x="910.79" y="431.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).decref (1 samples, 0.12%)</title><rect x="802.5" y="517" width="1.5" height="15.0" fill="rgb(240,75,31)" rx="2" ry="2" />
<text  x="805.52" y="527.5" ></text>
</g>
<g >
<title>crypto/rand.getRandomBatch (1 samples, 0.12%)</title><rect x="72.9" y="389" width="1.4" height="15.0" fill="rgb(209,27,54)" rx="2" ry="2" />
<text  x="75.87" y="399.5" ></text>
</g>
<g >
<title>net/http.(*connReader).abortPendingRead (1 samples, 0.12%)</title><rect x="802.5" y="581" width="1.5" height="15.0" fill="rgb(238,61,51)" rx="2" ry="2" />
<text  x="805.52" y="591.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.unmarshal (36 samples, 4.46%)</title><rect x="850.8" y="453" width="52.6" height="15.0" fill="rgb(225,111,35)" rx="2" ry="2" />
<text  x="853.77" y="463.5" >gopkg..</text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.12%)</title><rect x="887.3" y="277" width="1.5" height="15.0" fill="rgb(234,25,49)" rx="2" ry="2" />
<text  x="890.32" y="287.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.(*decoder).scalar (1 samples, 0.12%)</title><rect x="966.3" y="341" width="1.4" height="15.0" fill="rgb(248,79,4)" rx="2" ry="2" />
<text  x="969.28" y="351.5" ></text>
</g>
<g >
<title>net/http.(*Transport).roundTrip (1 samples, 0.12%)</title><rect x="29.0" y="293" width="1.5" height="15.0" fill="rgb(247,224,2)" rx="2" ry="2" />
<text  x="32.01" y="303.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.yaml_parser_fetch_plain_scalar (6 samples, 0.74%)</title><rect x="985.3" y="309" width="8.8" height="15.0" fill="rgb(215,50,20)" rx="2" ry="2" />
<text  x="988.29" y="319.5" ></text>
</g>
<g >
<title>strings.genSplit (1 samples, 0.12%)</title><rect x="931.2" y="341" width="1.5" height="15.0" fill="rgb(248,29,49)" rx="2" ry="2" />
<text  x="934.19" y="351.5" ></text>
</g>
<g >
<title>runtime.SetFinalizer.func2 (1 samples, 0.12%)</title><rect x="21.7" y="453" width="1.5" height="15.0" fill="rgb(227,83,6)" rx="2" ry="2" />
<text  x="24.70" y="463.5" ></text>
</g>
<g >
<title>crypto/tls.(*Conn).write (1 samples, 0.12%)</title><rect x="30.5" y="149" width="1.4" height="15.0" fill="rgb(228,190,42)" rx="2" ry="2" />
<text  x="33.47" y="159.5" ></text>
</g>
<g >
<title>runtime.growslice (1 samples, 0.12%)</title><rect x="869.8" y="293" width="1.4" height="15.0" fill="rgb(237,14,49)" rx="2" ry="2" />
<text  x="872.78" y="303.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.12%)</title><rect x="70.0" y="501" width="1.4" height="15.0" fill="rgb(223,178,18)" rx="2" ry="2" />
<text  x="72.95" y="511.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (1 samples, 0.12%)</title><rect x="903.4" y="309" width="1.5" height="15.0" fill="rgb(251,145,44)" rx="2" ry="2" />
<text  x="906.41" y="319.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.(*parser).node (1 samples, 0.12%)</title><rect x="866.9" y="389" width="1.4" height="15.0" fill="rgb(211,78,40)" rx="2" ry="2" />
<text  x="869.85" y="399.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.yaml_parser_process_directives (1 samples, 0.12%)</title><rect x="1007.2" y="341" width="1.5" height="15.0" fill="rgb(238,171,31)" rx="2" ry="2" />
<text  x="1010.22" y="351.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.(*decoder).unmarshal (8 samples, 0.99%)</title><rect x="957.5" y="421" width="11.7" height="15.0" fill="rgb(234,93,38)" rx="2" ry="2" />
<text  x="960.51" y="431.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (1 samples, 0.12%)</title><rect x="863.9" y="245" width="1.5" height="15.0" fill="rgb(244,204,4)" rx="2" ry="2" />
<text  x="866.93" y="255.5" ></text>
</g>
<g >
<title>syscall.Syscall (1 samples, 0.12%)</title><rect x="30.5" y="69" width="1.4" height="15.0" fill="rgb(211,211,37)" rx="2" ry="2" />
<text  x="33.47" y="79.5" ></text>
</g>
<g >
<title>github.com/json-iterator/go.(*Iterator).ReadString (1 samples, 0.12%)</title><rect x="1020.4" y="197" width="1.4" height="15.0" fill="rgb(220,226,31)" rx="2" ry="2" />
<text  x="1023.38" y="207.5" ></text>
</g>
<g >
<title>net/http.(*ServeMux).Handler (1 samples, 0.12%)</title><rect x="804.0" y="565" width="1.4" height="15.0" fill="rgb(241,179,54)" rx="2" ry="2" />
<text  x="806.98" y="575.5" ></text>
</g>
<g >
<title>k8s.io/apimachinery/pkg/runtime/serializer/json.SimpleMetaFactory.Interpret (17 samples, 2.11%)</title><rect x="1027.7" y="485" width="24.9" height="15.0" fill="rgb(211,2,13)" rx="2" ry="2" />
<text  x="1030.70" y="495.5" >k..</text>
</g>
<g >
<title>encoding/json.Unmarshal (2 samples, 0.25%)</title><rect x="937.0" y="453" width="3.0" height="15.0" fill="rgb(210,213,7)" rx="2" ry="2" />
<text  x="940.04" y="463.5" ></text>
</g>
<g >
<title>vendor/golang.org/long long/crypto/cryptobyte.(*Builder).AddUint16LengthPrefixed (1 samples, 0.12%)</title><rect x="748.4" y="437" width="1.5" height="15.0" fill="rgb(226,115,15)" rx="2" ry="2" />
<text  x="751.41" y="447.5" ></text>
</g>
<g >
<title>syscall.Read (1 samples, 0.12%)</title><rect x="808.4" y="293" width="1.4" height="15.0" fill="rgb(220,186,46)" rx="2" ry="2" />
<text  x="811.36" y="303.5" ></text>
</g>
<g >
<title>golang.org/long long/net/http2.(*ClientConn).newStream (1 samples, 0.12%)</title><rect x="26.1" y="229" width="1.4" height="15.0" fill="rgb(215,194,1)" rx="2" ry="2" />
<text  x="29.08" y="239.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.peek_token (23 samples, 2.85%)</title><rect x="868.3" y="373" width="33.6" height="15.0" fill="rgb(207,205,6)" rx="2" ry="2" />
<text  x="871.31" y="383.5" >go..</text>
</g>
<g >
<title>runtime.gosched_m (3 samples, 0.37%)</title><rect x="1150.5" y="597" width="4.4" height="15.0" fill="rgb(252,170,50)" rx="2" ry="2" />
<text  x="1153.52" y="607.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpan (2 samples, 0.25%)</title><rect x="891.7" y="149" width="2.9" height="15.0" fill="rgb(253,174,1)" rx="2" ry="2" />
<text  x="894.71" y="159.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.12%)</title><rect x="948.7" y="229" width="1.5" height="15.0" fill="rgb(226,227,24)" rx="2" ry="2" />
<text  x="951.74" y="239.5" ></text>
</g>
<g >
<title>net/http.HandlerFunc.ServeHTTP (171 samples, 21.19%)</title><rect x="805.4" y="565" width="250.1" height="15.0" fill="rgb(213,13,51)" rx="2" ry="2" />
<text  x="808.44" y="575.5" >net/http.HandlerFunc.ServeHTTP</text>
</g>
<g >
<title>runtime.funcspdelta (1 samples, 0.12%)</title><rect x="748.4" y="277" width="1.5" height="15.0" fill="rgb(245,219,12)" rx="2" ry="2" />
<text  x="751.41" y="287.5" ></text>
</g>
<g >
<title>runtime.scanstack.func1 (3 samples, 0.37%)</title><rect x="1093.5" y="485" width="4.4" height="15.0" fill="rgb(244,18,42)" rx="2" ry="2" />
<text  x="1096.49" y="495.5" ></text>
</g>
<g >
<title>runtime.greyobject (2 samples, 0.25%)</title><rect x="1140.3" y="533" width="2.9" height="15.0" fill="rgb(212,158,28)" rx="2" ry="2" />
<text  x="1143.29" y="543.5" ></text>
</g>
<g >
<title>math/big.addMulVVW (296 samples, 36.68%)</title><rect x="223.5" y="389" width="432.8" height="15.0" fill="rgb(218,93,25)" rx="2" ry="2" />
<text  x="226.48" y="399.5" >math/big.addMulVVW</text>
</g>
<g >
<title>runtime.bgscavenge.func2 (6 samples, 0.74%)</title><rect x="1065.7" y="581" width="8.8" height="15.0" fill="rgb(227,119,35)" rx="2" ry="2" />
<text  x="1068.71" y="591.5" ></text>
</g>
<g >
<title>istio.io/istio/pilot/pkg/leaderelection.(*LeaderElection).Run (1 samples, 0.12%)</title><rect x="30.5" y="581" width="1.4" height="15.0" fill="rgb(213,37,50)" rx="2" ry="2" />
<text  x="33.47" y="591.5" ></text>
</g>
<g >
<title>crypto/tls.(*cipherSuiteTLS13).finishedHash (1 samples, 0.12%)</title><rect x="741.1" y="517" width="1.5" height="15.0" fill="rgb(224,104,16)" rx="2" ry="2" />
<text  x="744.10" y="527.5" ></text>
</g>
<g >
<title>net/http.(*body).Read (3 samples, 0.37%)</title><rect x="808.4" y="485" width="4.4" height="15.0" fill="rgb(223,95,19)" rx="2" ry="2" />
<text  x="811.36" y="495.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.12%)</title><rect x="964.8" y="261" width="1.5" height="15.0" fill="rgb(232,102,52)" rx="2" ry="2" />
<text  x="967.82" y="271.5" ></text>
</g>
<g >
<title>runtime.mallocgc (5 samples, 0.62%)</title><rect x="986.8" y="261" width="7.3" height="15.0" fill="rgb(248,42,2)" rx="2" ry="2" />
<text  x="989.75" y="271.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (6 samples, 0.74%)</title><rect x="1027.7" y="421" width="8.8" height="15.0" fill="rgb(213,54,31)" rx="2" ry="2" />
<text  x="1030.70" y="431.5" ></text>
</g>
<g >
<title>runtime.mProf_Malloc (1 samples, 0.12%)</title><rect x="947.3" y="197" width="1.4" height="15.0" fill="rgb(225,220,39)" rx="2" ry="2" />
<text  x="950.27" y="207.5" ></text>
</g>
<g >
<title>runtime.startm (1 samples, 0.12%)</title><rect x="1172.5" y="565" width="1.4" height="15.0" fill="rgb(219,64,52)" rx="2" ry="2" />
<text  x="1175.45" y="575.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.(*parser).parse (29 samples, 3.59%)</title><rect x="859.5" y="437" width="42.4" height="15.0" fill="rgb(242,106,49)" rx="2" ry="2" />
<text  x="862.54" y="447.5" >gop..</text>
</g>
<g >
<title>go.opencensus.io/stats/view.encodeWithKeys (2 samples, 0.25%)</title><rect x="10.0" y="565" width="2.9" height="15.0" fill="rgb(230,15,17)" rx="2" ry="2" />
<text  x="13.00" y="575.5" ></text>
</g>
<g >
<title>runtime.acquirem (1 samples, 0.12%)</title><rect x="742.6" y="485" width="1.4" height="15.0" fill="rgb(236,79,27)" rx="2" ry="2" />
<text  x="745.57" y="495.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.12%)</title><rect x="923.9" y="309" width="1.4" height="15.0" fill="rgb(252,225,14)" rx="2" ry="2" />
<text  x="926.88" y="319.5" ></text>
</g>
<g >
<title>syscall.write (12 samples, 1.49%)</title><rect x="780.6" y="453" width="17.5" height="15.0" fill="rgb(206,194,49)" rx="2" ry="2" />
<text  x="783.58" y="463.5" ></text>
</g>
<g >
<title>runtime.makeslice (2 samples, 0.25%)</title><rect x="805.4" y="453" width="3.0" height="15.0" fill="rgb(233,140,41)" rx="2" ry="2" />
<text  x="808.44" y="463.5" ></text>
</g>
<g >
<title>strings.Split (1 samples, 0.12%)</title><rect x="931.2" y="357" width="1.5" height="15.0" fill="rgb(207,97,28)" rx="2" ry="2" />
<text  x="934.19" y="367.5" ></text>
</g>
<g >
<title>math/big.nat.divLarge (1 samples, 0.12%)</title><rect x="704.5" y="405" width="1.5" height="15.0" fill="rgb(221,119,30)" rx="2" ry="2" />
<text  x="707.55" y="415.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.12%)</title><rect x="739.6" y="469" width="1.5" height="15.0" fill="rgb(206,200,32)" rx="2" ry="2" />
<text  x="742.64" y="479.5" ></text>
</g>
<g >
<title>encoding/json.stateInString (6 samples, 0.74%)</title><rect x="1043.8" y="437" width="8.8" height="15.0" fill="rgb(217,194,22)" rx="2" ry="2" />
<text  x="1046.78" y="447.5" ></text>
</g>
<g >
<title>reflect.mapassign (1 samples, 0.12%)</title><rect x="922.4" y="309" width="1.5" height="15.0" fill="rgb(245,178,23)" rx="2" ry="2" />
<text  x="925.42" y="319.5" ></text>
</g>
<g >
<title>go.opencensus.io/stats/view.(*recordReq).handleCommand (3 samples, 0.37%)</title><rect x="10.0" y="597" width="4.4" height="15.0" fill="rgb(254,183,54)" rx="2" ry="2" />
<text  x="13.00" y="607.5" ></text>
</g>
<g >
<title>syscall.Write (1 samples, 0.12%)</title><rect x="29.0" y="101" width="1.5" height="15.0" fill="rgb(206,51,48)" rx="2" ry="2" />
<text  x="32.01" y="111.5" ></text>
</g>
<g >
<title>istio.io/istio/pkg/config/schema/resource.getProtoMessageType (1 samples, 0.12%)</title><rect x="934.1" y="437" width="1.5" height="15.0" fill="rgb(223,213,44)" rx="2" ry="2" />
<text  x="937.11" y="447.5" ></text>
</g>
<g >
<title>encoding/json.checkValid (11 samples, 1.36%)</title><rect x="1036.5" y="453" width="16.1" height="15.0" fill="rgb(247,73,26)" rx="2" ry="2" />
<text  x="1039.47" y="463.5" ></text>
</g>
<g >
<title>crypto/tls.(*atLeastReader).Read (7 samples, 0.87%)</title><rect x="751.3" y="469" width="10.3" height="15.0" fill="rgb(217,137,29)" rx="2" ry="2" />
<text  x="754.34" y="479.5" ></text>
</g>
<g >
<title>runtime.usleep (11 samples, 1.36%)</title><rect x="1173.9" y="565" width="16.1" height="15.0" fill="rgb(210,106,28)" rx="2" ry="2" />
<text  x="1176.92" y="575.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).scavengeRangeLocked (6 samples, 0.74%)</title><rect x="1065.7" y="549" width="8.8" height="15.0" fill="rgb(216,55,42)" rx="2" ry="2" />
<text  x="1068.71" y="559.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.(*parser).parse (3 samples, 0.37%)</title><rect x="969.2" y="389" width="4.4" height="15.0" fill="rgb(221,77,48)" rx="2" ry="2" />
<text  x="972.21" y="399.5" ></text>
</g>
<g >
<title>k8s.io/apimachinery/pkg/runtime/serializer/recognizer.(*decoder).Decode (31 samples, 3.84%)</title><rect x="1010.1" y="517" width="45.4" height="15.0" fill="rgb(251,42,1)" rx="2" ry="2" />
<text  x="1013.15" y="527.5" >k8s...</text>
</g>
<g >
<title>github.com/json-iterator/go.(*Iterator).skipObject (4 samples, 0.50%)</title><rect x="1017.5" y="293" width="5.8" height="15.0" fill="rgb(206,90,41)" rx="2" ry="2" />
<text  x="1020.46" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1 samples, 0.12%)</title><rect x="863.9" y="277" width="1.5" height="15.0" fill="rgb(241,58,7)" rx="2" ry="2" />
<text  x="866.93" y="287.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (1 samples, 0.12%)</title><rect x="109.4" y="309" width="1.5" height="15.0" fill="rgb(209,74,39)" rx="2" ry="2" />
<text  x="112.43" y="319.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (1 samples, 0.12%)</title><rect x="1002.8" y="245" width="1.5" height="15.0" fill="rgb(221,100,42)" rx="2" ry="2" />
<text  x="1005.84" y="255.5" ></text>
</g>
<g >
<title>crypto/tls.(*cipherSuiteTLS13).trafficKey (1 samples, 0.12%)</title><rect x="745.5" y="517" width="1.5" height="15.0" fill="rgb(231,169,53)" rx="2" ry="2" />
<text  x="748.49" y="527.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.12%)</title><rect x="1023.3" y="293" width="1.5" height="15.0" fill="rgb(236,50,49)" rx="2" ry="2" />
<text  x="1026.31" y="303.5" ></text>
</g>
<g >
<title>vendor/golang.org/long long/crypto/cryptobyte.(*Builder).addLengthPrefixed (1 samples, 0.12%)</title><rect x="748.4" y="373" width="1.5" height="15.0" fill="rgb(254,81,5)" rx="2" ry="2" />
<text  x="751.41" y="383.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (1 samples, 0.12%)</title><rect x="909.3" y="373" width="1.4" height="15.0" fill="rgb(243,207,40)" rx="2" ry="2" />
<text  x="912.26" y="383.5" ></text>
</g>
<g >
<title>vendor/golang.org/long long/crypto/hkdf.(*hkdf).Read (1 samples, 0.12%)</title><rect x="735.3" y="501" width="1.4" height="15.0" fill="rgb(225,214,16)" rx="2" ry="2" />
<text  x="738.25" y="511.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.12%)</title><rect x="849.3" y="421" width="1.5" height="15.0" fill="rgb(244,190,42)" rx="2" ry="2" />
<text  x="852.31" y="431.5" ></text>
</g>
<g >
<title>runtime.gopark (1 samples, 0.12%)</title><rect x="752.8" y="357" width="1.5" height="15.0" fill="rgb(228,190,4)" rx="2" ry="2" />
<text  x="755.80" y="367.5" ></text>
</g>
<g >
<title>net/http.(*Server).ServeTLS (7 samples, 0.87%)</title><rect x="15.8" y="581" width="10.3" height="15.0" fill="rgb(238,65,4)" rx="2" ry="2" />
<text  x="18.85" y="591.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.(*decoder).unmarshal (1 samples, 0.12%)</title><rect x="960.4" y="293" width="1.5" height="15.0" fill="rgb(232,44,17)" rx="2" ry="2" />
<text  x="963.43" y="303.5" ></text>
</g>
<g >
<title>syscall.Syscall (1 samples, 0.12%)</title><rect x="801.1" y="485" width="1.4" height="15.0" fill="rgb(209,162,38)" rx="2" ry="2" />
<text  x="804.05" y="495.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.(*parser).mapping (3 samples, 0.37%)</title><rect x="859.5" y="357" width="4.4" height="15.0" fill="rgb(254,182,21)" rx="2" ry="2" />
<text  x="862.54" y="367.5" ></text>
</g>
<g >
<title>runtime.addfinalizer (1 samples, 0.12%)</title><rect x="21.7" y="437" width="1.5" height="15.0" fill="rgb(207,181,23)" rx="2" ry="2" />
<text  x="24.70" y="447.5" ></text>
</g>
<g >
<title>net/http.(*Transport).roundTrip (1 samples, 0.12%)</title><rect x="26.1" y="293" width="1.4" height="15.0" fill="rgb(218,103,37)" rx="2" ry="2" />
<text  x="29.08" y="303.5" ></text>
</g>
<g >
<title>syscall.Accept4 (2 samples, 0.25%)</title><rect x="15.8" y="453" width="3.0" height="15.0" fill="rgb(219,178,45)" rx="2" ry="2" />
<text  x="18.85" y="463.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (2 samples, 0.25%)</title><rect x="896.1" y="213" width="2.9" height="15.0" fill="rgb(214,76,42)" rx="2" ry="2" />
<text  x="899.10" y="223.5" ></text>
</g>
<g >
<title>runtime.sweepone (1 samples, 0.12%)</title><rect x="1074.5" y="597" width="1.4" height="15.0" fill="rgb(252,21,9)" rx="2" ry="2" />
<text  x="1077.49" y="607.5" ></text>
</g>
<g >
<title>runtime.findrunnable (1 samples, 0.12%)</title><rect x="1152.0" y="549" width="1.4" height="15.0" fill="rgb(220,70,8)" rx="2" ry="2" />
<text  x="1154.98" y="559.5" ></text>
</g>
<g >
<title>k8s.io/client-go/transport.(*userAgentRoundTripper).RoundTrip (2 samples, 0.25%)</title><rect x="27.5" y="341" width="3.0" height="15.0" fill="rgb(244,137,2)" rx="2" ry="2" />
<text  x="30.55" y="351.5" ></text>
</g>
<g >
<title>runtime.notetsleep_internal (2 samples, 0.25%)</title><rect x="1169.5" y="549" width="3.0" height="15.0" fill="rgb(229,61,45)" rx="2" ry="2" />
<text  x="1172.53" y="559.5" ></text>
</g>
<g >
<title>runtime.bgscavenge.func1 (1 samples, 0.12%)</title><rect x="1157.8" y="501" width="1.5" height="15.0" fill="rgb(242,183,45)" rx="2" ry="2" />
<text  x="1160.83" y="511.5" ></text>
</g>
<g >
<title>github.com/modern-go/reflect2.(*UnsafeStructField).UnsafeGet (1 samples, 0.12%)</title><rect x="1024.8" y="325" width="1.4" height="15.0" fill="rgb(227,84,6)" rx="2" ry="2" />
<text  x="1027.77" y="335.5" ></text>
</g>
<g >
<title>golang.org/long long/net/http2.(*Transport).RoundTrip (1 samples, 0.12%)</title><rect x="29.0" y="277" width="1.5" height="15.0" fill="rgb(235,57,29)" rx="2" ry="2" />
<text  x="32.01" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.12%)</title><rect x="805.4" y="405" width="1.5" height="15.0" fill="rgb(224,193,27)" rx="2" ry="2" />
<text  x="808.44" y="415.5" ></text>
</g>
<g >
<title>internal/poll.runtime_pollWait (2 samples, 0.25%)</title><rect x="751.3" y="389" width="3.0" height="15.0" fill="rgb(250,217,29)" rx="2" ry="2" />
<text  x="754.34" y="399.5" ></text>
</g>
<g >
<title>golang.org/long long/net/http2.(*ClientConn).roundTrip (1 samples, 0.12%)</title><rect x="26.1" y="245" width="1.4" height="15.0" fill="rgb(239,100,5)" rx="2" ry="2" />
<text  x="29.08" y="255.5" ></text>
</g>
<g >
<title>net.(*netFD).accept (3 samples, 0.37%)</title><rect x="15.8" y="501" width="4.4" height="15.0" fill="rgb(244,137,40)" rx="2" ry="2" />
<text  x="18.85" y="511.5" ></text>
</g>
<g >
<title>github.com/json-iterator/go.(*Iterator).skipObject (1 samples, 0.12%)</title><rect x="1016.0" y="149" width="1.5" height="15.0" fill="rgb(221,2,43)" rx="2" ry="2" />
<text  x="1019.00" y="159.5" ></text>
</g>
<g >
<title>syscall.Write (1 samples, 0.12%)</title><rect x="801.1" y="517" width="1.4" height="15.0" fill="rgb(235,16,50)" rx="2" ry="2" />
<text  x="804.05" y="527.5" ></text>
</g>
<g >
<title>math/big.nat.make (3 samples, 0.37%)</title><rect x="106.5" y="405" width="4.4" height="15.0" fill="rgb(249,97,18)" rx="2" ry="2" />
<text  x="109.51" y="415.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.12%)</title><rect x="948.7" y="261" width="1.5" height="15.0" fill="rgb(222,168,48)" rx="2" ry="2" />
<text  x="951.74" y="271.5" ></text>
</g>
<g >
<title>runtime.gentraceback (8 samples, 0.99%)</title><rect x="1086.2" y="501" width="11.7" height="15.0" fill="rgb(213,165,15)" rx="2" ry="2" />
<text  x="1089.18" y="511.5" ></text>
</g>
<g >
<title>crypto/tls.(*serverHandshakeStateTLS13).sendServerParameters (5 samples, 0.62%)</title><rect x="742.6" y="549" width="7.3" height="15.0" fill="rgb(232,170,1)" rx="2" ry="2" />
<text  x="745.57" y="559.5" ></text>
</g>
<g >
<title>runtime.findrunnable (3 samples, 0.37%)</title><rect x="1146.1" y="565" width="4.4" height="15.0" fill="rgb(222,210,52)" rx="2" ry="2" />
<text  x="1149.13" y="575.5" ></text>
</g>
<g >
<title>github.com/gogo/protobuf/jsonpb.(*Unmarshaler).UnmarshalNext (18 samples, 2.23%)</title><rect x="907.8" y="437" width="26.3" height="15.0" fill="rgb(216,138,0)" rx="2" ry="2" />
<text  x="910.79" y="447.5" >g..</text>
</g>
<g >
<title>crypto/rsa.mgf1XOR (1 samples, 0.12%)</title><rect x="726.5" y="469" width="1.4" height="15.0" fill="rgb(243,214,32)" rx="2" ry="2" />
<text  x="729.48" y="479.5" ></text>
</g>
<g >
<title>net/http.(*Client).send (1 samples, 0.12%)</title><rect x="30.5" y="373" width="1.4" height="15.0" fill="rgb(243,30,4)" rx="2" ry="2" />
<text  x="33.47" y="383.5" ></text>
</g>
<g >
<title>k8s.io/apimachinery/pkg/runtime/serializer/json.(*Serializer).Decode (29 samples, 3.59%)</title><rect x="1010.1" y="501" width="42.5" height="15.0" fill="rgb(213,106,27)" rx="2" ry="2" />
<text  x="1013.15" y="511.5" >k8s..</text>
</g>
<g >
<title>syscall.setsockopt (2 samples, 0.25%)</title><rect x="23.2" y="469" width="2.9" height="15.0" fill="rgb(237,85,11)" rx="2" ry="2" />
<text  x="26.16" y="479.5" ></text>
</g>
<g >
<title>istio.io/istio/pkg/config/schema/resource.(*schemaImpl).NewProtoInstance (2 samples, 0.25%)</title><rect x="934.1" y="453" width="2.9" height="15.0" fill="rgb(220,211,36)" rx="2" ry="2" />
<text  x="937.11" y="463.5" ></text>
</g>
<g >
<title>context.propagateCancel (1 samples, 0.12%)</title><rect x="763.0" y="565" width="1.5" height="15.0" fill="rgb(209,30,24)" rx="2" ry="2" />
<text  x="766.04" y="575.5" ></text>
</g>
<g >
<title>github.com/gogo/protobuf/jsonpb.(*Unmarshaler).Unmarshal (18 samples, 2.23%)</title><rect x="907.8" y="453" width="26.3" height="15.0" fill="rgb(250,32,29)" rx="2" ry="2" />
<text  x="910.79" y="463.5" >g..</text>
</g>
<g >
<title>encoding/json.(*decodeState).value (9 samples, 1.12%)</title><rect x="814.2" y="437" width="13.2" height="15.0" fill="rgb(223,167,54)" rx="2" ry="2" />
<text  x="817.21" y="447.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.newParser (1 samples, 0.12%)</title><rect x="849.3" y="453" width="1.5" height="15.0" fill="rgb(231,160,26)" rx="2" ry="2" />
<text  x="852.31" y="463.5" ></text>
</g>
<g >
<title>istio.io/istio/pilot/pkg/bootstrap.(*Server).initConfigValidation.func2 (1 samples, 0.12%)</title><rect x="30.5" y="597" width="1.4" height="15.0" fill="rgb(251,126,29)" rx="2" ry="2" />
<text  x="33.47" y="607.5" ></text>
</g>
<g >
<title>net.(*netFD).Write (12 samples, 1.49%)</title><rect x="780.6" y="485" width="17.5" height="15.0" fill="rgb(214,5,17)" rx="2" ry="2" />
<text  x="783.58" y="495.5" ></text>
</g>
<g >
<title>runtime.(*pallocBits).summarize (1 samples, 0.12%)</title><rect x="891.7" y="85" width="1.5" height="15.0" fill="rgb(220,100,52)" rx="2" ry="2" />
<text  x="894.71" y="95.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.(*decoder).unmarshal (7 samples, 0.87%)</title><rect x="957.5" y="357" width="10.2" height="15.0" fill="rgb(208,15,32)" rx="2" ry="2" />
<text  x="960.51" y="367.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.12%)</title><rect x="736.7" y="485" width="1.5" height="15.0" fill="rgb(219,116,7)" rx="2" ry="2" />
<text  x="739.72" y="495.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.yaml_parser_initialize (1 samples, 0.12%)</title><rect x="903.4" y="453" width="1.5" height="15.0" fill="rgb(243,5,32)" rx="2" ry="2" />
<text  x="906.41" y="463.5" ></text>
</g>
<g >
<title>vendor/golang.org/long long/crypto/cryptobyte.(*Builder).addLengthPrefixed (1 samples, 0.12%)</title><rect x="745.5" y="485" width="1.5" height="15.0" fill="rgb(254,19,24)" rx="2" ry="2" />
<text  x="748.49" y="495.5" ></text>
</g>
<g >
<title>reflect.Value.Addr (1 samples, 0.12%)</title><rect x="926.8" y="373" width="1.5" height="15.0" fill="rgb(248,83,17)" rx="2" ry="2" />
<text  x="929.80" y="383.5" ></text>
</g>
<g >
<title>net.(*netFD).Read (7 samples, 0.87%)</title><rect x="751.3" y="437" width="10.3" height="15.0" fill="rgb(249,2,6)" rx="2" ry="2" />
<text  x="754.34" y="447.5" ></text>
</g>
<g >
<title>vendor/golang.org/long long/crypto/hkdf.(*hkdf).Read (1 samples, 0.12%)</title><rect x="738.2" y="485" width="1.4" height="15.0" fill="rgb(226,228,19)" rx="2" ry="2" />
<text  x="741.18" y="495.5" ></text>
</g>
<g >
<title>github.com/json-iterator/go.(*Iterator).ReadVal (12 samples, 1.49%)</title><rect x="1010.1" y="469" width="17.6" height="15.0" fill="rgb(252,119,9)" rx="2" ry="2" />
<text  x="1013.15" y="479.5" ></text>
</g>
<g >
<title>net/http.(*Client).send (2 samples, 0.25%)</title><rect x="27.5" y="373" width="3.0" height="15.0" fill="rgb(207,105,42)" rx="2" ry="2" />
<text  x="30.55" y="383.5" ></text>
</g>
<g >
<title>runtime.scanobject (1 samples, 0.12%)</title><rect x="866.9" y="261" width="1.4" height="15.0" fill="rgb(254,81,20)" rx="2" ry="2" />
<text  x="869.85" y="271.5" ></text>
</g>
<g >
<title>math/big.nat.divBasic (10 samples, 1.24%)</title><rect x="75.8" y="389" width="14.6" height="15.0" fill="rgb(240,111,13)" rx="2" ry="2" />
<text  x="78.80" y="399.5" ></text>
</g>
<g >
<title>fmt.Sprintf (1 samples, 0.12%)</title><rect x="27.5" y="309" width="1.5" height="15.0" fill="rgb(249,20,51)" rx="2" ry="2" />
<text  x="30.55" y="319.5" ></text>
</g>
<g >
<title>encoding/json.mapEncoder.encode (9 samples, 1.12%)</title><rect x="940.0" y="341" width="13.1" height="15.0" fill="rgb(218,1,30)" rx="2" ry="2" />
<text  x="942.96" y="351.5" ></text>
</g>
<g >
<title>net.(*netFD).Write (1 samples, 0.12%)</title><rect x="29.0" y="117" width="1.5" height="15.0" fill="rgb(225,175,4)" rx="2" ry="2" />
<text  x="32.01" y="127.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.12%)</title><rect x="741.1" y="469" width="1.5" height="15.0" fill="rgb(209,39,9)" rx="2" ry="2" />
<text  x="744.10" y="479.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.12%)</title><rect x="824.4" y="229" width="1.5" height="15.0" fill="rgb(229,193,3)" rx="2" ry="2" />
<text  x="827.45" y="239.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.12%)</title><rect x="11.5" y="533" width="1.4" height="15.0" fill="rgb(253,194,14)" rx="2" ry="2" />
<text  x="14.46" y="543.5" ></text>
</g>
<g >
<title>reflect.(*rtype).NumMethod (1 samples, 0.12%)</title><rect x="814.2" y="357" width="1.5" height="15.0" fill="rgb(211,81,4)" rx="2" ry="2" />
<text  x="817.21" y="367.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.12%)</title><rect x="827.4" y="405" width="1.4" height="15.0" fill="rgb(217,168,37)" rx="2" ry="2" />
<text  x="830.37" y="415.5" ></text>
</g>
<g >
<title>vendor/golang.org/long long/crypto/cryptobyte.(*Builder).callContinuation (1 samples, 0.12%)</title><rect x="748.4" y="453" width="1.5" height="15.0" fill="rgb(237,144,9)" rx="2" ry="2" />
<text  x="751.41" y="463.5" ></text>
</g>
<g >
<title>istio.io/istio/pilot/pkg/leaderelection.(*LeaderElection).Run (3 samples, 0.37%)</title><rect x="26.1" y="581" width="4.4" height="15.0" fill="rgb(228,131,37)" rx="2" ry="2" />
<text  x="29.08" y="591.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.12%)</title><rect x="1020.4" y="165" width="1.4" height="15.0" fill="rgb(218,229,49)" rx="2" ry="2" />
<text  x="1023.38" y="175.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (1 samples, 0.12%)</title><rect x="866.9" y="277" width="1.4" height="15.0" fill="rgb(227,28,23)" rx="2" ry="2" />
<text  x="869.85" y="287.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (1 samples, 0.12%)</title><rect x="956.0" y="357" width="1.5" height="15.0" fill="rgb(240,217,27)" rx="2" ry="2" />
<text  x="959.05" y="367.5" ></text>
</g>
<g >
<title>k8s.io/apimachinery/pkg/util/wait.JitterUntil (3 samples, 0.37%)</title><rect x="26.1" y="533" width="4.4" height="15.0" fill="rgb(253,142,29)" rx="2" ry="2" />
<text  x="29.08" y="543.5" ></text>
</g>
<g >
<title>syscall.Syscall (1 samples, 0.12%)</title><rect x="774.7" y="421" width="1.5" height="15.0" fill="rgb(229,179,39)" rx="2" ry="2" />
<text  x="777.73" y="431.5" ></text>
</g>
<g >
<title>runtime.mapaccess2 (1 samples, 0.12%)</title><rect x="1035.0" y="373" width="1.5" height="15.0" fill="rgb(216,45,51)" rx="2" ry="2" />
<text  x="1038.01" y="383.5" ></text>
</g>
<g >
<title>vendor/golang.org/long long/crypto/cryptobyte.(*Builder).addLengthPrefixed (1 samples, 0.12%)</title><rect x="748.4" y="421" width="1.5" height="15.0" fill="rgb(210,131,3)" rx="2" ry="2" />
<text  x="751.41" y="431.5" ></text>
</g>
<g >
<title>crypto/tls.(*serverHandshakeStateTLS13).sendSessionTickets (1 samples, 0.12%)</title><rect x="741.1" y="533" width="1.5" height="15.0" fill="rgb(208,59,5)" rx="2" ry="2" />
<text  x="744.10" y="543.5" ></text>
</g>
<g >
<title>crypto/hmac.New (1 samples, 0.12%)</title><rect x="68.5" y="469" width="1.5" height="15.0" fill="rgb(228,162,42)" rx="2" ry="2" />
<text  x="71.49" y="479.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.25%)</title><rect x="891.7" y="181" width="2.9" height="15.0" fill="rgb(238,202,18)" rx="2" ry="2" />
<text  x="894.71" y="191.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.unmarshal (36 samples, 4.46%)</title><rect x="957.5" y="437" width="52.6" height="15.0" fill="rgb(232,45,27)" rx="2" ry="2" />
<text  x="960.51" y="447.5" >gopkg..</text>
</g>
<g >
<title>encoding/json.(*encodeState).reflectValue (1 samples, 0.12%)</title><rect x="904.9" y="437" width="1.4" height="15.0" fill="rgb(251,211,31)" rx="2" ry="2" />
<text  x="907.87" y="447.5" ></text>
</g>
<g >
<title>crypto/tls.(*Conn).Write (1 samples, 0.12%)</title><rect x="29.0" y="181" width="1.5" height="15.0" fill="rgb(251,179,38)" rx="2" ry="2" />
<text  x="32.01" y="191.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.yaml_parser_fetch_plain_scalar (1 samples, 0.12%)</title><rect x="887.3" y="325" width="1.5" height="15.0" fill="rgb(206,170,24)" rx="2" ry="2" />
<text  x="890.32" y="335.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.25%)</title><rect x="768.9" y="549" width="2.9" height="15.0" fill="rgb(222,207,2)" rx="2" ry="2" />
<text  x="771.88" y="559.5" ></text>
</g>
<g >
<title>runtime.scanstack (11 samples, 1.36%)</title><rect x="1086.2" y="517" width="16.1" height="15.0" fill="rgb(254,179,12)" rx="2" ry="2" />
<text  x="1089.18" y="527.5" ></text>
</g>
<g >
<title>reflect.mapassign (2 samples, 0.25%)</title><rect x="853.7" y="309" width="2.9" height="15.0" fill="rgb(208,5,36)" rx="2" ry="2" />
<text  x="856.69" y="319.5" ></text>
</g>
<g >
<title>math/big.nat.cmp (1 samples, 0.12%)</title><rect x="703.1" y="437" width="1.4" height="15.0" fill="rgb(233,76,53)" rx="2" ry="2" />
<text  x="706.09" y="447.5" ></text>
</g>
<g >
<title>k8s.io/client-go/transport.(*userAgentRoundTripper).RoundTrip (1 samples, 0.12%)</title><rect x="26.1" y="341" width="1.4" height="15.0" fill="rgb(215,227,6)" rx="2" ry="2" />
<text  x="29.08" y="351.5" ></text>
</g>
<g >
<title>internal/poll.(*pollDesc).waitRead (2 samples, 0.25%)</title><rect x="751.3" y="421" width="3.0" height="15.0" fill="rgb(213,72,33)" rx="2" ry="2" />
<text  x="754.34" y="431.5" ></text>
</g>
<g >
<title>runtime.(*gList).pop (1 samples, 0.12%)</title><rect x="809.8" y="373" width="1.5" height="15.0" fill="rgb(219,122,20)" rx="2" ry="2" />
<text  x="812.83" y="383.5" ></text>
</g>
<g >
<title>runtime.typehash (1 samples, 0.12%)</title><rect x="855.2" y="261" width="1.4" height="15.0" fill="rgb(215,112,32)" rx="2" ry="2" />
<text  x="858.15" y="271.5" ></text>
</g>
<g >
<title>runtime.pcvalue (1 samples, 0.12%)</title><rect x="918.0" y="229" width="1.5" height="15.0" fill="rgb(206,132,33)" rx="2" ry="2" />
<text  x="921.03" y="239.5" ></text>
</g>
<g >
<title>runtime.mallocgc (6 samples, 0.74%)</title><rect x="890.2" y="277" width="8.8" height="15.0" fill="rgb(213,15,9)" rx="2" ry="2" />
<text  x="893.25" y="287.5" ></text>
</g>
<g >
<title>crypto/aes.NewCipher (1 samples, 0.12%)</title><rect x="747.0" y="501" width="1.4" height="15.0" fill="rgb(227,26,25)" rx="2" ry="2" />
<text  x="749.95" y="511.5" ></text>
</g>
<g >
<title>github.com/json-iterator/go.(*Iterator).ReadString (1 samples, 0.12%)</title><rect x="1011.6" y="261" width="1.5" height="15.0" fill="rgb(242,228,10)" rx="2" ry="2" />
<text  x="1014.61" y="271.5" ></text>
</g>
<g >
<title>sort.Slice (1 samples, 0.12%)</title><rect x="950.2" y="277" width="1.5" height="15.0" fill="rgb(243,221,28)" rx="2" ry="2" />
<text  x="953.20" y="287.5" ></text>
</g>
<g >
<title>k8s.io/client-go/tools/leaderelection.(*LeaderElector).acquire.func1 (1 samples, 0.12%)</title><rect x="30.5" y="485" width="1.4" height="15.0" fill="rgb(243,153,6)" rx="2" ry="2" />
<text  x="33.47" y="495.5" ></text>
</g>
<g >
<title>bytes.(*Buffer).tryGrowByReslice (1 samples, 0.12%)</title><rect x="833.2" y="229" width="1.5" height="15.0" fill="rgb(210,173,27)" rx="2" ry="2" />
<text  x="836.22" y="239.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.(*parser).parse (5 samples, 0.62%)</title><rect x="859.5" y="373" width="7.4" height="15.0" fill="rgb(231,37,43)" rx="2" ry="2" />
<text  x="862.54" y="383.5" ></text>
</g>
<g >
<title>math/big.(*Int).lehmerGCD (17 samples, 2.11%)</title><rect x="678.2" y="421" width="24.9" height="15.0" fill="rgb(225,61,0)" rx="2" ry="2" />
<text  x="681.23" y="431.5" >m..</text>
</g>
<g >
<title>net.(*TCPListener).accept (7 samples, 0.87%)</title><rect x="15.8" y="517" width="10.3" height="15.0" fill="rgb(215,45,3)" rx="2" ry="2" />
<text  x="18.85" y="527.5" ></text>
</g>
<g >
<title>runtime.growslice (1 samples, 0.12%)</title><rect x="862.5" y="309" width="1.4" height="15.0" fill="rgb(211,208,28)" rx="2" ry="2" />
<text  x="865.47" y="319.5" ></text>
</g>
<g >
<title>runtime.assertE2I2 (1 samples, 0.12%)</title><rect x="840.5" y="389" width="1.5" height="15.0" fill="rgb(228,172,26)" rx="2" ry="2" />
<text  x="843.53" y="399.5" ></text>
</g>
<g >
<title>runtime.futexsleep (1 samples, 0.12%)</title><rect x="1162.2" y="517" width="1.5" height="15.0" fill="rgb(209,155,20)" rx="2" ry="2" />
<text  x="1165.22" y="527.5" ></text>
</g>
<g >
<title>net/http.send (1 samples, 0.12%)</title><rect x="26.1" y="357" width="1.4" height="15.0" fill="rgb(216,11,35)" rx="2" ry="2" />
<text  x="29.08" y="367.5" ></text>
</g>
<g >
<title>crypto/sha256.(*digest).Write (1 samples, 0.12%)</title><rect x="727.9" y="533" width="1.5" height="15.0" fill="rgb(240,179,38)" rx="2" ry="2" />
<text  x="730.94" y="543.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.12%)</title><rect x="71.4" y="421" width="1.5" height="15.0" fill="rgb(225,40,21)" rx="2" ry="2" />
<text  x="74.41" y="431.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (2 samples, 0.25%)</title><rect x="994.1" y="165" width="2.9" height="15.0" fill="rgb(223,111,5)" rx="2" ry="2" />
<text  x="997.06" y="175.5" ></text>
</g>
<g >
<title>runtime.sweepone (1 samples, 0.12%)</title><rect x="894.6" y="197" width="1.5" height="15.0" fill="rgb(219,186,35)" rx="2" ry="2" />
<text  x="897.63" y="207.5" ></text>
</g>
<g >
<title>github.com/gogo/protobuf/proto.(*Properties).init (1 samples, 0.12%)</title><rect x="931.2" y="373" width="1.5" height="15.0" fill="rgb(239,7,17)" rx="2" ry="2" />
<text  x="934.19" y="383.5" ></text>
</g>
<g >
<title>crypto/tls.(*Conn).readFromUntil (7 samples, 0.87%)</title><rect x="751.3" y="501" width="10.3" height="15.0" fill="rgb(250,206,36)" rx="2" ry="2" />
<text  x="754.34" y="511.5" ></text>
</g>
<g >
<title>math/big.nat.divBasic (2 samples, 0.25%)</title><rect x="102.1" y="373" width="2.9" height="15.0" fill="rgb(214,169,42)" rx="2" ry="2" />
<text  x="105.12" y="383.5" ></text>
</g>
<g >
<title>net.(*conn).Write (1 samples, 0.12%)</title><rect x="801.1" y="549" width="1.4" height="15.0" fill="rgb(243,208,28)" rx="2" ry="2" />
<text  x="804.05" y="559.5" ></text>
</g>
<g >
<title>net/http.(*chunkWriter).Write (3 samples, 0.37%)</title><rect x="776.2" y="565" width="4.4" height="15.0" fill="rgb(226,171,30)" rx="2" ry="2" />
<text  x="779.20" y="575.5" ></text>
</g>
<g >
<title>crypto/tls.(*Conn).sendAlertLocked (1 samples, 0.12%)</title><rect x="774.7" y="533" width="1.5" height="15.0" fill="rgb(215,206,48)" rx="2" ry="2" />
<text  x="777.73" y="543.5" ></text>
</g>
<g >
<title>reflect.Value.SetMapIndex (1 samples, 0.12%)</title><rect x="957.5" y="309" width="1.5" height="15.0" fill="rgb(253,28,41)" rx="2" ry="2" />
<text  x="960.51" y="319.5" ></text>
</g>
<g >
<title>runtime.pcdatavalue (1 samples, 0.12%)</title><rect x="918.0" y="245" width="1.5" height="15.0" fill="rgb(248,121,39)" rx="2" ry="2" />
<text  x="921.03" y="255.5" ></text>
</g>
<g >
<title>syscall.write (1 samples, 0.12%)</title><rect x="774.7" y="437" width="1.5" height="15.0" fill="rgb(254,143,31)" rx="2" ry="2" />
<text  x="777.73" y="447.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.Unmarshal (36 samples, 4.46%)</title><rect x="957.5" y="453" width="52.6" height="15.0" fill="rgb(225,24,44)" rx="2" ry="2" />
<text  x="960.51" y="463.5" >gopkg..</text>
</g>
<g >
<title>crypto/sha256.block (1 samples, 0.12%)</title><rect x="738.2" y="437" width="1.4" height="15.0" fill="rgb(223,53,6)" rx="2" ry="2" />
<text  x="741.18" y="447.5" ></text>
</g>
<g >
<title>time.Date (1 samples, 0.12%)</title><rect x="821.5" y="309" width="1.5" height="15.0" fill="rgb(249,213,3)" rx="2" ry="2" />
<text  x="824.52" y="319.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).unmarshal (1 samples, 0.12%)</title><rect x="907.8" y="405" width="1.5" height="15.0" fill="rgb(245,215,45)" rx="2" ry="2" />
<text  x="910.79" y="415.5" ></text>
</g>
<g >
<title>crypto/tls.(*Conn).writeRecordLocked (1 samples, 0.12%)</title><rect x="29.0" y="165" width="1.5" height="15.0" fill="rgb(228,176,25)" rx="2" ry="2" />
<text  x="32.01" y="175.5" ></text>
</g>
<g >
<title>runtime.wakeScavenger.func1 (1 samples, 0.12%)</title><rect x="1157.8" y="469" width="1.5" height="15.0" fill="rgb(214,23,54)" rx="2" ry="2" />
<text  x="1160.83" y="479.5" ></text>
</g>
<g >
<title>runtime.deductSweepCredit (1 samples, 0.12%)</title><rect x="894.6" y="213" width="1.5" height="15.0" fill="rgb(225,172,41)" rx="2" ry="2" />
<text  x="897.63" y="223.5" ></text>
</g>
<g >
<title>net/http.(*Client).Do (1 samples, 0.12%)</title><rect x="26.1" y="405" width="1.4" height="15.0" fill="rgb(234,87,42)" rx="2" ry="2" />
<text  x="29.08" y="415.5" ></text>
</g>
<g >
<title>github.com/json-iterator/go.(*placeholderDecoder).Decode (1 samples, 0.12%)</title><rect x="1011.6" y="341" width="1.5" height="15.0" fill="rgb(229,143,13)" rx="2" ry="2" />
<text  x="1014.61" y="351.5" ></text>
</g>
<g >
<title>net/http.(*Transport).RoundTrip (1 samples, 0.12%)</title><rect x="29.0" y="309" width="1.5" height="15.0" fill="rgb(249,43,10)" rx="2" ry="2" />
<text  x="32.01" y="319.5" ></text>
</g>
<g >
<title>net/http.(*ServeMux).ServeHTTP (172 samples, 21.31%)</title><rect x="804.0" y="581" width="251.5" height="15.0" fill="rgb(237,176,50)" rx="2" ry="2" />
<text  x="806.98" y="591.5" >net/http.(*ServeMux).ServeHTTP</text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (1 samples, 0.12%)</title><rect x="109.4" y="325" width="1.5" height="15.0" fill="rgb(244,190,45)" rx="2" ry="2" />
<text  x="112.43" y="335.5" ></text>
</g>
<g >
<title>reflect.Value.SetMapIndex (1 samples, 0.12%)</title><rect x="922.4" y="325" width="1.5" height="15.0" fill="rgb(205,111,23)" rx="2" ry="2" />
<text  x="925.42" y="335.5" ></text>
</g>
<g >
<title>net.(*netFD).init (1 samples, 0.12%)</title><rect x="20.2" y="501" width="1.5" height="15.0" fill="rgb(236,197,36)" rx="2" ry="2" />
<text  x="23.24" y="511.5" ></text>
</g>
<g >
<title>math/big.mulAddVWW (2 samples, 0.25%)</title><rect x="716.2" y="373" width="3.0" height="15.0" fill="rgb(223,120,44)" rx="2" ry="2" />
<text  x="719.25" y="383.5" ></text>
</g>
<g >
<title>crypto/tls.(*listener).Accept (7 samples, 0.87%)</title><rect x="15.8" y="549" width="10.3" height="15.0" fill="rgb(209,166,45)" rx="2" ry="2" />
<text  x="18.85" y="559.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).reflectValue (5 samples, 0.62%)</title><rect x="828.8" y="373" width="7.3" height="15.0" fill="rgb(205,200,30)" rx="2" ry="2" />
<text  x="831.84" y="383.5" ></text>
</g>
<g >
<title>bytes.Equal (1 samples, 0.12%)</title><rect x="839.1" y="437" width="1.4" height="15.0" fill="rgb(206,0,5)" rx="2" ry="2" />
<text  x="842.07" y="447.5" ></text>
</g>
<g >
<title>github.com/ghodss/yaml.convertToJSONableObject (8 samples, 0.99%)</title><rect x="837.6" y="453" width="11.7" height="15.0" fill="rgb(237,18,13)" rx="2" ry="2" />
<text  x="840.61" y="463.5" ></text>
</g>
<g >
<title>encoding/json.stateInString (1 samples, 0.12%)</title><rect x="907.8" y="341" width="1.5" height="15.0" fill="rgb(241,161,13)" rx="2" ry="2" />
<text  x="910.79" y="351.5" ></text>
</g>
<g >
<title>encoding/json.newEncodeState (1 samples, 0.12%)</title><rect x="836.1" y="437" width="1.5" height="15.0" fill="rgb(222,157,5)" rx="2" ry="2" />
<text  x="839.15" y="447.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.12%)</title><rect x="947.3" y="229" width="1.4" height="15.0" fill="rgb(206,134,12)" rx="2" ry="2" />
<text  x="950.27" y="239.5" ></text>
</g>
<g >
<title>math/big.nat.divLarge (9 samples, 1.12%)</title><rect x="708.9" y="405" width="13.2" height="15.0" fill="rgb(241,45,44)" rx="2" ry="2" />
<text  x="711.93" y="415.5" ></text>
</g>
<g >
<title>github.com/json-iterator/go.(*Iterator).ReadString (1 samples, 0.12%)</title><rect x="1026.2" y="389" width="1.5" height="15.0" fill="rgb(207,127,0)" rx="2" ry="2" />
<text  x="1029.23" y="399.5" ></text>
</g>
<g >
<title>crypto/hmac.(*hmac).Reset (1 samples, 0.12%)</title><rect x="735.3" y="485" width="1.4" height="15.0" fill="rgb(228,219,37)" rx="2" ry="2" />
<text  x="738.25" y="495.5" ></text>
</g>
<g >
<title>syscall.Write (1 samples, 0.12%)</title><rect x="30.5" y="101" width="1.4" height="15.0" fill="rgb(226,56,9)" rx="2" ry="2" />
<text  x="33.47" y="111.5" ></text>
</g>
<g >
<title>runtime.bgsweep (1 samples, 0.12%)</title><rect x="1074.5" y="613" width="1.4" height="15.0" fill="rgb(251,41,39)" rx="2" ry="2" />
<text  x="1077.49" y="623.5" ></text>
</g>
<g >
<title>math/big.basicSqr (2 samples, 0.25%)</title><rect x="675.3" y="405" width="2.9" height="15.0" fill="rgb(213,24,24)" rx="2" ry="2" />
<text  x="678.30" y="415.5" ></text>
</g>
<g >
<title>runtime.scanblock (1 samples, 0.12%)</title><rect x="1096.4" y="453" width="1.5" height="15.0" fill="rgb(240,162,17)" rx="2" ry="2" />
<text  x="1099.42" y="463.5" ></text>
</g>
<g >
<title>encoding/json.Unmarshal (10 samples, 1.24%)</title><rect x="814.2" y="469" width="14.6" height="15.0" fill="rgb(218,92,49)" rx="2" ry="2" />
<text  x="817.21" y="479.5" ></text>
</g>
<g >
<title>github.com/json-iterator/go.(*Iterator).SkipAndReturnBytes (3 samples, 0.37%)</title><rect x="1013.1" y="309" width="4.4" height="15.0" fill="rgb(212,53,26)" rx="2" ry="2" />
<text  x="1016.07" y="319.5" ></text>
</g>
<g >
<title>runtime.newobject (2 samples, 0.25%)</title><rect x="768.9" y="565" width="2.9" height="15.0" fill="rgb(246,84,47)" rx="2" ry="2" />
<text  x="771.88" y="575.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (2 samples, 0.25%)</title><rect x="994.1" y="197" width="2.9" height="15.0" fill="rgb(242,66,40)" rx="2" ry="2" />
<text  x="997.06" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (2 samples, 0.25%)</title><rect x="891.7" y="165" width="2.9" height="15.0" fill="rgb(252,175,38)" rx="2" ry="2" />
<text  x="894.71" y="175.5" ></text>
</g>
<g >
<title>runtime.epollwait (2 samples, 0.25%)</title><rect x="1146.1" y="533" width="3.0" height="15.0" fill="rgb(216,80,40)" rx="2" ry="2" />
<text  x="1149.13" y="543.5" ></text>
</g>
<g >
<title>runtime.findBitRange64 (1 samples, 0.12%)</title><rect x="893.2" y="69" width="1.4" height="15.0" fill="rgb(222,184,5)" rx="2" ry="2" />
<text  x="896.17" y="79.5" ></text>
</g>
<g >
<title>syscall.write (1 samples, 0.12%)</title><rect x="801.1" y="501" width="1.4" height="15.0" fill="rgb(218,190,7)" rx="2" ry="2" />
<text  x="804.05" y="511.5" ></text>
</g>
<g >
<title>net/http.readTransfer (1 samples, 0.12%)</title><rect x="764.5" y="565" width="1.5" height="15.0" fill="rgb(246,111,38)" rx="2" ry="2" />
<text  x="767.50" y="575.5" ></text>
</g>
<g >
<title>net.(*conn).Read (7 samples, 0.87%)</title><rect x="751.3" y="453" width="10.3" height="15.0" fill="rgb(249,123,41)" rx="2" ry="2" />
<text  x="754.34" y="463.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.12%)</title><rect x="948.7" y="245" width="1.5" height="15.0" fill="rgb(242,40,16)" rx="2" ry="2" />
<text  x="951.74" y="255.5" ></text>
</g>
<g >
<title>bytes.(*Buffer).ReadFrom (2 samples, 0.25%)</title><rect x="65.6" y="485" width="2.9" height="15.0" fill="rgb(229,90,27)" rx="2" ry="2" />
<text  x="68.56" y="495.5" ></text>
</g>
<g >
<title>k8s.io/client-go/tools/leaderelection/resourcelock.(*ConfigMapLock).Update (2 samples, 0.25%)</title><rect x="27.5" y="453" width="3.0" height="15.0" fill="rgb(218,5,6)" rx="2" ry="2" />
<text  x="30.55" y="463.5" ></text>
</g>
<g >
<title>net/http.(*body).readLocked (3 samples, 0.37%)</title><rect x="808.4" y="469" width="4.4" height="15.0" fill="rgb(206,150,38)" rx="2" ry="2" />
<text  x="811.36" y="479.5" ></text>
</g>
<g >
<title>net/textproto.(*Reader).ReadLine (1 samples, 0.12%)</title><rect x="771.8" y="581" width="1.5" height="15.0" fill="rgb(211,15,53)" rx="2" ry="2" />
<text  x="774.81" y="591.5" ></text>
</g>
<g >
<title>vendor/golang.org/long long/crypto/cryptobyte.(*Builder).addLengthPrefixed (1 samples, 0.12%)</title><rect x="733.8" y="501" width="1.5" height="15.0" fill="rgb(205,75,47)" rx="2" ry="2" />
<text  x="736.79" y="511.5" ></text>
</g>
<g >
<title>runtime.funcspdelta (1 samples, 0.12%)</title><rect x="842.0" y="293" width="1.5" height="15.0" fill="rgb(229,168,37)" rx="2" ry="2" />
<text  x="845.00" y="303.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (6 samples, 0.74%)</title><rect x="1027.7" y="437" width="8.8" height="15.0" fill="rgb(234,175,0)" rx="2" ry="2" />
<text  x="1030.70" y="447.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).reflectValue (3 samples, 0.37%)</title><rect x="830.3" y="277" width="4.4" height="15.0" fill="rgb(253,210,51)" rx="2" ry="2" />
<text  x="833.30" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (1 samples, 0.12%)</title><rect x="824.4" y="245" width="1.5" height="15.0" fill="rgb(228,86,5)" rx="2" ry="2" />
<text  x="827.45" y="255.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (3 samples, 0.37%)</title><rect x="986.8" y="245" width="4.3" height="15.0" fill="rgb(237,110,4)" rx="2" ry="2" />
<text  x="989.75" y="255.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.(*decoder).setMapIndex (2 samples, 0.25%)</title><rect x="853.7" y="341" width="2.9" height="15.0" fill="rgb(237,3,44)" rx="2" ry="2" />
<text  x="856.69" y="351.5" ></text>
</g>
<g >
<title>runtime.scanobject (1 samples, 0.12%)</title><rect x="806.9" y="341" width="1.5" height="15.0" fill="rgb(250,141,47)" rx="2" ry="2" />
<text  x="809.90" y="351.5" ></text>
</g>
<g >
<title>runtime.newstack (1 samples, 0.12%)</title><rect x="748.4" y="325" width="1.5" height="15.0" fill="rgb(223,36,0)" rx="2" ry="2" />
<text  x="751.41" y="335.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).rescanLiteral (1 samples, 0.12%)</title><rect x="823.0" y="357" width="1.4" height="15.0" fill="rgb(253,199,54)" rx="2" ry="2" />
<text  x="825.99" y="367.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.yaml_parser_parse (23 samples, 2.85%)</title><rect x="868.3" y="405" width="33.6" height="15.0" fill="rgb(213,2,24)" rx="2" ry="2" />
<text  x="871.31" y="415.5" >go..</text>
</g>
<g >
<title>encoding/json.(*encodeState).reflectValue (11 samples, 1.36%)</title><rect x="940.0" y="405" width="16.0" height="15.0" fill="rgb(224,120,51)" rx="2" ry="2" />
<text  x="942.96" y="415.5" ></text>
</g>
<g >
<title>net/http.DetectContentType (1 samples, 0.12%)</title><rect x="776.2" y="533" width="1.5" height="15.0" fill="rgb(207,51,35)" rx="2" ry="2" />
<text  x="779.20" y="543.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.(*parser).peek (23 samples, 2.85%)</title><rect x="868.3" y="421" width="33.6" height="15.0" fill="rgb(205,64,34)" rx="2" ry="2" />
<text  x="871.31" y="431.5" >go..</text>
</g>
<g >
<title>encoding/json.Marshal (1 samples, 0.12%)</title><rect x="904.9" y="469" width="1.4" height="15.0" fill="rgb(231,118,28)" rx="2" ry="2" />
<text  x="907.87" y="479.5" ></text>
</g>
<g >
<title>runtime.gentraceback (4 samples, 0.50%)</title><rect x="913.6" y="293" width="5.9" height="15.0" fill="rgb(222,127,46)" rx="2" ry="2" />
<text  x="916.64" y="303.5" ></text>
</g>
<g >
<title>runtime.gentraceback (2 samples, 0.25%)</title><rect x="1055.5" y="437" width="2.9" height="15.0" fill="rgb(206,157,29)" rx="2" ry="2" />
<text  x="1058.48" y="447.5" ></text>
</g>
<g >
<title>runtime.newobject (2 samples, 0.25%)</title><rect x="863.9" y="341" width="3.0" height="15.0" fill="rgb(212,209,19)" rx="2" ry="2" />
<text  x="866.93" y="351.5" ></text>
</g>
<g >
<title>istio.io/istio/pilot/pkg/bootstrap.(*Server).Start.func4 (7 samples, 0.87%)</title><rect x="15.8" y="613" width="10.3" height="15.0" fill="rgb(234,157,54)" rx="2" ry="2" />
<text  x="18.85" y="623.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.(*decoder).unmarshal (6 samples, 0.74%)</title><rect x="850.8" y="437" width="8.7" height="15.0" fill="rgb(223,32,27)" rx="2" ry="2" />
<text  x="853.77" y="447.5" ></text>
</g>
<g >
<title>runtime.mallocgc (3 samples, 0.37%)</title><rect x="978.0" y="245" width="4.4" height="15.0" fill="rgb(205,18,22)" rx="2" ry="2" />
<text  x="980.98" y="255.5" ></text>
</g>
<g >
<title>math/big.nat.norm (1 samples, 0.12%)</title><rect x="695.8" y="357" width="1.4" height="15.0" fill="rgb(205,209,15)" rx="2" ry="2" />
<text  x="698.77" y="367.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.12%)</title><rect x="954.6" y="357" width="1.4" height="15.0" fill="rgb(212,180,27)" rx="2" ry="2" />
<text  x="957.58" y="367.5" ></text>
</g>
<g >
<title>crypto/tls.(*Conn).writeRecordLocked (1 samples, 0.12%)</title><rect x="774.7" y="517" width="1.5" height="15.0" fill="rgb(219,8,8)" rx="2" ry="2" />
<text  x="777.73" y="527.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.25%)</title><rect x="1049.6" y="389" width="3.0" height="15.0" fill="rgb(243,11,9)" rx="2" ry="2" />
<text  x="1052.63" y="399.5" ></text>
</g>
<g >
<title>net/http.(*Client).do (1 samples, 0.12%)</title><rect x="26.1" y="389" width="1.4" height="15.0" fill="rgb(222,153,31)" rx="2" ry="2" />
<text  x="29.08" y="399.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.yaml_parser_scan_flow_scalar (7 samples, 0.87%)</title><rect x="973.6" y="293" width="10.2" height="15.0" fill="rgb(252,129,30)" rx="2" ry="2" />
<text  x="976.59" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mspan).sweep (1 samples, 0.12%)</title><rect x="894.6" y="181" width="1.5" height="15.0" fill="rgb(226,76,34)" rx="2" ry="2" />
<text  x="897.63" y="191.5" ></text>
</g>
<g >
<title>bytes.TrimLeftFunc (1 samples, 0.12%)</title><rect x="1054.0" y="469" width="1.5" height="15.0" fill="rgb(239,218,47)" rx="2" ry="2" />
<text  x="1057.01" y="479.5" ></text>
</g>
<g >
<title>github.com/json-iterator/go.(*structFieldDecoder).Decode (1 samples, 0.12%)</title><rect x="1024.8" y="341" width="1.4" height="15.0" fill="rgb(218,69,49)" rx="2" ry="2" />
<text  x="1027.77" y="351.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.(*parser).mapping (5 samples, 0.62%)</title><rect x="859.5" y="389" width="7.4" height="15.0" fill="rgb(229,182,7)" rx="2" ry="2" />
<text  x="862.54" y="399.5" ></text>
</g>
<g >
<title>github.com/ghodss/yaml.Unmarshal (62 samples, 7.68%)</title><rect x="814.2" y="485" width="90.7" height="15.0" fill="rgb(217,107,32)" rx="2" ry="2" />
<text  x="817.21" y="495.5" >github.com..</text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.yaml_insert_token (1 samples, 0.12%)</title><rect x="887.3" y="309" width="1.5" height="15.0" fill="rgb(233,21,50)" rx="2" ry="2" />
<text  x="890.32" y="319.5" ></text>
</g>
<g >
<title>runtime.mapdelete_fast64 (1 samples, 0.12%)</title><rect x="900.5" y="309" width="1.4" height="15.0" fill="rgb(212,87,35)" rx="2" ry="2" />
<text  x="903.48" y="319.5" ></text>
</g>
<g >
<title>runtime.sysUnused (6 samples, 0.74%)</title><rect x="1065.7" y="533" width="8.8" height="15.0" fill="rgb(254,94,40)" rx="2" ry="2" />
<text  x="1068.71" y="543.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.yaml_insert_token (9 samples, 1.12%)</title><rect x="994.1" y="293" width="13.1" height="15.0" fill="rgb(221,82,42)" rx="2" ry="2" />
<text  x="997.06" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpan (1 samples, 0.12%)</title><rect x="894.6" y="149" width="1.5" height="15.0" fill="rgb(213,39,34)" rx="2" ry="2" />
<text  x="897.63" y="159.5" ></text>
</g>
<g >
<title>runtime.pcdatavalue (1 samples, 0.12%)</title><rect x="1095.0" y="437" width="1.4" height="15.0" fill="rgb(208,149,50)" rx="2" ry="2" />
<text  x="1097.96" y="447.5" ></text>
</g>
<g >
<title>encoding/json.(*scanner).eof (1 samples, 0.12%)</title><rect x="925.3" y="341" width="1.5" height="15.0" fill="rgb(219,114,35)" rx="2" ry="2" />
<text  x="928.34" y="351.5" ></text>
</g>
<g >
<title>github.com/ghodss/yaml.indirect (1 samples, 0.12%)</title><rect x="840.5" y="405" width="1.5" height="15.0" fill="rgb(250,65,38)" rx="2" ry="2" />
<text  x="843.53" y="415.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.25%)</title><rect x="108.0" y="373" width="2.9" height="15.0" fill="rgb(244,124,11)" rx="2" ry="2" />
<text  x="110.97" y="383.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.12%)</title><rect x="748.4" y="341" width="1.5" height="15.0" fill="rgb(236,171,48)" rx="2" ry="2" />
<text  x="751.41" y="351.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (3 samples, 0.37%)</title><rect x="890.2" y="213" width="4.4" height="15.0" fill="rgb(245,42,49)" rx="2" ry="2" />
<text  x="893.25" y="223.5" ></text>
</g>
<g >
<title>reflect.copyVal (1 samples, 0.12%)</title><rect x="929.7" y="389" width="1.5" height="15.0" fill="rgb(210,218,30)" rx="2" ry="2" />
<text  x="932.73" y="399.5" ></text>
</g>
<g >
<title>internal/poll.setDeadlineImpl (1 samples, 0.12%)</title><rect x="802.5" y="533" width="1.5" height="15.0" fill="rgb(208,182,1)" rx="2" ry="2" />
<text  x="805.52" y="543.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).reflectValue (4 samples, 0.50%)</title><rect x="941.4" y="261" width="5.9" height="15.0" fill="rgb(254,136,10)" rx="2" ry="2" />
<text  x="944.43" y="271.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.12%)</title><rect x="869.8" y="277" width="1.4" height="15.0" fill="rgb(229,82,41)" rx="2" ry="2" />
<text  x="872.78" y="287.5" ></text>
</g>
<g >
<title>runtime.profilealloc (2 samples, 0.25%)</title><rect x="991.1" y="245" width="3.0" height="15.0" fill="rgb(235,90,16)" rx="2" ry="2" />
<text  x="994.14" y="255.5" ></text>
</g>
<g >
<title>crypto/rsa.encrypt (14 samples, 1.73%)</title><rect x="706.0" y="469" width="20.5" height="15.0" fill="rgb(229,58,26)" rx="2" ry="2" />
<text  x="709.01" y="479.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpan.func1 (1 samples, 0.12%)</title><rect x="1074.5" y="517" width="1.4" height="15.0" fill="rgb(224,152,9)" rx="2" ry="2" />
<text  x="1077.49" y="527.5" ></text>
</g>
<g >
<title>reflect.Value.Addr (1 samples, 0.12%)</title><rect x="960.4" y="261" width="1.5" height="15.0" fill="rgb(233,42,5)" rx="2" ry="2" />
<text  x="963.43" y="271.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.(*decoder).mapping (3 samples, 0.37%)</title><rect x="853.7" y="357" width="4.4" height="15.0" fill="rgb(251,33,7)" rx="2" ry="2" />
<text  x="856.69" y="367.5" ></text>
</g>
<g >
<title>internal/poll.(*pollDesc).init (1 samples, 0.12%)</title><rect x="20.2" y="469" width="1.5" height="15.0" fill="rgb(238,137,0)" rx="2" ry="2" />
<text  x="23.24" y="479.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).skip (1 samples, 0.12%)</title><rect x="937.0" y="357" width="1.5" height="15.0" fill="rgb(220,122,29)" rx="2" ry="2" />
<text  x="940.04" y="367.5" ></text>
</g>
<g >
<title>math/big.nat.clear (4 samples, 0.50%)</title><rect x="656.3" y="389" width="5.8" height="15.0" fill="rgb(242,30,52)" rx="2" ry="2" />
<text  x="659.29" y="399.5" ></text>
</g>
<g >
<title>golang.org/long long/net/http2.(*Transport).RoundTripOpt (1 samples, 0.12%)</title><rect x="29.0" y="261" width="1.5" height="15.0" fill="rgb(235,120,9)" rx="2" ry="2" />
<text  x="32.01" y="271.5" ></text>
</g>
<g >
<title>github.com/json-iterator/go.(*Iterator).ReadObjectCB (3 samples, 0.37%)</title><rect x="1018.9" y="213" width="4.4" height="15.0" fill="rgb(222,175,36)" rx="2" ry="2" />
<text  x="1021.92" y="223.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).alloc (2 samples, 0.25%)</title><rect x="891.7" y="133" width="2.9" height="15.0" fill="rgb(231,67,20)" rx="2" ry="2" />
<text  x="894.71" y="143.5" ></text>
</g>
<g >
<title>runtime.(*mcache).prepareForSweep (1 samples, 0.12%)</title><rect x="1156.4" y="533" width="1.4" height="15.0" fill="rgb(208,113,14)" rx="2" ry="2" />
<text  x="1159.37" y="543.5" ></text>
</g>
<g >
<title>github.com/json-iterator/go.(*structFieldDecoder).Decode (12 samples, 1.49%)</title><rect x="1010.1" y="437" width="17.6" height="15.0" fill="rgb(211,8,27)" rx="2" ry="2" />
<text  x="1013.15" y="447.5" ></text>
</g>
<g >
<title>crypto/hmac.(*hmac).Reset (1 samples, 0.12%)</title><rect x="738.2" y="469" width="1.4" height="15.0" fill="rgb(247,34,1)" rx="2" ry="2" />
<text  x="741.18" y="479.5" ></text>
</g>
<g >
<title>vendor/golang.org/long long/crypto/curve25519.square (1 samples, 0.12%)</title><rect x="46.6" y="469" width="1.4" height="15.0" fill="rgb(221,170,29)" rx="2" ry="2" />
<text  x="49.56" y="479.5" ></text>
</g>
<g >
<title>istio.io/istio/pilot/pkg/bootstrap.(*Server).addTerminatingStartFunc.func1.1 (4 samples, 0.50%)</title><rect x="26.1" y="613" width="5.8" height="15.0" fill="rgb(214,12,24)" rx="2" ry="2" />
<text  x="29.08" y="623.5" ></text>
</g>
<g >
<title>runtime.copystack (1 samples, 0.12%)</title><rect x="749.9" y="549" width="1.4" height="15.0" fill="rgb(251,171,40)" rx="2" ry="2" />
<text  x="752.88" y="559.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.12%)</title><rect x="1004.3" y="245" width="1.5" height="15.0" fill="rgb(250,25,5)" rx="2" ry="2" />
<text  x="1007.30" y="255.5" ></text>
</g>
<g >
<title>k8s.io/client-go/rest.(*Request).Do (1 samples, 0.12%)</title><rect x="30.5" y="421" width="1.4" height="15.0" fill="rgb(228,173,12)" rx="2" ry="2" />
<text  x="33.47" y="431.5" ></text>
</g>
<g >
<title>github.com/json-iterator/go.(*generalStructDecoder).Decode (10 samples, 1.24%)</title><rect x="1011.6" y="405" width="14.6" height="15.0" fill="rgb(225,115,49)" rx="2" ry="2" />
<text  x="1014.61" y="415.5" ></text>
</g>
<g >
<title>github.com/json-iterator/go.(*Iterator).Skip (1 samples, 0.12%)</title><rect x="1016.0" y="101" width="1.5" height="15.0" fill="rgb(246,89,23)" rx="2" ry="2" />
<text  x="1019.00" y="111.5" ></text>
</g>
<g >
<title>k8s.io/apimachinery/pkg/runtime/serializer/json.(*Serializer).RecognizesData (2 samples, 0.25%)</title><rect x="1052.6" y="501" width="2.9" height="15.0" fill="rgb(221,70,19)" rx="2" ry="2" />
<text  x="1055.55" y="511.5" ></text>
</g>
<g >
<title>crypto/tls.(*halfConn).encrypt (2 samples, 0.25%)</title><rect x="798.1" y="517" width="3.0" height="15.0" fill="rgb(224,101,30)" rx="2" ry="2" />
<text  x="801.13" y="527.5" ></text>
</g>
<g >
<title>sync.(*Map).Load (1 samples, 0.12%)</title><rect x="945.8" y="213" width="1.5" height="15.0" fill="rgb(252,23,52)" rx="2" ry="2" />
<text  x="948.81" y="223.5" ></text>
</g>
<g >
<title>crypto/sha256.(*digest).Write (1 samples, 0.12%)</title><rect x="738.2" y="453" width="1.4" height="15.0" fill="rgb(246,106,3)" rx="2" ry="2" />
<text  x="741.18" y="463.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.12%)</title><rect x="856.6" y="293" width="1.5" height="15.0" fill="rgb(236,32,36)" rx="2" ry="2" />
<text  x="859.62" y="303.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).marshal (11 samples, 1.36%)</title><rect x="940.0" y="421" width="16.0" height="15.0" fill="rgb(219,125,42)" rx="2" ry="2" />
<text  x="942.96" y="431.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Init (1 samples, 0.12%)</title><rect x="20.2" y="485" width="1.5" height="15.0" fill="rgb(237,121,6)" rx="2" ry="2" />
<text  x="23.24" y="495.5" ></text>
</g>
<g >
<title>runtime.nilinterhash (1 samples, 0.12%)</title><rect x="855.2" y="277" width="1.4" height="15.0" fill="rgb(240,62,38)" rx="2" ry="2" />
<text  x="858.15" y="287.5" ></text>
</g>
<g >
<title>net/http.(*Server).Serve (7 samples, 0.87%)</title><rect x="15.8" y="565" width="10.3" height="15.0" fill="rgb(252,28,13)" rx="2" ry="2" />
<text  x="18.85" y="575.5" ></text>
</g>
<g >
<title>io/ioutil.readAll (5 samples, 0.62%)</title><rect x="805.4" y="517" width="7.4" height="15.0" fill="rgb(215,73,40)" rx="2" ry="2" />
<text  x="808.44" y="527.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1 samples, 0.12%)</title><rect x="108.0" y="325" width="1.4" height="15.0" fill="rgb(226,217,10)" rx="2" ry="2" />
<text  x="110.97" y="335.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (1 samples, 0.12%)</title><rect x="71.4" y="373" width="1.5" height="15.0" fill="rgb(232,41,45)" rx="2" ry="2" />
<text  x="74.41" y="383.5" ></text>
</g>
<g >
<title>syscall.Syscall (7 samples, 0.87%)</title><rect x="34.9" y="469" width="10.2" height="15.0" fill="rgb(205,197,32)" rx="2" ry="2" />
<text  x="37.86" y="479.5" ></text>
</g>
<g >
<title>vendor/golang.org/long long/crypto/curve25519.scalarMult (14 samples, 1.73%)</title><rect x="45.1" y="501" width="20.5" height="15.0" fill="rgb(239,158,18)" rx="2" ry="2" />
<text  x="48.09" y="511.5" ></text>
</g>
<g >
<title>runtime.(*mspan).sweep (1 samples, 0.12%)</title><rect x="1074.5" y="581" width="1.4" height="15.0" fill="rgb(227,24,11)" rx="2" ry="2" />
<text  x="1077.49" y="591.5" ></text>
</g>
<g >
<title>github.com/json-iterator/go.(*Iterator).skipObject.func1 (1 samples, 0.12%)</title><rect x="1021.8" y="133" width="1.5" height="15.0" fill="rgb(252,198,15)" rx="2" ry="2" />
<text  x="1024.85" y="143.5" ></text>
</g>
<g >
<title>runtime.mProf_Malloc (2 samples, 0.25%)</title><rect x="991.1" y="229" width="3.0" height="15.0" fill="rgb(213,188,53)" rx="2" ry="2" />
<text  x="994.14" y="239.5" ></text>
</g>
<g >
<title>encoding/json.Unmarshal (17 samples, 2.11%)</title><rect x="1027.7" y="469" width="24.9" height="15.0" fill="rgb(249,0,35)" rx="2" ry="2" />
<text  x="1030.70" y="479.5" >e..</text>
</g>
<g >
<title>runtime.getStackMap (2 samples, 0.25%)</title><rect x="1093.5" y="453" width="2.9" height="15.0" fill="rgb(233,225,3)" rx="2" ry="2" />
<text  x="1096.49" y="463.5" ></text>
</g>
<g >
<title>math/big.nat.expNN (413 samples, 51.18%)</title><rect x="74.3" y="437" width="603.9" height="15.0" fill="rgb(205,75,37)" rx="2" ry="2" />
<text  x="77.34" y="447.5" >math/big.nat.expNN</text>
</g>
<g >
<title>k8s.io/apimachinery/pkg/util/wait.BackoffUntil.func1 (1 samples, 0.12%)</title><rect x="30.5" y="501" width="1.4" height="15.0" fill="rgb(212,51,27)" rx="2" ry="2" />
<text  x="33.47" y="511.5" ></text>
</g>
<g >
<title>github.com/gogo/protobuf/proto.MessageType (1 samples, 0.12%)</title><rect x="934.1" y="421" width="1.5" height="15.0" fill="rgb(229,229,9)" rx="2" ry="2" />
<text  x="937.11" y="431.5" ></text>
</g>
<g >
<title>runtime.fastrand (1 samples, 0.12%)</title><rect x="1089.1" y="469" width="1.5" height="15.0" fill="rgb(227,3,51)" rx="2" ry="2" />
<text  x="1092.11" y="479.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.(*decoder).unmarshal (8 samples, 0.99%)</title><rect x="957.5" y="389" width="11.7" height="15.0" fill="rgb(214,192,20)" rx="2" ry="2" />
<text  x="960.51" y="399.5" ></text>
</g>
<g >
<title>syscall.Syscall (1 samples, 0.12%)</title><rect x="808.4" y="261" width="1.4" height="15.0" fill="rgb(234,117,39)" rx="2" ry="2" />
<text  x="811.36" y="271.5" ></text>
</g>
<g >
<title>github.com/json-iterator/go.(*generalStructDecoder).decodeOneField (10 samples, 1.24%)</title><rect x="1011.6" y="389" width="14.6" height="15.0" fill="rgb(234,160,33)" rx="2" ry="2" />
<text  x="1014.61" y="399.5" ></text>
</g>
<g >
<title>github.com/gogo/protobuf/proto.(*Properties).Init (1 samples, 0.12%)</title><rect x="931.2" y="421" width="1.5" height="15.0" fill="rgb(247,201,22)" rx="2" ry="2" />
<text  x="934.19" y="431.5" ></text>
</g>
<g >
<title>github.com/json-iterator/go.(*placeholderDecoder).Decode (1 samples, 0.12%)</title><rect x="1011.6" y="293" width="1.5" height="15.0" fill="rgb(210,67,27)" rx="2" ry="2" />
<text  x="1014.61" y="303.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.(*decoder).document (6 samples, 0.74%)</title><rect x="850.8" y="421" width="8.7" height="15.0" fill="rgb(250,16,44)" rx="2" ry="2" />
<text  x="853.77" y="431.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.(*decoder).setMapIndex (1 samples, 0.12%)</title><rect x="957.5" y="325" width="1.5" height="15.0" fill="rgb(215,49,2)" rx="2" ry="2" />
<text  x="960.51" y="335.5" ></text>
</g>
<g >
<title>runtime.slicebytetostring (1 samples, 0.12%)</title><rect x="859.5" y="277" width="1.5" height="15.0" fill="rgb(209,198,38)" rx="2" ry="2" />
<text  x="862.54" y="287.5" ></text>
</g>
<g >
<title>runtime.scanobject (2 samples, 0.25%)</title><rect x="896.1" y="181" width="2.9" height="15.0" fill="rgb(239,127,22)" rx="2" ry="2" />
<text  x="899.10" y="191.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush1 (2 samples, 0.25%)</title><rect x="1049.6" y="357" width="3.0" height="15.0" fill="rgb(205,13,4)" rx="2" ry="2" />
<text  x="1052.63" y="367.5" ></text>
</g>
<g >
<title>crypto/sha256.(*digest).checkSum (1 samples, 0.12%)</title><rect x="726.5" y="437" width="1.4" height="15.0" fill="rgb(246,146,47)" rx="2" ry="2" />
<text  x="729.48" y="447.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (3 samples, 0.37%)</title><rect x="1059.9" y="453" width="4.4" height="15.0" fill="rgb(205,18,43)" rx="2" ry="2" />
<text  x="1062.86" y="463.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush1 (1 samples, 0.12%)</title><rect x="1008.7" y="325" width="1.4" height="15.0" fill="rgb(207,197,25)" rx="2" ry="2" />
<text  x="1011.69" y="335.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).literalStore (5 samples, 0.62%)</title><rect x="913.6" y="341" width="7.4" height="15.0" fill="rgb(216,29,0)" rx="2" ry="2" />
<text  x="916.64" y="351.5" ></text>
</g>
<g >
<title>runtime.growslice (1 samples, 0.12%)</title><rect x="921.0" y="277" width="1.4" height="15.0" fill="rgb(237,114,25)" rx="2" ry="2" />
<text  x="923.95" y="287.5" ></text>
</g>
<g >
<title>crypto/tls.(*Conn).readRecordOrCCS (2 samples, 0.25%)</title><rect x="65.6" y="517" width="2.9" height="15.0" fill="rgb(241,128,47)" rx="2" ry="2" />
<text  x="68.56" y="527.5" ></text>
</g>
<g >
<title>bytes.(*Buffer).ReadFrom (3 samples, 0.37%)</title><rect x="1055.5" y="549" width="4.4" height="15.0" fill="rgb(235,126,1)" rx="2" ry="2" />
<text  x="1058.48" y="559.5" ></text>
</g>
<g >
<title>github.com/json-iterator/go.(*structFieldDecoder).Decode (1 samples, 0.12%)</title><rect x="1011.6" y="309" width="1.5" height="15.0" fill="rgb(211,206,17)" rx="2" ry="2" />
<text  x="1014.61" y="319.5" ></text>
</g>
<g >
<title>runtime.memmove (5 samples, 0.62%)</title><rect x="668.0" y="389" width="7.3" height="15.0" fill="rgb(245,32,47)" rx="2" ry="2" />
<text  x="670.99" y="399.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.(*decoder).mapping (2 samples, 0.25%)</title><rect x="959.0" y="309" width="2.9" height="15.0" fill="rgb(212,224,49)" rx="2" ry="2" />
<text  x="961.97" y="319.5" ></text>
</g>
<g >
<title>runtime.sellock (1 samples, 0.12%)</title><rect x="14.4" y="581" width="1.4" height="15.0" fill="rgb(248,207,5)" rx="2" ry="2" />
<text  x="17.39" y="591.5" ></text>
</g>
<g >
<title>runtime.mapassign (2 samples, 0.25%)</title><rect x="853.7" y="293" width="2.9" height="15.0" fill="rgb(235,26,41)" rx="2" ry="2" />
<text  x="856.69" y="303.5" ></text>
</g>
<g >
<title>runtime.getitab (1 samples, 0.12%)</title><rect x="840.5" y="373" width="1.5" height="15.0" fill="rgb(245,127,6)" rx="2" ry="2" />
<text  x="843.53" y="383.5" ></text>
</g>
<g >
<title>net/http.(*Transport).roundTrip (1 samples, 0.12%)</title><rect x="30.5" y="293" width="1.4" height="15.0" fill="rgb(245,47,32)" rx="2" ry="2" />
<text  x="33.47" y="303.5" ></text>
</g>
<g >
<title>crypto/sha256.(*digest).Write (1 samples, 0.12%)</title><rect x="726.5" y="421" width="1.4" height="15.0" fill="rgb(226,106,7)" rx="2" ry="2" />
<text  x="729.48" y="431.5" ></text>
</g>
<g >
<title>encoding/json.interfaceEncoder (5 samples, 0.62%)</title><rect x="828.8" y="341" width="7.3" height="15.0" fill="rgb(227,44,41)" rx="2" ry="2" />
<text  x="831.84" y="351.5" ></text>
</g>
<g >
<title>runtime.scanobject (3 samples, 0.37%)</title><rect x="998.5" y="165" width="4.3" height="15.0" fill="rgb(246,3,39)" rx="2" ry="2" />
<text  x="1001.45" y="175.5" ></text>
</g>
<g >
<title>crypto/tls.(*halfConn).setTrafficSecret (3 samples, 0.37%)</title><rect x="736.7" y="533" width="4.4" height="15.0" fill="rgb(206,124,10)" rx="2" ry="2" />
<text  x="739.72" y="543.5" ></text>
</g>
<g >
<title>reflect.Value.Elem (1 samples, 0.12%)</title><rect x="846.4" y="421" width="1.4" height="15.0" fill="rgb(220,61,35)" rx="2" ry="2" />
<text  x="849.38" y="431.5" ></text>
</g>
<g >
<title>github.com/json-iterator/go.(*Iterator).skipObject.func1 (1 samples, 0.12%)</title><rect x="1016.0" y="117" width="1.5" height="15.0" fill="rgb(233,9,24)" rx="2" ry="2" />
<text  x="1019.00" y="127.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.12%)</title><rect x="980.9" y="229" width="1.5" height="15.0" fill="rgb(240,226,28)" rx="2" ry="2" />
<text  x="983.90" y="239.5" ></text>
</g>
<g >
<title>crypto/tls.(*Conn).writeRecord (1 samples, 0.12%)</title><rect x="729.4" y="533" width="1.5" height="15.0" fill="rgb(214,108,50)" rx="2" ry="2" />
<text  x="732.41" y="543.5" ></text>
</g>
<g >
<title>github.com/json-iterator/go.(*Iterator).skipObject (1 samples, 0.12%)</title><rect x="1021.8" y="165" width="1.5" height="15.0" fill="rgb(226,219,5)" rx="2" ry="2" />
<text  x="1024.85" y="175.5" ></text>
</g>
<g >
<title>encoding/json.mapEncoder.encode (5 samples, 0.62%)</title><rect x="828.8" y="357" width="7.3" height="15.0" fill="rgb(239,175,38)" rx="2" ry="2" />
<text  x="831.84" y="367.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).unmarshal (6 samples, 0.74%)</title><rect x="1027.7" y="453" width="8.8" height="15.0" fill="rgb(227,132,5)" rx="2" ry="2" />
<text  x="1030.70" y="463.5" ></text>
</g>
<g >
<title>k8s.io/apimachinery/pkg/util/wait.BackoffUntil (3 samples, 0.37%)</title><rect x="26.1" y="517" width="4.4" height="15.0" fill="rgb(250,189,49)" rx="2" ry="2" />
<text  x="29.08" y="527.5" ></text>
</g>
<g >
<title>runtime.alignUp (1 samples, 0.12%)</title><rect x="938.5" y="341" width="1.5" height="15.0" fill="rgb(235,96,50)" rx="2" ry="2" />
<text  x="941.50" y="351.5" ></text>
</g>
<g >
<title>k8s.io/apimachinery/pkg/util/wait.BackoffUntil (1 samples, 0.12%)</title><rect x="30.5" y="517" width="1.4" height="15.0" fill="rgb(210,71,4)" rx="2" ry="2" />
<text  x="33.47" y="527.5" ></text>
</g>
<g >
<title>runtime.findObject (1 samples, 0.12%)</title><rect x="979.4" y="133" width="1.5" height="15.0" fill="rgb(208,125,48)" rx="2" ry="2" />
<text  x="982.44" y="143.5" ></text>
</g>
<g >
<title>runtime.netpoll (3 samples, 0.37%)</title><rect x="1165.1" y="565" width="4.4" height="15.0" fill="rgb(211,202,42)" rx="2" ry="2" />
<text  x="1168.14" y="575.5" ></text>
</g>
<g >
<title>encoding/json.(*scanner).pushParseState (1 samples, 0.12%)</title><rect x="923.9" y="357" width="1.4" height="15.0" fill="rgb(206,129,34)" rx="2" ry="2" />
<text  x="926.88" y="367.5" ></text>
</g>
<g >
<title>crypto/tls.aeadAESGCMTLS13 (1 samples, 0.12%)</title><rect x="70.0" y="517" width="1.4" height="15.0" fill="rgb(245,115,31)" rx="2" ry="2" />
<text  x="72.95" y="527.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (8 samples, 0.99%)</title><rect x="814.2" y="405" width="11.7" height="15.0" fill="rgb(205,202,19)" rx="2" ry="2" />
<text  x="817.21" y="415.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.12%)</title><rect x="71.4" y="437" width="1.5" height="15.0" fill="rgb(252,198,17)" rx="2" ry="2" />
<text  x="74.41" y="447.5" ></text>
</g>
<g >
<title>github.com/ghodss/yaml.yamlToJSON (14 samples, 1.73%)</title><rect x="828.8" y="469" width="20.5" height="15.0" fill="rgb(215,53,12)" rx="2" ry="2" />
<text  x="831.84" y="479.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (2 samples, 0.25%)</title><rect x="994.1" y="181" width="2.9" height="15.0" fill="rgb(252,50,44)" rx="2" ry="2" />
<text  x="997.06" y="191.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.(*parser).parse (3 samples, 0.37%)</title><rect x="969.2" y="357" width="4.4" height="15.0" fill="rgb(208,168,50)" rx="2" ry="2" />
<text  x="972.21" y="367.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (3 samples, 0.37%)</title><rect x="890.2" y="197" width="4.4" height="15.0" fill="rgb(237,64,2)" rx="2" ry="2" />
<text  x="893.25" y="207.5" ></text>
</g>
<g >
<title>runtime.growslice (1 samples, 0.12%)</title><rect x="1023.3" y="309" width="1.5" height="15.0" fill="rgb(238,178,21)" rx="2" ry="2" />
<text  x="1026.31" y="319.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).tryGetFast (1 samples, 0.12%)</title><rect x="1075.9" y="565" width="1.5" height="15.0" fill="rgb(205,155,48)" rx="2" ry="2" />
<text  x="1078.95" y="575.5" ></text>
</g>
<g >
<title>crypto/rand.batched.func1 (1 samples, 0.12%)</title><rect x="72.9" y="405" width="1.4" height="15.0" fill="rgb(243,196,53)" rx="2" ry="2" />
<text  x="75.87" y="415.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.read (3 samples, 0.37%)</title><rect x="882.9" y="293" width="4.4" height="15.0" fill="rgb(252,86,43)" rx="2" ry="2" />
<text  x="885.94" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (1 samples, 0.12%)</title><rect x="903.4" y="357" width="1.5" height="15.0" fill="rgb(236,30,29)" rx="2" ry="2" />
<text  x="906.41" y="367.5" ></text>
</g>
<g >
<title>encoding/json.(*scanner).pushParseState (1 samples, 0.12%)</title><rect x="827.4" y="437" width="1.4" height="15.0" fill="rgb(212,123,40)" rx="2" ry="2" />
<text  x="830.37" y="447.5" ></text>
</g>
<g >
<title>github.com/json-iterator/go.(*Iterator).ReadObjectCB (3 samples, 0.37%)</title><rect x="1013.1" y="261" width="4.4" height="15.0" fill="rgb(226,183,31)" rx="2" ry="2" />
<text  x="1016.07" y="271.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (2 samples, 0.25%)</title><rect x="978.0" y="197" width="2.9" height="15.0" fill="rgb(235,53,24)" rx="2" ry="2" />
<text  x="980.98" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.12%)</title><rect x="863.9" y="309" width="1.5" height="15.0" fill="rgb(251,39,50)" rx="2" ry="2" />
<text  x="866.93" y="319.5" ></text>
</g>
<g >
<title>runtime.resolveTypeOff (1 samples, 0.12%)</title><rect x="960.4" y="213" width="1.5" height="15.0" fill="rgb(206,122,37)" rx="2" ry="2" />
<text  x="963.43" y="223.5" ></text>
</g>
<g >
<title>encoding/json.Marshal (6 samples, 0.74%)</title><rect x="828.8" y="453" width="8.8" height="15.0" fill="rgb(235,160,5)" rx="2" ry="2" />
<text  x="831.84" y="463.5" ></text>
</g>
<g >
<title>reflect.cvtBytesString (1 samples, 0.12%)</title><rect x="938.5" y="373" width="1.5" height="15.0" fill="rgb(247,6,24)" rx="2" ry="2" />
<text  x="941.50" y="383.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (1 samples, 0.12%)</title><rect x="806.9" y="389" width="1.5" height="15.0" fill="rgb(245,96,54)" rx="2" ry="2" />
<text  x="809.90" y="399.5" ></text>
</g>
<g >
<title>runtime.callers.func1 (2 samples, 0.25%)</title><rect x="991.1" y="181" width="3.0" height="15.0" fill="rgb(225,107,21)" rx="2" ry="2" />
<text  x="994.14" y="191.5" ></text>
</g>
<g >
<title>k8s.io/client-go/tools/leaderelection.(*LeaderElector).acquire.func1 (3 samples, 0.37%)</title><rect x="26.1" y="485" width="4.4" height="15.0" fill="rgb(235,72,10)" rx="2" ry="2" />
<text  x="29.08" y="495.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).freeSpan (1 samples, 0.12%)</title><rect x="894.6" y="165" width="1.5" height="15.0" fill="rgb(233,22,42)" rx="2" ry="2" />
<text  x="897.63" y="175.5" ></text>
</g>
<g >
<title>runtime.mapaccess2_faststr (1 samples, 0.12%)</title><rect x="912.2" y="389" width="1.4" height="15.0" fill="rgb(213,105,22)" rx="2" ry="2" />
<text  x="915.18" y="399.5" ></text>
</g>
<g >
<title>encoding/json.stateInString (1 samples, 0.12%)</title><rect x="910.7" y="373" width="1.5" height="15.0" fill="rgb(206,5,34)" rx="2" ry="2" />
<text  x="913.72" y="383.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.12%)</title><rect x="71.4" y="341" width="1.5" height="15.0" fill="rgb(235,102,11)" rx="2" ry="2" />
<text  x="74.41" y="351.5" ></text>
</g>
<g >
<title>encoding/json.mapEncoder.encode (8 samples, 0.99%)</title><rect x="940.0" y="293" width="11.7" height="15.0" fill="rgb(230,211,19)" rx="2" ry="2" />
<text  x="942.96" y="303.5" ></text>
</g>
<g >
<title>reflect.Value.Convert (1 samples, 0.12%)</title><rect x="938.5" y="389" width="1.5" height="15.0" fill="rgb(238,80,46)" rx="2" ry="2" />
<text  x="941.50" y="399.5" ></text>
</g>
<g >
<title>runtime.epollwait (1 samples, 0.12%)</title><rect x="1160.8" y="533" width="1.4" height="15.0" fill="rgb(224,64,29)" rx="2" ry="2" />
<text  x="1163.76" y="543.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpan (1 samples, 0.12%)</title><rect x="805.4" y="309" width="1.5" height="15.0" fill="rgb(211,137,43)" rx="2" ry="2" />
<text  x="808.44" y="319.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.12%)</title><rect x="736.7" y="469" width="1.5" height="15.0" fill="rgb(230,64,53)" rx="2" ry="2" />
<text  x="739.72" y="479.5" ></text>
</g>
<g >
<title>istio.io/istio/pilot/pkg/config/kube/crd.ConvertObject (22 samples, 2.73%)</title><rect x="904.9" y="485" width="32.1" height="15.0" fill="rgb(227,215,15)" rx="2" ry="2" />
<text  x="907.87" y="495.5" >is..</text>
</g>
<g >
<title>net/http.(*Client).Do (2 samples, 0.25%)</title><rect x="27.5" y="405" width="3.0" height="15.0" fill="rgb(240,13,46)" rx="2" ry="2" />
<text  x="30.55" y="415.5" ></text>
</g>
<g >
<title>runtime.(*pallocBits).find (1 samples, 0.12%)</title><rect x="893.2" y="101" width="1.4" height="15.0" fill="rgb(216,171,21)" rx="2" ry="2" />
<text  x="896.17" y="111.5" ></text>
</g>
<g >
<title>math/big.(*Int).Exp (413 samples, 51.18%)</title><rect x="74.3" y="453" width="603.9" height="15.0" fill="rgb(249,158,53)" rx="2" ry="2" />
<text  x="77.34" y="463.5" >math/big.(*Int).Exp</text>
</g>
<g >
<title>istio.io/istio/pilot/pkg/config/kube/crd.FromJSON (21 samples, 2.60%)</title><rect x="906.3" y="469" width="30.7" height="15.0" fill="rgb(242,30,22)" rx="2" ry="2" />
<text  x="909.33" y="479.5" >is..</text>
</g>
<g >
<title>vendor/golang.org/long long/crypto/curve25519.cswap (1 samples, 0.12%)</title><rect x="48.0" y="469" width="1.5" height="15.0" fill="rgb(213,229,33)" rx="2" ry="2" />
<text  x="51.02" y="479.5" ></text>
</g>
<g >
<title>crypto/tls.(*serverHandshakeStateTLS13).sendServerCertificate (452 samples, 56.01%)</title><rect x="71.4" y="549" width="660.9" height="15.0" fill="rgb(220,170,48)" rx="2" ry="2" />
<text  x="74.41" y="559.5" >crypto/tls.(*serverHandshakeStateTLS13).sendServerCertificate</text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.12%)</title><rect x="824.4" y="341" width="1.5" height="15.0" fill="rgb(246,72,5)" rx="2" ry="2" />
<text  x="827.45" y="351.5" ></text>
</g>
<g >
<title>runtime.unlock (1 samples, 0.12%)</title><rect x="1153.4" y="565" width="1.5" height="15.0" fill="rgb(231,178,37)" rx="2" ry="2" />
<text  x="1156.44" y="575.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.12%)</title><rect x="947.3" y="245" width="1.4" height="15.0" fill="rgb(219,208,0)" rx="2" ry="2" />
<text  x="950.27" y="255.5" ></text>
</g>
<g >
<title>crypto/tls.(*Conn).readClientHello (2 samples, 0.25%)</title><rect x="31.9" y="565" width="3.0" height="15.0" fill="rgb(221,199,19)" rx="2" ry="2" />
<text  x="34.93" y="575.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush.func1 (1 samples, 0.12%)</title><rect x="825.9" y="357" width="1.5" height="15.0" fill="rgb(234,138,50)" rx="2" ry="2" />
<text  x="828.91" y="367.5" ></text>
</g>
<g >
<title>vendor/golang.org/long long/crypto/cryptobyte.(*Builder).addLengthPrefixed (1 samples, 0.12%)</title><rect x="730.9" y="405" width="1.4" height="15.0" fill="rgb(253,175,12)" rx="2" ry="2" />
<text  x="733.87" y="415.5" ></text>
</g>
<g >
<title>vendor/golang.org/long long/crypto/cryptobyte.(*Builder).AddUint24LengthPrefixed (1 samples, 0.12%)</title><rect x="730.9" y="469" width="1.4" height="15.0" fill="rgb(235,51,18)" rx="2" ry="2" />
<text  x="733.87" y="479.5" ></text>
</g>
<g >
<title>runtime.makeslice (2 samples, 0.25%)</title><rect x="108.0" y="389" width="2.9" height="15.0" fill="rgb(208,153,30)" rx="2" ry="2" />
<text  x="110.97" y="399.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (7 samples, 0.87%)</title><rect x="913.6" y="357" width="10.3" height="15.0" fill="rgb(225,58,8)" rx="2" ry="2" />
<text  x="916.64" y="367.5" ></text>
</g>
<g >
<title>vendor/golang.org/long long/crypto/cryptobyte.(*Builder).AddUint16LengthPrefixed (1 samples, 0.12%)</title><rect x="730.9" y="421" width="1.4" height="15.0" fill="rgb(229,23,46)" rx="2" ry="2" />
<text  x="733.87" y="431.5" ></text>
</g>
<g >
<title>math/big.nat.expNNMontgomery (399 samples, 49.44%)</title><rect x="91.9" y="421" width="583.4" height="15.0" fill="rgb(253,136,36)" rx="2" ry="2" />
<text  x="94.88" y="431.5" >math/big.nat.expNNMontgomery</text>
</g>
<g >
<title>github.com/json-iterator/go.(*Iterator).skipObject (1 samples, 0.12%)</title><rect x="1016.0" y="213" width="1.5" height="15.0" fill="rgb(230,111,46)" rx="2" ry="2" />
<text  x="1019.00" y="223.5" ></text>
</g>
<g >
<title>reflect.typedmemmove (1 samples, 0.12%)</title><rect x="929.7" y="373" width="1.5" height="15.0" fill="rgb(239,223,31)" rx="2" ry="2" />
<text  x="932.73" y="383.5" ></text>
</g>
<g >
<title>github.com/json-iterator/go.(*Iterator).skipObject (3 samples, 0.37%)</title><rect x="1018.9" y="229" width="4.4" height="15.0" fill="rgb(214,228,17)" rx="2" ry="2" />
<text  x="1021.92" y="239.5" ></text>
</g>
<g >
<title>net/http.readRequest (5 samples, 0.62%)</title><rect x="764.5" y="581" width="7.3" height="15.0" fill="rgb(252,32,19)" rx="2" ry="2" />
<text  x="767.50" y="591.5" ></text>
</g>
<g >
<title>net/http.(*connReader).startBackgroundRead (2 samples, 0.25%)</title><rect x="809.8" y="453" width="3.0" height="15.0" fill="rgb(205,95,48)" rx="2" ry="2" />
<text  x="812.83" y="463.5" ></text>
</g>
<g >
<title>go.opencensus.io/stats/view.(*viewInternal).addSample (3 samples, 0.37%)</title><rect x="10.0" y="581" width="4.4" height="15.0" fill="rgb(236,97,6)" rx="2" ry="2" />
<text  x="13.00" y="591.5" ></text>
</g>
<g >
<title>runtime.schedule (7 samples, 0.87%)</title><rect x="1154.9" y="581" width="10.2" height="15.0" fill="rgb(210,167,27)" rx="2" ry="2" />
<text  x="1157.91" y="591.5" ></text>
</g>
<g >
<title>runtime.acquirep (1 samples, 0.12%)</title><rect x="1156.4" y="549" width="1.4" height="15.0" fill="rgb(248,5,45)" rx="2" ry="2" />
<text  x="1159.37" y="559.5" ></text>
</g>
<g >
<title>crypto/tls.(*atLeastReader).Read (2 samples, 0.25%)</title><rect x="65.6" y="469" width="2.9" height="15.0" fill="rgb(205,66,5)" rx="2" ry="2" />
<text  x="68.56" y="479.5" ></text>
</g>
<g >
<title>vendor/golang.org/long long/crypto/cryptobyte.(*Builder).callContinuation (1 samples, 0.12%)</title><rect x="730.9" y="437" width="1.4" height="15.0" fill="rgb(237,73,36)" rx="2" ry="2" />
<text  x="733.87" y="447.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).update (1 samples, 0.12%)</title><rect x="891.7" y="101" width="1.5" height="15.0" fill="rgb(242,117,6)" rx="2" ry="2" />
<text  x="894.71" y="111.5" ></text>
</g>
<g >
<title>runtime.schedule (2 samples, 0.25%)</title><rect x="1150.5" y="565" width="2.9" height="15.0" fill="rgb(227,208,35)" rx="2" ry="2" />
<text  x="1153.52" y="575.5" ></text>
</g>
<g >
<title>github.com/ghodss/yaml.indirect (3 samples, 0.37%)</title><rect x="844.9" y="437" width="4.4" height="15.0" fill="rgb(215,13,24)" rx="2" ry="2" />
<text  x="847.92" y="447.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.12%)</title><rect x="947.3" y="165" width="1.4" height="15.0" fill="rgb(250,92,49)" rx="2" ry="2" />
<text  x="950.27" y="175.5" ></text>
</g>
<g >
<title>runtime.findObject (1 samples, 0.12%)</title><rect x="1096.4" y="437" width="1.5" height="15.0" fill="rgb(217,204,22)" rx="2" ry="2" />
<text  x="1099.42" y="447.5" ></text>
</g>
<g >
<title>github.com/json-iterator/go.(*Iterator).Skip (3 samples, 0.37%)</title><rect x="1013.1" y="293" width="4.4" height="15.0" fill="rgb(229,113,7)" rx="2" ry="2" />
<text  x="1016.07" y="303.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (5 samples, 0.62%)</title><rect x="817.1" y="373" width="7.3" height="15.0" fill="rgb(244,81,27)" rx="2" ry="2" />
<text  x="820.14" y="383.5" ></text>
</g>
<g >
<title>runtime.stringtoslicebyte (1 samples, 0.12%)</title><rect x="744.0" y="453" width="1.5" height="15.0" fill="rgb(226,224,50)" rx="2" ry="2" />
<text  x="747.03" y="463.5" ></text>
</g>
<g >
<title>syscall.Syscall (1 samples, 0.12%)</title><rect x="67.0" y="389" width="1.5" height="15.0" fill="rgb(252,187,24)" rx="2" ry="2" />
<text  x="70.03" y="399.5" ></text>
</g>
<g >
<title>vendor/golang.org/long long/crypto/cryptobyte.(*Builder).AddUint16LengthPrefixed (1 samples, 0.12%)</title><rect x="748.4" y="389" width="1.5" height="15.0" fill="rgb(205,92,38)" rx="2" ry="2" />
<text  x="751.41" y="399.5" ></text>
</g>
<g >
<title>gopkg.in/yaml%2ev2.(*decoder).unmarshal (1 samples, 0.12%)</title><rect x="856.6" y="341" width="1.5" height="15.0" fill="rgb(240,195,54)" rx="2" ry="2" />
<text  x="859.62" y="351.5" ></text>
</g>
<g >
<title>runtime.acquirem (1 samples, 0.12%)</title><rect x="70.0" y="485" width="1.4" height="15.0" fill="rgb(208,204,13)" rx="2" ry="2" />
<text  x="72.95" y="495.5" ></text>
</g>
<g >
<title>math/big.nat.make (1 samples, 0.12%)</title><rect x="105.0" y="389" width="1.5" height="15.0" fill="rgb(249,33,36)" rx="2" ry="2" />
<text  x="108.04" y="399.5" ></text>
</g>
<g >
<title>runtime.releasem (1 samples, 0.12%)</title><rect x="1007.2" y="277" width="1.5" height="15.0" fill="rgb(233,184,38)" rx="2" ry="2" />
<text  x="1010.22" y="287.5" ></text>
</g>
<g >
<title>sync.(*Map).Load (1 samples, 0.12%)</title><rect x="1035.0" y="389" width="1.5" height="15.0" fill="rgb(219,27,44)" rx="2" ry="2" />
<text  x="1038.01" y="399.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (2 samples, 0.25%)</title><rect x="994.1" y="229" width="2.9" height="15.0" fill="rgb(206,7,51)" rx="2" ry="2" />
<text  x="997.06" y="239.5" ></text>
</g>
<g >
<title>runtime.funcspdelta (3 samples, 0.37%)</title><rect x="1089.1" y="485" width="4.4" height="15.0" fill="rgb(248,165,47)" rx="2" ry="2" />
<text  x="1092.11" y="495.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.12%)</title><rect x="903.4" y="437" width="1.5" height="15.0" fill="rgb(246,35,54)" rx="2" ry="2" />
<text  x="906.41" y="447.5" ></text>
</g>
<g >
<title>github.com/json-iterator/go.(*Iterator).readStringSlowPath (1 samples, 0.12%)</title><rect x="1021.8" y="69" width="1.5" height="15.0" fill="rgb(241,175,48)" rx="2" ry="2" />
<text  x="1024.85" y="79.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.12%)</title><rect x="1162.2" y="501" width="1.5" height="15.0" fill="rgb(214,53,4)" rx="2" ry="2" />
<text  x="1165.22" y="511.5" ></text>
</g>
<g >
<title>runtime.tooManyOverflowBuckets (1 samples, 0.12%)</title><rect x="922.4" y="293" width="1.5" height="15.0" fill="rgb(214,7,32)" rx="2" ry="2" />
<text  x="925.42" y="303.5" ></text>
</g>
<g >
<title>runtime.getStackMap (2 samples, 0.25%)</title><rect x="916.6" y="261" width="2.9" height="15.0" fill="rgb(213,202,7)" rx="2" ry="2" />
<text  x="919.57" y="271.5" ></text>
</g>
<g >
<title>encoding/json.valueEncoder (1 samples, 0.12%)</title><rect x="945.8" y="245" width="1.5" height="15.0" fill="rgb(236,79,8)" rx="2" ry="2" />
<text  x="948.81" y="255.5" ></text>
</g>
<g >
<title>vendor/golang.org/long long/crypto/cryptobyte.(*Builder).callContinuation (1 samples, 0.12%)</title><rect x="730.9" y="501" width="1.4" height="15.0" fill="rgb(249,224,51)" rx="2" ry="2" />
<text  x="733.87" y="511.5" ></text>
</g>
<g >
<title>k8s.io/client-go/tools/leaderelection/resourcelock.(*ConfigMapLock).Get (1 samples, 0.12%)</title><rect x="30.5" y="453" width="1.4" height="15.0" fill="rgb(209,21,52)" rx="2" ry="2" />
<text  x="33.47" y="463.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (4 samples, 0.50%)</title><rect x="890.2" y="245" width="5.9" height="15.0" fill="rgb(244,160,32)" rx="2" ry="2" />
<text  x="893.25" y="255.5" ></text>
</g>
</g>
</svg>
